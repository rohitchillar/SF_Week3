{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30","program":"/home/loopmonkey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tracing","--edition=2018","/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=ba72977291c81be3","-C","extra-filename=-ba72977291c81be3","--out-dir","/home/loopmonkey/Desktop/SF_Week1/Deploy a program/crowdfunding_platform/target/rls/debug/deps","-L","dependency=/home/loopmonkey/Desktop/SF_Week1/Deploy a program/crowdfunding_platform/target/rls/debug/deps","--extern","cfg_if=/home/loopmonkey/Desktop/SF_Week1/Deploy a program/crowdfunding_platform/target/rls/debug/deps/libcfg_if-5b9b3cb1bf3d00dc.rmeta","--extern","pin_project_lite=/home/loopmonkey/Desktop/SF_Week1/Deploy a program/crowdfunding_platform/target/rls/debug/deps/libpin_project_lite-edb9d7a86d4278f3.rmeta","--extern","tracing_core=/home/loopmonkey/Desktop/SF_Week1/Deploy a program/crowdfunding_platform/target/rls/debug/deps/libtracing_core-f3ad6636af42e4b4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/loopmonkey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/loopmonkey/Desktop/SF_Week1/Deploy a program/crowdfunding_platform/target/rls/debug/deps/libtracing-ba72977291c81be3.rmeta"},"prelude":{"crate_id":{"name":"tracing","disambiguator":[11531255590759916302,0]},"crate_root":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src","external_crates":[{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":20,"id":{"name":"tracing_core","disambiguator":[814088529934866989,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[6897411809829568419,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","num":22,"id":{"name":"spin","disambiguator":[4359627840222908777,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[15527011621189862707,0]}},{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","num":24,"id":{"name":"cfg_if","disambiguator":[3174731199663182387,0]}}],"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":0,"byte_end":46386,"line_start":1,"line_end":1158,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38630,"byte_end":38640,"line_start":933,"line_end":933,"column_start":27,"column_end":37},"alias_span":null,"name":"Instrument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":811},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38669,"byte_end":38677,"line_start":934,"line_end":934,"column_start":28,"column_end":36},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":828},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38686,"byte_end":38691,"line_start":934,"line_end":934,"column_start":45,"column_end":50},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":290},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38700,"byte_end":38705,"line_start":934,"line_end":934,"column_start":59,"column_end":64},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":693},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38719,"byte_end":38729,"line_start":934,"line_end":934,"column_start":78,"column_end":88},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1168},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38768,"byte_end":38770,"line_start":937,"line_end":937,"column_start":21,"column_end":23},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":11},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38816,"byte_end":38824,"line_start":941,"line_end":941,"column_start":5,"column_end":13},"alias_span":null,"name":"callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":56},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38833,"byte_end":38841,"line_start":941,"line_end":941,"column_start":22,"column_end":30},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":443},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38848,"byte_end":38856,"line_start":942,"line_end":942,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":4},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38848,"byte_end":38856,"line_start":942,"line_end":942,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":218},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38884,"byte_end":38889,"line_start":944,"line_end":944,"column_start":24,"column_end":29},"alias_span":null,"name":"event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1083},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38891,"byte_end":38896,"line_start":944,"line_end":944,"column_start":31,"column_end":36},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":468},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38898,"byte_end":38906,"line_start":944,"line_end":944,"column_start":38,"column_end":46},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":38945,"byte_end":38949,"line_start":947,"line_end":947,"column_start":21,"column_end":25},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":151},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125579,"byte_end":125590,"line_start":132,"line_end":132,"column_start":35,"column_end":46},"alias_span":null,"name":"set_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":148},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125697,"byte_end":125709,"line_start":135,"line_end":135,"column_start":35,"column_end":47},"alias_span":null,"name":"with_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":819},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125816,"byte_end":125828,"line_start":138,"line_end":138,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":157},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125870,"byte_end":125881,"line_start":140,"line_end":140,"column_start":5,"column_end":16},"alias_span":null,"name":"get_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":152},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125883,"byte_end":125901,"line_start":140,"line_end":140,"column_start":18,"column_end":36},"alias_span":null,"name":"set_global_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":811},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125903,"byte_end":125911,"line_start":140,"line_end":140,"column_start":38,"column_end":46},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":824},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125913,"byte_end":125934,"line_start":140,"line_end":140,"column_start":48,"column_end":69},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":153},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":126242,"byte_end":126254,"line_start":149,"line_end":149,"column_start":35,"column_end":47},"alias_span":null,"name":"has_been_set","value":"","parent":{"krate":0,"index":69}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131419,"byte_end":131420,"line_start":114,"line_end":114,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"Field, Value, ValueSet","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":20,"index":1117},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147031,"byte_end":147052,"line_start":53,"line_end":53,"column_start":34,"column_end":55},"alias_span":null,"name":"ParseLevelFilterError","value":"","parent":{"krate":0,"index":182}},{"kind":"Use","ref_id":{"krate":20,"index":1101},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147054,"byte_end":147065,"line_start":53,"line_end":53,"column_start":57,"column_end":68},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":182}},{"kind":"Use","ref_id":{"krate":20,"index":1185},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162534,"byte_end":162544,"line_start":320,"line_end":320,"column_start":30,"column_end":40},"alias_span":null,"name":"Attributes","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":20,"index":1168},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162546,"byte_end":162548,"line_start":320,"line_end":320,"column_start":42,"column_end":44},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":20,"index":1193},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162550,"byte_end":162556,"line_start":320,"line_end":320,"column_start":46,"column_end":52},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":191}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":208810,"byte_end":208811,"line_start":2,"line_end":2,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"Interest, Subscriber","parent":{"krate":0,"index":337}},{"kind":"Use","ref_id":{"krate":20,"index":819},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":208919,"byte_end":208931,"line_start":6,"line_end":6,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":337}},{"kind":"Use","ref_id":{"krate":20,"index":824},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":211391,"byte_end":211412,"line_start":68,"line_end":68,"column_start":35,"column_end":56},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":337}},{"kind":"Use","ref_id":{"krate":20,"index":56},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39370,"byte_end":39378,"line_start":967,"line_end":967,"column_start":30,"column_end":38},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":353}},{"kind":"Use","ref_id":{"krate":2,"index":27},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39539,"byte_end":39545,"line_start":973,"line_end":973,"column_start":19,"column_end":25},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":353}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":0,"byte_end":46386,"line_start":1,"line_end":1158,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":69},{"krate":0,"index":95},{"krate":0,"index":113},{"krate":0,"index":182},{"krate":0,"index":191},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":353},{"krate":0,"index":398}],"decl_id":null,"docs":" A scoped, structured logging and diagnostics system.","sig":null,"attributes":[{"value":"/ A scoped, structured logging and diagnostics system.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":0,"byte_end":56,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":57,"byte_end":60,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":61,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":76,"byte_end":79,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `tracing` is a framework for instrumenting Rust programs to collect","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":80,"byte_end":151,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ structured, event-based diagnostic information.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":152,"byte_end":203,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":204,"byte_end":207,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ In asynchronous systems like Tokio, interpreting traditional log messages can","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":208,"byte_end":289,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ often be quite challenging. Since individual tasks are multiplexed on the same","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":290,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ thread, associated events and log lines are intermixed making it difficult to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":373,"byte_end":454,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ trace the logic flow. `tracing` expands upon logging-style diagnostics by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":455,"byte_end":532,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ allowing libraries and applications to record structured events with additional","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":533,"byte_end":616,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/ information about *temporality* and *causality* — unlike a log message, a span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":617,"byte_end":701,"line_start":13,"line_end":13,"column_start":1,"column_end":83}},{"value":"/ in `tracing` has a beginning and end time, may be entered and exited by the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":702,"byte_end":781,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ flow of execution, and may exist within a nested tree of similar spans. In","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":782,"byte_end":860,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ addition, `tracing` spans are *structured*, with the ability to record typed","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":861,"byte_end":941,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ data as well as textual messages.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":942,"byte_end":979,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":980,"byte_end":983,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `tracing` crate provides the APIs necessary for instrumenting libraries","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":984,"byte_end":1063,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and applications to emit trace data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1064,"byte_end":1104,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1109,"byte_end":1112,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1113,"byte_end":1149,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/ # Core Concepts","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1150,"byte_end":1169,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1170,"byte_end":1173,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The core of `tracing`'s API is composed of _spans_, _events_ and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1174,"byte_end":1242,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ _subscribers_. We'll cover these in turn.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1243,"byte_end":1288,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1289,"byte_end":1292,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1293,"byte_end":1305,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1306,"byte_end":1309,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ To record the flow of execution through a program, `tracing` introduces the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1310,"byte_end":1389,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ concept of [spans]. Unlike a log line that represents a _moment in","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1390,"byte_end":1460,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ time_, a span represents a _period of time_ with a beginning and an end. When a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1461,"byte_end":1544,"line_start":33,"line_end":33,"column_start":1,"column_end":84}},{"value":"/ program begins executing in a context or performing a unit of work, it","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1545,"byte_end":1619,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ _enters_ that context's span, and when it stops executing in that context,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1620,"byte_end":1698,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ it _exits_ the span. The span in which a thread is currently executing is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1699,"byte_end":1776,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ referred to as that thread's _current_ span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1777,"byte_end":1825,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1826,"byte_end":1829,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1830,"byte_end":1846,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1847,"byte_end":1854,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1855,"byte_end":1886,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1887,"byte_end":1904,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1905,"byte_end":1951,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ // `enter` returns a RAII guard which, when dropped, exits the span. this","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":1952,"byte_end":2029,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ // indicates that we are in the span for the current lexical scope.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2030,"byte_end":2101,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2102,"byte_end":2132,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/ // perform some work in the context of `my_span`...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2133,"byte_end":2188,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2189,"byte_end":2196,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2197,"byte_end":2203,"line_start":49,"line_end":49,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2204,"byte_end":2207,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The [`span` module][span]'s documentation provides further details on how to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2208,"byte_end":2288,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ use spans.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2289,"byte_end":2303,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2304,"byte_end":2307,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2308,"byte_end":2434,"line_start":54,"line_end":54,"column_start":1,"column_end":127}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2435,"byte_end":2438,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/  **Warning**: In asynchronous code that uses async/await syntax,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2439,"byte_end":2507,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/  `Span::enter` may produce incorrect traces if the returned drop","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2508,"byte_end":2576,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/  guard is held across an await point. See","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2577,"byte_end":2622,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/  [the method documentation][Span#in-asynchronous-code] for details.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2623,"byte_end":2694,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2695,"byte_end":2698,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ </pre></div>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2699,"byte_end":2715,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2716,"byte_end":2719,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ## Events","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2720,"byte_end":2733,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2734,"byte_end":2737,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ An [`Event`] represents a _moment_ in time. It signifies something that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2738,"byte_end":2813,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ happened while a trace was being recorded. `Event`s are comparable to the log","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2814,"byte_end":2895,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ records emitted by unstructured logging code, but unlike a typical log line,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2896,"byte_end":2976,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ an `Event` may occur within the context of a span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":2977,"byte_end":3031,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3032,"byte_end":3035,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3036,"byte_end":3052,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3053,"byte_end":3060,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tracing::{event, span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3061,"byte_end":3099,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3100,"byte_end":3103,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3104,"byte_end":3121,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/ // records an event outside of any span context:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3122,"byte_end":3174,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/ event!(Level::INFO, \"something happened\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3175,"byte_end":3221,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3222,"byte_end":3225,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3226,"byte_end":3271,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/ let _guard = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3272,"byte_end":3302,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3303,"byte_end":3306,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // records an event within \"my_span\".","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3307,"byte_end":3348,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/ event!(Level::DEBUG, \"something happened inside my_span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3349,"byte_end":3411,"line_start":82,"line_end":82,"column_start":1,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3412,"byte_end":3419,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3420,"byte_end":3426,"line_start":84,"line_end":84,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3427,"byte_end":3430,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ In general, events should be used to represent points in time _within_ a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3431,"byte_end":3507,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/ span — a request returned with a given status code, _n_ new items were","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3508,"byte_end":3584,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ taken from a queue, and so on.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3585,"byte_end":3619,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3620,"byte_end":3623,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The [`Event` struct][`Event`] documentation provides further details on using","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3624,"byte_end":3705,"line_start":90,"line_end":90,"column_start":1,"column_end":82}},{"value":"/ events.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3706,"byte_end":3717,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3718,"byte_end":3721,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ## Subscribers","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3722,"byte_end":3740,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3741,"byte_end":3744,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ As `Span`s and `Event`s occur, they are recorded or aggregated by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3745,"byte_end":3814,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ implementations of the [`Subscriber`] trait. `Subscriber`s are notified","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3815,"byte_end":3890,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ when an `Event` takes place and when a `Span` is entered or exited. These","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3891,"byte_end":3968,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/ notifications are represented by the following `Subscriber` trait methods:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":3969,"byte_end":4047,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4048,"byte_end":4051,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ + [`event`][Subscriber::event], called when an `Event` takes place,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4052,"byte_end":4123,"line_start":100,"line_end":100,"column_start":1,"column_end":72}},{"value":"/ + [`enter`], called when execution enters a `Span`,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4124,"byte_end":4179,"line_start":101,"line_end":101,"column_start":1,"column_end":56}},{"value":"/ + [`exit`], called when execution exits a `Span`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4180,"byte_end":4232,"line_start":102,"line_end":102,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4233,"byte_end":4236,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ In addition, subscribers may implement the [`enabled`] function to _filter_","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4237,"byte_end":4316,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/ the notifications they receive based on [metadata] describing each `Span`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4317,"byte_end":4394,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/ or `Event`. If a call to `Subscriber::enabled` returns `false` for a given","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4395,"byte_end":4473,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ set of metadata, that `Subscriber` will *not* be notified about the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4474,"byte_end":4545,"line_start":107,"line_end":107,"column_start":1,"column_end":72}},{"value":"/ corresponding `Span` or `Event`. For performance reasons, if no currently","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4546,"byte_end":4623,"line_start":108,"line_end":108,"column_start":1,"column_end":78}},{"value":"/ active subscribers express interest in a given set of metadata by returning","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4624,"byte_end":4703,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ `true`, then the corresponding `Span` or `Event` will never be constructed.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4704,"byte_end":4783,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4784,"byte_end":4787,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4788,"byte_end":4799,"line_start":112,"line_end":112,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4800,"byte_end":4803,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ First, add this to your `Cargo.toml`:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4804,"byte_end":4845,"line_start":114,"line_end":114,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4846,"byte_end":4849,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4850,"byte_end":4861,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4862,"byte_end":4880,"line_start":117,"line_end":117,"column_start":1,"column_end":19}},{"value":"/ tracing = \"0.1\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4881,"byte_end":4900,"line_start":118,"line_end":118,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4901,"byte_end":4908,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4909,"byte_end":4912,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.42+][msrv]*","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4913,"byte_end":4967,"line_start":121,"line_end":121,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4968,"byte_end":4971,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ## Recording Spans and Events","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":4972,"byte_end":5005,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5006,"byte_end":5009,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Spans and events are recorded using macros.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5010,"byte_end":5057,"line_start":125,"line_end":125,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5058,"byte_end":5061,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ### Spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5062,"byte_end":5075,"line_start":127,"line_end":127,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5076,"byte_end":5079,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] macro expands to a [`Span` struct][`Span`] which is used to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5080,"byte_end":5157,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ record a span. The [`Span::enter`] method on that struct records that the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5158,"byte_end":5235,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ span has been entered, and returns a [RAII] guard object, which will exit","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5236,"byte_end":5313,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ the span when dropped.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5314,"byte_end":5340,"line_start":132,"line_end":132,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5341,"byte_end":5344,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5345,"byte_end":5361,"line_start":134,"line_end":134,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5362,"byte_end":5365,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5366,"byte_end":5377,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5378,"byte_end":5409,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5410,"byte_end":5427,"line_start":138,"line_end":138,"column_start":1,"column_end":18}},{"value":"/ // Construct a new span named \"my span\" with trace log level.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5428,"byte_end":5493,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5494,"byte_end":5540,"line_start":140,"line_end":140,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5541,"byte_end":5544,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ // Enter the span, returning a guard object.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5545,"byte_end":5593,"line_start":142,"line_end":142,"column_start":1,"column_end":49}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5594,"byte_end":5624,"line_start":143,"line_end":143,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5625,"byte_end":5628,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ // Any trace events that occur before the guard is dropped will occur","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5629,"byte_end":5702,"line_start":145,"line_end":145,"column_start":1,"column_end":74}},{"value":"/ // within the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5703,"byte_end":5726,"line_start":146,"line_end":146,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5727,"byte_end":5730,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ // Dropping the guard will exit the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5731,"byte_end":5776,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5777,"byte_end":5784,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5785,"byte_end":5792,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5793,"byte_end":5796,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ The [`#[instrument]`][instrument] attribute provides an easy way to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5797,"byte_end":5868,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/ add `tracing` spans to functions. A function annotated with `#[instrument]`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5869,"byte_end":5948,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ will create and enter a span with that function's name every time the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":5949,"byte_end":6022,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ function is called, with arguments to that function will be recorded as","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6023,"byte_end":6098,"line_start":155,"line_end":155,"column_start":1,"column_end":76}},{"value":"/ fields using `fmt::Debug`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6099,"byte_end":6129,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6130,"byte_end":6133,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6134,"byte_end":6150,"line_start":158,"line_end":158,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6151,"byte_end":6164,"line_start":159,"line_end":159,"column_start":1,"column_end":14}},{"value":"/ # // this doctest is ignored because we don't have a way to say","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6165,"byte_end":6232,"line_start":160,"line_end":160,"column_start":1,"column_end":68}},{"value":"/ # // that it should only be run with cfg(feature = \"attributes\")","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6233,"byte_end":6301,"line_start":161,"line_end":161,"column_start":1,"column_end":69}},{"value":"/ use tracing::{Level, event, instrument};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6302,"byte_end":6346,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6347,"byte_end":6350,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ #[instrument]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6351,"byte_end":6368,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/ pub fn my_function(my_arg: usize) {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6369,"byte_end":6408,"line_start":165,"line_end":165,"column_start":1,"column_end":40}},{"value":"/     // This event will be recorded inside a span named `my_function` with the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6409,"byte_end":6490,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/     // field `my_arg`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6491,"byte_end":6517,"line_start":167,"line_end":167,"column_start":1,"column_end":27}},{"value":"/     event!(Level::INFO, \"inside my_function!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6518,"byte_end":6569,"line_start":168,"line_end":168,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6570,"byte_end":6584,"line_start":169,"line_end":169,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6585,"byte_end":6590,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6591,"byte_end":6609,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6610,"byte_end":6617,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6618,"byte_end":6621,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ For functions which don't have built-in tracing support and can't have","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6622,"byte_end":6696,"line_start":174,"line_end":174,"column_start":1,"column_end":75}},{"value":"/ the `#[instrument]` attribute applied (such as from an external crate),","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6697,"byte_end":6772,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ the [`Span` struct][`Span`] has a [`in_scope()` method][`in_scope`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6773,"byte_end":6844,"line_start":176,"line_end":176,"column_start":1,"column_end":72}},{"value":"/ which can be used to easily wrap synchonous code in a span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6845,"byte_end":6908,"line_start":177,"line_end":177,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6909,"byte_end":6912,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6913,"byte_end":6929,"line_start":179,"line_end":179,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6930,"byte_end":6941,"line_start":180,"line_end":180,"column_start":1,"column_end":12}},{"value":"/ use tracing::info_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6942,"byte_end":6969,"line_start":181,"line_end":181,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6970,"byte_end":6973,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # fn doc() -> Result<(), ()> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":6974,"byte_end":7008,"line_start":183,"line_end":183,"column_start":1,"column_end":35}},{"value":"/ # mod serde_json {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7009,"byte_end":7031,"line_start":184,"line_end":184,"column_start":1,"column_end":23}},{"value":"/ #    pub(crate) fn from_slice(buf: &[u8]) -> Result<(), ()> { Ok(()) }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7032,"byte_end":7106,"line_start":185,"line_end":185,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7107,"byte_end":7114,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/ # let buf: [u8; 0] = [];","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7115,"byte_end":7143,"line_start":187,"line_end":187,"column_start":1,"column_end":29}},{"value":"/ let json = info_span!(\"json.parse\").in_scope(|| serde_json::from_slice(&buf))?;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7144,"byte_end":7227,"line_start":188,"line_end":188,"column_start":1,"column_end":84}},{"value":"/ # let _ = json; // suppress unused variable warning","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7228,"byte_end":7283,"line_start":189,"line_end":189,"column_start":1,"column_end":56}},{"value":"/ # Ok(())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7284,"byte_end":7296,"line_start":190,"line_end":190,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7297,"byte_end":7304,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7305,"byte_end":7312,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7313,"byte_end":7316,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ You can find more examples showing how to use this crate [here][examples].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7317,"byte_end":7395,"line_start":194,"line_end":194,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7396,"byte_end":7399,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [RAII]: https://github.com/rust-unofficial/patterns/blob/master/patterns/behavioural/RAII.md","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7400,"byte_end":7496,"line_start":196,"line_end":196,"column_start":1,"column_end":97}},{"value":"/ [examples]: https://github.com/tokio-rs/tracing/tree/master/examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7497,"byte_end":7569,"line_start":197,"line_end":197,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7570,"byte_end":7573,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ### Events","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7574,"byte_end":7588,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7589,"byte_end":7592,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`Event`]s are recorded using the [`event!`] macro:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7593,"byte_end":7648,"line_start":201,"line_end":201,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7649,"byte_end":7652,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7653,"byte_end":7664,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7665,"byte_end":7682,"line_start":204,"line_end":204,"column_start":1,"column_end":18}},{"value":"/ use tracing::{event, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7683,"byte_end":7715,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/ event!(Level::INFO, \"something has happened!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7716,"byte_end":7767,"line_start":206,"line_end":206,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7768,"byte_end":7775,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7776,"byte_end":7783,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7784,"byte_end":7787,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ## Using the Macros","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7788,"byte_end":7811,"line_start":210,"line_end":210,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7812,"byte_end":7815,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] and [`event!`] macros as well as the `#[instrument]` attribute","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7816,"byte_end":7896,"line_start":212,"line_end":212,"column_start":1,"column_end":81}},{"value":"/ use fairly similar syntax, with some exceptions.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7897,"byte_end":7949,"line_start":213,"line_end":213,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7950,"byte_end":7953,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ ### Configuring Attributes","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7954,"byte_end":7984,"line_start":215,"line_end":215,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7985,"byte_end":7988,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Both macros require a [`Level`] specifying the verbosity of the span or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":7989,"byte_end":8064,"line_start":217,"line_end":217,"column_start":1,"column_end":76}},{"value":"/ event. Optionally, the [target] and [parent span] may be overridden. If the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8065,"byte_end":8144,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"/ target and parent span are not overridden, they will default to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8145,"byte_end":8216,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ module path where the macro was invoked and the current span (as determined","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8217,"byte_end":8296,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ by the subscriber), respectively.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8297,"byte_end":8334,"line_start":221,"line_end":221,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8335,"byte_end":8338,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8339,"byte_end":8355,"line_start":223,"line_end":223,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8356,"byte_end":8359,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8360,"byte_end":8367,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8368,"byte_end":8408,"line_start":226,"line_end":226,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8409,"byte_end":8426,"line_start":227,"line_end":227,"column_start":1,"column_end":18}},{"value":"/ span!(target: \"app_spans\", Level::TRACE, \"my span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8427,"byte_end":8483,"line_start":228,"line_end":228,"column_start":1,"column_end":57}},{"value":"/ event!(target: \"app_events\", Level::INFO, \"something has happened!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8484,"byte_end":8557,"line_start":229,"line_end":229,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8558,"byte_end":8565,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8566,"byte_end":8573,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8574,"byte_end":8581,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8582,"byte_end":8622,"line_start":233,"line_end":233,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8623,"byte_end":8640,"line_start":234,"line_end":234,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8641,"byte_end":8687,"line_start":235,"line_end":235,"column_start":1,"column_end":47}},{"value":"/ event!(parent: &span, Level::INFO, \"something has happened!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8688,"byte_end":8754,"line_start":236,"line_end":236,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8755,"byte_end":8762,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8763,"byte_end":8770,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8771,"byte_end":8774,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ The span macros also take a string literal after the level, to set the name","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8775,"byte_end":8854,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ of the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8855,"byte_end":8871,"line_start":241,"line_end":241,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8872,"byte_end":8875,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ### Recording Fields","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8876,"byte_end":8900,"line_start":243,"line_end":243,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8901,"byte_end":8904,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ Structured fields on spans and events are specified using the syntax","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8905,"byte_end":8977,"line_start":245,"line_end":245,"column_start":1,"column_end":73}},{"value":"/ `field_name = field_value`. Fields are separated by commas.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":8978,"byte_end":9041,"line_start":246,"line_end":246,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9042,"byte_end":9045,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9046,"byte_end":9053,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9054,"byte_end":9088,"line_start":249,"line_end":249,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9089,"byte_end":9106,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/ // records an event with two fields:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9107,"byte_end":9147,"line_start":251,"line_end":251,"column_start":1,"column_end":41}},{"value":"/ //  - \"answer\", with the value 42","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9148,"byte_end":9185,"line_start":252,"line_end":252,"column_start":1,"column_end":38}},{"value":"/ //  - \"question\", with the value \"life, the universe and everything\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9186,"byte_end":9258,"line_start":253,"line_end":253,"column_start":1,"column_end":73}},{"value":"/ event!(Level::INFO, answer = 42, question = \"life, the universe, and everything\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9259,"byte_end":9345,"line_start":254,"line_end":254,"column_start":1,"column_end":87}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9346,"byte_end":9353,"line_start":255,"line_end":255,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9354,"byte_end":9361,"line_start":256,"line_end":256,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9362,"byte_end":9365,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ As shorthand, local variables may be used as field values without an","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9366,"byte_end":9438,"line_start":258,"line_end":258,"column_start":1,"column_end":73}},{"value":"/ assignment, similar to [struct initializers]. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9439,"byte_end":9501,"line_start":259,"line_end":259,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9502,"byte_end":9505,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9506,"byte_end":9513,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9514,"byte_end":9547,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9548,"byte_end":9565,"line_start":263,"line_end":263,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9566,"byte_end":9590,"line_start":264,"line_end":264,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9591,"byte_end":9594,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ span!(Level::TRACE, \"login\", user);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9595,"byte_end":9634,"line_start":266,"line_end":266,"column_start":1,"column_end":40}},{"value":"/ // is equivalent to:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9635,"byte_end":9659,"line_start":267,"line_end":267,"column_start":1,"column_end":25}},{"value":"/ span!(Level::TRACE, \"login\", user = user);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9660,"byte_end":9706,"line_start":268,"line_end":268,"column_start":1,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9707,"byte_end":9714,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9715,"byte_end":9721,"line_start":270,"line_end":270,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9722,"byte_end":9725,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Field names can include dots, but should not be terminated by them:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9726,"byte_end":9797,"line_start":272,"line_end":272,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9798,"byte_end":9805,"line_start":273,"line_end":273,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9806,"byte_end":9839,"line_start":274,"line_end":274,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9840,"byte_end":9857,"line_start":275,"line_end":275,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9858,"byte_end":9882,"line_start":276,"line_end":276,"column_start":1,"column_end":25}},{"value":"/ let email = \"ferris@rust-lang.org\";","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9883,"byte_end":9922,"line_start":277,"line_end":277,"column_start":1,"column_end":40}},{"value":"/ span!(Level::TRACE, \"login\", user, user.email = email);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9923,"byte_end":9982,"line_start":278,"line_end":278,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9983,"byte_end":9990,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9991,"byte_end":9997,"line_start":280,"line_end":280,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":9998,"byte_end":10001,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ Since field names can include dots, fields on local structs can be used","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10002,"byte_end":10077,"line_start":282,"line_end":282,"column_start":1,"column_end":76}},{"value":"/ using the local variable shorthand:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10078,"byte_end":10117,"line_start":283,"line_end":283,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10118,"byte_end":10125,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10126,"byte_end":10159,"line_start":285,"line_end":285,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10160,"byte_end":10177,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"/ # struct User {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10178,"byte_end":10197,"line_start":287,"line_end":287,"column_start":1,"column_end":20}},{"value":"/ #    name: &'static str,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10198,"byte_end":10226,"line_start":288,"line_end":288,"column_start":1,"column_end":29}},{"value":"/ #    email: &'static str,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10227,"byte_end":10256,"line_start":289,"line_end":289,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10257,"byte_end":10264,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ let user = User {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10265,"byte_end":10286,"line_start":291,"line_end":291,"column_start":1,"column_end":22}},{"value":"/     name: \"ferris\",","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10287,"byte_end":10310,"line_start":292,"line_end":292,"column_start":1,"column_end":24}},{"value":"/     email: \"ferris@rust-lang.org\",","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10311,"byte_end":10349,"line_start":293,"line_end":293,"column_start":1,"column_end":39}},{"value":"/ };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10350,"byte_end":10356,"line_start":294,"line_end":294,"column_start":1,"column_end":7}},{"value":"/ // the span will have the fields `user.name = \"ferris\"` and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10357,"byte_end":10420,"line_start":295,"line_end":295,"column_start":1,"column_end":64}},{"value":"/ // `user.email = \"ferris@rust-lang.org\"`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10421,"byte_end":10466,"line_start":296,"line_end":296,"column_start":1,"column_end":46}},{"value":"/ span!(Level::TRACE, \"login\", user.name, user.email);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10467,"byte_end":10523,"line_start":297,"line_end":297,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10524,"byte_end":10531,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10532,"byte_end":10538,"line_start":299,"line_end":299,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10539,"byte_end":10542,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ Fields with names that are not Rust identifiers, or with names that are Rust reserved words,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10543,"byte_end":10639,"line_start":301,"line_end":301,"column_start":1,"column_end":97}},{"value":"/ may be created using quoted string literals. However, this may not be used with the local","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10640,"byte_end":10733,"line_start":302,"line_end":302,"column_start":1,"column_end":94}},{"value":"/ variable shorthand.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10734,"byte_end":10757,"line_start":303,"line_end":303,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10758,"byte_end":10765,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10766,"byte_end":10799,"line_start":305,"line_end":305,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10800,"byte_end":10817,"line_start":306,"line_end":306,"column_start":1,"column_end":18}},{"value":"/ // records an event with fields whose names are not Rust identifiers","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10818,"byte_end":10890,"line_start":307,"line_end":307,"column_start":1,"column_end":73}},{"value":"/ //  - \"guid:x-request-id\", containing a `:`, with the value \"abcdef\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10891,"byte_end":10963,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ //  - \"type\", which is a reserved word, with the value \"request\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":10964,"byte_end":11032,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/ span!(Level::TRACE, \"api\", \"guid:x-request-id\" = \"abcdef\", \"type\" = \"request\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11033,"byte_end":11116,"line_start":310,"line_end":310,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11117,"byte_end":11124,"line_start":311,"line_end":311,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11125,"byte_end":11131,"line_start":312,"line_end":312,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11132,"byte_end":11135,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ The `?` sigil is shorthand that specifies a field should be recorded using","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11136,"byte_end":11214,"line_start":314,"line_end":314,"column_start":1,"column_end":79}},{"value":"/ its [`fmt::Debug`] implementation:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11215,"byte_end":11253,"line_start":315,"line_end":315,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11254,"byte_end":11261,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11262,"byte_end":11296,"line_start":317,"line_end":317,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11297,"byte_end":11314,"line_start":318,"line_end":318,"column_start":1,"column_end":18}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11315,"byte_end":11335,"line_start":319,"line_end":319,"column_start":1,"column_end":21}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11336,"byte_end":11357,"line_start":320,"line_end":320,"column_start":1,"column_end":22}},{"value":"/     field: &'static str,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11358,"byte_end":11386,"line_start":321,"line_end":321,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11387,"byte_end":11392,"line_start":322,"line_end":322,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11393,"byte_end":11396,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11397,"byte_end":11427,"line_start":324,"line_end":324,"column_start":1,"column_end":31}},{"value":"/     field: \"Hello world!\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11428,"byte_end":11457,"line_start":325,"line_end":325,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11458,"byte_end":11464,"line_start":326,"line_end":326,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11465,"byte_end":11468,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ // `my_struct` will be recorded using its `fmt::Debug` implementation.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11469,"byte_end":11543,"line_start":328,"line_end":328,"column_start":1,"column_end":75}},{"value":"/ event!(Level::TRACE, greeting = ?my_struct);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11544,"byte_end":11592,"line_start":329,"line_end":329,"column_start":1,"column_end":49}},{"value":"/ // is equivalent to:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11593,"byte_end":11617,"line_start":330,"line_end":330,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::debug(&my_struct));","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11618,"byte_end":11689,"line_start":331,"line_end":331,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11690,"byte_end":11697,"line_start":332,"line_end":332,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11698,"byte_end":11705,"line_start":333,"line_end":333,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11706,"byte_end":11709,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ The `%` sigil operates similarly, but indicates that the value should be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11710,"byte_end":11786,"line_start":335,"line_end":335,"column_start":1,"column_end":77}},{"value":"/ recorded using its [`fmt::Display`] implementation:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11787,"byte_end":11842,"line_start":336,"line_end":336,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11843,"byte_end":11850,"line_start":337,"line_end":337,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11851,"byte_end":11885,"line_start":338,"line_end":338,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11886,"byte_end":11903,"line_start":339,"line_end":339,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11904,"byte_end":11926,"line_start":340,"line_end":340,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11927,"byte_end":11950,"line_start":341,"line_end":341,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11951,"byte_end":11981,"line_start":342,"line_end":342,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11982,"byte_end":11989,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11990,"byte_end":11995,"line_start":344,"line_end":344,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":11996,"byte_end":12028,"line_start":345,"line_end":345,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12029,"byte_end":12060,"line_start":346,"line_end":346,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12061,"byte_end":12069,"line_start":347,"line_end":347,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12070,"byte_end":12152,"line_start":348,"line_end":348,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, greeting = %my_struct.field);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12153,"byte_end":12207,"line_start":349,"line_end":349,"column_start":1,"column_end":55}},{"value":"/ // is equivalent to:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12208,"byte_end":12232,"line_start":350,"line_end":350,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::display(&my_struct.field));","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12233,"byte_end":12312,"line_start":351,"line_end":351,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12313,"byte_end":12320,"line_start":352,"line_end":352,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12321,"byte_end":12328,"line_start":353,"line_end":353,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12329,"byte_end":12332,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ The `%` and `?` sigils may also be used with local variable shorthand:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12333,"byte_end":12407,"line_start":355,"line_end":355,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12408,"byte_end":12411,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12412,"byte_end":12419,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12420,"byte_end":12454,"line_start":358,"line_end":358,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12455,"byte_end":12472,"line_start":359,"line_end":359,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12473,"byte_end":12495,"line_start":360,"line_end":360,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12496,"byte_end":12519,"line_start":361,"line_end":361,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12520,"byte_end":12550,"line_start":362,"line_end":362,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12551,"byte_end":12558,"line_start":363,"line_end":363,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12559,"byte_end":12564,"line_start":364,"line_end":364,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12565,"byte_end":12597,"line_start":365,"line_end":365,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12598,"byte_end":12629,"line_start":366,"line_end":366,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12630,"byte_end":12638,"line_start":367,"line_end":367,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12639,"byte_end":12721,"line_start":368,"line_end":368,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, %my_struct.field);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12722,"byte_end":12765,"line_start":369,"line_end":369,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12766,"byte_end":12773,"line_start":370,"line_end":370,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12774,"byte_end":12781,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12782,"byte_end":12785,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ Additionally, a span may declare fields with the special value [`Empty`],","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12786,"byte_end":12863,"line_start":373,"line_end":373,"column_start":1,"column_end":78}},{"value":"/ which indicates that that the value for that field does not currently exist","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12864,"byte_end":12943,"line_start":374,"line_end":374,"column_start":1,"column_end":80}},{"value":"/ but may be recorded later. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12944,"byte_end":12987,"line_start":375,"line_end":375,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12988,"byte_end":12991,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":12992,"byte_end":12999,"line_start":377,"line_end":377,"column_start":1,"column_end":8}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13000,"byte_end":13037,"line_start":378,"line_end":378,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13038,"byte_end":13041,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13042,"byte_end":13125,"line_start":380,"line_end":380,"column_start":1,"column_end":84}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13126,"byte_end":13160,"line_start":381,"line_end":381,"column_start":1,"column_end":35}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13161,"byte_end":13249,"line_start":382,"line_end":382,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13250,"byte_end":13253,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13254,"byte_end":13264,"line_start":384,"line_end":384,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13265,"byte_end":13268,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13269,"byte_end":13316,"line_start":386,"line_end":386,"column_start":1,"column_end":48}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13317,"byte_end":13363,"line_start":387,"line_end":387,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13364,"byte_end":13371,"line_start":388,"line_end":388,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13372,"byte_end":13375,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ Note that a span may have up to 32 fields. The following will not compile:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13376,"byte_end":13454,"line_start":390,"line_end":390,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13455,"byte_end":13458,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13459,"byte_end":13483,"line_start":392,"line_end":392,"column_start":1,"column_end":25}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13484,"byte_end":13509,"line_start":393,"line_end":393,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13510,"byte_end":13527,"line_start":394,"line_end":394,"column_start":1,"column_end":18}},{"value":"/ let bad_span = span!(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13528,"byte_end":13553,"line_start":395,"line_end":395,"column_start":1,"column_end":26}},{"value":"/     Level::TRACE,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13554,"byte_end":13575,"line_start":396,"line_end":396,"column_start":1,"column_end":22}},{"value":"/     \"too many fields!\",","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13576,"byte_end":13603,"line_start":397,"line_end":397,"column_start":1,"column_end":28}},{"value":"/     a = 1, b = 2, c = 3, d = 4, e = 5, f = 6, g = 7, h = 8, i = 9,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13604,"byte_end":13674,"line_start":398,"line_end":398,"column_start":1,"column_end":71}},{"value":"/     j = 10, k = 11, l = 12, m = 13, n = 14, o = 15, p = 16, q = 17,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13675,"byte_end":13746,"line_start":399,"line_end":399,"column_start":1,"column_end":72}},{"value":"/     r = 18, s = 19, t = 20, u = 21, v = 22, w = 23, x = 24, y = 25,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13747,"byte_end":13818,"line_start":400,"line_end":400,"column_start":1,"column_end":72}},{"value":"/     z = 26, aa = 27, bb = 28, cc = 29, dd = 30, ee = 31, ff = 32, gg = 33","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13819,"byte_end":13896,"line_start":401,"line_end":401,"column_start":1,"column_end":78}},{"value":"/ );","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13897,"byte_end":13903,"line_start":402,"line_end":402,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13904,"byte_end":13911,"line_start":403,"line_end":403,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13912,"byte_end":13919,"line_start":404,"line_end":404,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13920,"byte_end":13923,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ Finally, events may also include human-readable messages, in the form of a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":13924,"byte_end":14002,"line_start":406,"line_end":406,"column_start":1,"column_end":79}},{"value":"/ [format string][fmt] and (optional) arguments, **after** the event's","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14003,"byte_end":14075,"line_start":407,"line_end":407,"column_start":1,"column_end":73}},{"value":"/ key-value fields. If a format string and arguments are provided,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14076,"byte_end":14144,"line_start":408,"line_end":408,"column_start":1,"column_end":69}},{"value":"/ they will implicitly create a new field named `message` whose value is the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14145,"byte_end":14223,"line_start":409,"line_end":409,"column_start":1,"column_end":79}},{"value":"/ provided set of format arguments.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14224,"byte_end":14261,"line_start":410,"line_end":410,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14262,"byte_end":14265,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14266,"byte_end":14282,"line_start":412,"line_end":412,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14283,"byte_end":14286,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14287,"byte_end":14294,"line_start":414,"line_end":414,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14295,"byte_end":14329,"line_start":415,"line_end":415,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14330,"byte_end":14347,"line_start":416,"line_end":416,"column_start":1,"column_end":18}},{"value":"/ let question = \"the ultimate question of life, the universe, and everything\";","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14348,"byte_end":14429,"line_start":417,"line_end":417,"column_start":1,"column_end":82}},{"value":"/ let answer = 42;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14430,"byte_end":14450,"line_start":418,"line_end":418,"column_start":1,"column_end":21}},{"value":"/ // records an event with the following fields:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14451,"byte_end":14501,"line_start":419,"line_end":419,"column_start":1,"column_end":51}},{"value":"/ // - `question.answer` with the value 42,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14502,"byte_end":14547,"line_start":420,"line_end":420,"column_start":1,"column_end":46}},{"value":"/ // - `question.tricky` with the value `true`,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14548,"byte_end":14597,"line_start":421,"line_end":421,"column_start":1,"column_end":50}},{"value":"/ // - \"message\", with the value \"the answer to the ultimate question of life, the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14598,"byte_end":14682,"line_start":422,"line_end":422,"column_start":1,"column_end":85}},{"value":"/ //    universe, and everything is 42.\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14683,"byte_end":14725,"line_start":423,"line_end":423,"column_start":1,"column_end":43}},{"value":"/ event!(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14726,"byte_end":14737,"line_start":424,"line_end":424,"column_start":1,"column_end":12}},{"value":"/     Level::DEBUG,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14738,"byte_end":14759,"line_start":425,"line_end":425,"column_start":1,"column_end":22}},{"value":"/     question.answer = answer,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14760,"byte_end":14793,"line_start":426,"line_end":426,"column_start":1,"column_end":34}},{"value":"/     question.tricky = true,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14794,"byte_end":14825,"line_start":427,"line_end":427,"column_start":1,"column_end":32}},{"value":"/     \"the answer to {} is {}.\", question, answer","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14826,"byte_end":14877,"line_start":428,"line_end":428,"column_start":1,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14878,"byte_end":14884,"line_start":429,"line_end":429,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14885,"byte_end":14892,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14893,"byte_end":14900,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14901,"byte_end":14904,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ Specifying a formatted message in this manner does not allocate by default.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14905,"byte_end":14984,"line_start":433,"line_end":433,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14985,"byte_end":14988,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ [struct initializers]: https://doc.rust-lang.org/book/ch05-01-defining-structs.html#using-the-field-init-shorthand-when-variables-and-fields-have-the-same-name","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":14989,"byte_end":15152,"line_start":435,"line_end":435,"column_start":1,"column_end":164}},{"value":"/ [target]: struct.Metadata.html#method.target","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15153,"byte_end":15201,"line_start":436,"line_end":436,"column_start":1,"column_end":49}},{"value":"/ [parent span]: span/struct.Attributes.html#method.parent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15202,"byte_end":15262,"line_start":437,"line_end":437,"column_start":1,"column_end":61}},{"value":"/ [determined contextually]: span/struct.Attributes.html#method.is_contextual","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15263,"byte_end":15342,"line_start":438,"line_end":438,"column_start":1,"column_end":80}},{"value":"/ [`fmt::Debug`]: https://doc.rust-lang.org/std/fmt/trait.Debug.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15343,"byte_end":15413,"line_start":439,"line_end":439,"column_start":1,"column_end":71}},{"value":"/ [`fmt::Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15414,"byte_end":15488,"line_start":440,"line_end":440,"column_start":1,"column_end":75}},{"value":"/ [fmt]: https://doc.rust-lang.org/std/fmt/#usage","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15489,"byte_end":15540,"line_start":441,"line_end":441,"column_start":1,"column_end":52}},{"value":"/ [`Empty`]: field/struct.Empty.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15541,"byte_end":15579,"line_start":442,"line_end":442,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15580,"byte_end":15583,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ ### Shorthand Macros","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15584,"byte_end":15608,"line_start":444,"line_end":444,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15609,"byte_end":15612,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ `tracing` also offers a number of macros with preset verbosity levels.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15613,"byte_end":15687,"line_start":446,"line_end":446,"column_start":1,"column_end":75}},{"value":"/ The [`trace!`], [`debug!`], [`info!`], [`warn!`], and [`error!`] behave","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15688,"byte_end":15763,"line_start":447,"line_end":447,"column_start":1,"column_end":76}},{"value":"/ similarly to the [`event!`] macro, but with the [`Level`] argument already","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15764,"byte_end":15842,"line_start":448,"line_end":448,"column_start":1,"column_end":79}},{"value":"/ specified, while the corresponding [`trace_span!`], [`debug_span!`],","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15843,"byte_end":15915,"line_start":449,"line_end":449,"column_start":1,"column_end":73}},{"value":"/ [`info_span!`], [`warn_span!`], and [`error_span!`] macros are the same,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15916,"byte_end":15992,"line_start":450,"line_end":450,"column_start":1,"column_end":77}},{"value":"/ but for the [`span!`] macro.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":15993,"byte_end":16025,"line_start":451,"line_end":451,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16026,"byte_end":16029,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ These are intended both as a shorthand, and for compatibility with the [`log`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16030,"byte_end":16112,"line_start":453,"line_end":453,"column_start":1,"column_end":83}},{"value":"/ crate (see the next section).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16113,"byte_end":16146,"line_start":454,"line_end":454,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16147,"byte_end":16150,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ [`span!`]: macro.span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16151,"byte_end":16181,"line_start":456,"line_end":456,"column_start":1,"column_end":31}},{"value":"/ [`event!`]: macro.event.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16182,"byte_end":16214,"line_start":457,"line_end":457,"column_start":1,"column_end":33}},{"value":"/ [`trace!`]: macro.trace.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16215,"byte_end":16247,"line_start":458,"line_end":458,"column_start":1,"column_end":33}},{"value":"/ [`debug!`]: macro.debug.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16248,"byte_end":16280,"line_start":459,"line_end":459,"column_start":1,"column_end":33}},{"value":"/ [`info!`]: macro.info.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16281,"byte_end":16311,"line_start":460,"line_end":460,"column_start":1,"column_end":31}},{"value":"/ [`warn!`]: macro.warn.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16312,"byte_end":16342,"line_start":461,"line_end":461,"column_start":1,"column_end":31}},{"value":"/ [`error!`]: macro.error.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16343,"byte_end":16375,"line_start":462,"line_end":462,"column_start":1,"column_end":33}},{"value":"/ [`trace_span!`]: macro.trace_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16376,"byte_end":16418,"line_start":463,"line_end":463,"column_start":1,"column_end":43}},{"value":"/ [`debug_span!`]: macro.debug_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16419,"byte_end":16461,"line_start":464,"line_end":464,"column_start":1,"column_end":43}},{"value":"/ [`info_span!`]: macro.info_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16462,"byte_end":16502,"line_start":465,"line_end":465,"column_start":1,"column_end":41}},{"value":"/ [`warn_span!`]: macro.warn_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16503,"byte_end":16543,"line_start":466,"line_end":466,"column_start":1,"column_end":41}},{"value":"/ [`error_span!`]: macro.error_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16544,"byte_end":16586,"line_start":467,"line_end":467,"column_start":1,"column_end":43}},{"value":"/ [`Level`]: struct.Level.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16587,"byte_end":16619,"line_start":468,"line_end":468,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16620,"byte_end":16623,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ ### For `log` Users","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16624,"byte_end":16647,"line_start":470,"line_end":470,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16648,"byte_end":16651,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ Users of the [`log`] crate should note that `tracing` exposes a set of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16652,"byte_end":16726,"line_start":472,"line_end":472,"column_start":1,"column_end":75}},{"value":"/ macros for creating `Event`s (`trace!`, `debug!`, `info!`, `warn!`, and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16727,"byte_end":16802,"line_start":473,"line_end":473,"column_start":1,"column_end":76}},{"value":"/ `error!`) which may be invoked with the same syntax as the similarly-named","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16803,"byte_end":16881,"line_start":474,"line_end":474,"column_start":1,"column_end":79}},{"value":"/ macros from the `log` crate. Often, the process of converting a project to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16882,"byte_end":16960,"line_start":475,"line_end":475,"column_start":1,"column_end":79}},{"value":"/ use `tracing` can begin with a simple drop-in replacement.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":16961,"byte_end":17023,"line_start":476,"line_end":476,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17024,"byte_end":17027,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ Let's consider the `log` crate's yak-shaving example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17028,"byte_end":17085,"line_start":478,"line_end":478,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17086,"byte_end":17089,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17090,"byte_end":17108,"line_start":480,"line_end":480,"column_start":1,"column_end":19}},{"value":"/ use std::{error::Error, io};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17109,"byte_end":17141,"line_start":481,"line_end":481,"column_start":1,"column_end":33}},{"value":"/ use tracing::{debug, error, info, span, warn, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17142,"byte_end":17199,"line_start":482,"line_end":482,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17200,"byte_end":17203,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ // the `#[tracing::instrument]` attribute creates and enters a span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17204,"byte_end":17275,"line_start":484,"line_end":484,"column_start":1,"column_end":72}},{"value":"/ // every time the instrumented function is called. The span is named after the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17276,"byte_end":17358,"line_start":485,"line_end":485,"column_start":1,"column_end":83}},{"value":"/ // the function or method. Parameters passed to the function are recorded as fields.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17359,"byte_end":17447,"line_start":486,"line_end":486,"column_start":1,"column_end":89}},{"value":"/ #[tracing::instrument]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17448,"byte_end":17474,"line_start":487,"line_end":487,"column_start":1,"column_end":27}},{"value":"/ pub fn shave(yak: usize) -> Result<(), Box<dyn Error + 'static>> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17475,"byte_end":17545,"line_start":488,"line_end":488,"column_start":1,"column_end":71}},{"value":"/     // this creates an event at the DEBUG level with two fields:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17546,"byte_end":17614,"line_start":489,"line_end":489,"column_start":1,"column_end":69}},{"value":"/     // - `excitement`, with the key \"excitement\" and the value \"yay!\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17615,"byte_end":17688,"line_start":490,"line_end":490,"column_start":1,"column_end":74}},{"value":"/     // - `message`, with the key \"message\" and the value \"hello! I'm gonna shave a yak.\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17689,"byte_end":17781,"line_start":491,"line_end":491,"column_start":1,"column_end":93}},{"value":"/     //","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17782,"byte_end":17792,"line_start":492,"line_end":492,"column_start":1,"column_end":11}},{"value":"/     // unlike other fields, `message`'s shorthand initialization is just the string itself.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17793,"byte_end":17888,"line_start":493,"line_end":493,"column_start":1,"column_end":96}},{"value":"/     debug!(excitement = \"yay!\", \"hello! I'm gonna shave a yak.\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17889,"byte_end":17958,"line_start":494,"line_end":494,"column_start":1,"column_end":70}},{"value":"/     if yak == 3 {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17959,"byte_end":17980,"line_start":495,"line_end":495,"column_start":1,"column_end":22}},{"value":"/         warn!(\"could not locate yak!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":17981,"byte_end":18024,"line_start":496,"line_end":496,"column_start":1,"column_end":44}},{"value":"/         // note that this is intended to demonstrate `tracing`'s features, not idiomatic","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18025,"byte_end":18117,"line_start":497,"line_end":497,"column_start":1,"column_end":93}},{"value":"/         // error handling! in a library or application, you should consider returning","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18118,"byte_end":18207,"line_start":498,"line_end":498,"column_start":1,"column_end":90}},{"value":"/         // a dedicated `YakError`. libraries like snafu or thiserror make this easy.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18208,"byte_end":18296,"line_start":499,"line_end":499,"column_start":1,"column_end":89}},{"value":"/         return Err(io::Error::new(io::ErrorKind::Other, \"shaving yak failed!\").into());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18297,"byte_end":18388,"line_start":500,"line_end":500,"column_start":1,"column_end":92}},{"value":"/     } else {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18389,"byte_end":18405,"line_start":501,"line_end":501,"column_start":1,"column_end":17}},{"value":"/         debug!(\"yak shaved successfully\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18406,"byte_end":18452,"line_start":502,"line_end":502,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18453,"byte_end":18462,"line_start":503,"line_end":503,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18463,"byte_end":18477,"line_start":504,"line_end":504,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18478,"byte_end":18483,"line_start":505,"line_end":505,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18484,"byte_end":18487,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ pub fn shave_all(yaks: usize) -> usize {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18488,"byte_end":18532,"line_start":507,"line_end":507,"column_start":1,"column_end":45}},{"value":"/     // Constructs a new span named \"shaving_yaks\" at the TRACE level,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18533,"byte_end":18606,"line_start":508,"line_end":508,"column_start":1,"column_end":74}},{"value":"/     // and a field whose key is \"yaks\". This is equivalent to writing:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18607,"byte_end":18681,"line_start":509,"line_end":509,"column_start":1,"column_end":75}},{"value":"/     //","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18682,"byte_end":18692,"line_start":510,"line_end":510,"column_start":1,"column_end":11}},{"value":"/     // let span = span!(Level::TRACE, \"shaving_yaks\", yaks = yaks);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18693,"byte_end":18764,"line_start":511,"line_end":511,"column_start":1,"column_end":72}},{"value":"/     //","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18765,"byte_end":18775,"line_start":512,"line_end":512,"column_start":1,"column_end":11}},{"value":"/     // local variables (`yaks`) can be used as field values","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18776,"byte_end":18839,"line_start":513,"line_end":513,"column_start":1,"column_end":64}},{"value":"/     // without an assignment, similar to struct initializers.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18840,"byte_end":18905,"line_start":514,"line_end":514,"column_start":1,"column_end":66}},{"value":"/     let _span = span!(Level::TRACE, \"shaving_yaks\", yaks).entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18906,"byte_end":18978,"line_start":515,"line_end":515,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18979,"byte_end":18982,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/     info!(\"shaving yaks\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":18983,"byte_end":19013,"line_start":517,"line_end":517,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19014,"byte_end":19017,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/     let mut yaks_shaved = 0;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19018,"byte_end":19050,"line_start":519,"line_end":519,"column_start":1,"column_end":33}},{"value":"/     for yak in 1..=yaks {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19051,"byte_end":19080,"line_start":520,"line_end":520,"column_start":1,"column_end":30}},{"value":"/         let res = shave(yak);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19081,"byte_end":19114,"line_start":521,"line_end":521,"column_start":1,"column_end":34}},{"value":"/         debug!(yak, shaved = res.is_ok());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19115,"byte_end":19161,"line_start":522,"line_end":522,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19162,"byte_end":19165,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/         if let Err(ref error) = res {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19166,"byte_end":19207,"line_start":524,"line_end":524,"column_start":1,"column_end":42}},{"value":"/             // Like spans, events can also use the field initialization shorthand.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19208,"byte_end":19294,"line_start":525,"line_end":525,"column_start":1,"column_end":87}},{"value":"/             // In this instance, `yak` is the field being initalized.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19295,"byte_end":19368,"line_start":526,"line_end":526,"column_start":1,"column_end":74}},{"value":"/             error!(yak, error = error.as_ref(), \"failed to shave yak!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19369,"byte_end":19445,"line_start":527,"line_end":527,"column_start":1,"column_end":77}},{"value":"/         } else {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19446,"byte_end":19466,"line_start":528,"line_end":528,"column_start":1,"column_end":21}},{"value":"/             yaks_shaved += 1;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19467,"byte_end":19500,"line_start":529,"line_end":529,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19501,"byte_end":19514,"line_start":530,"line_end":530,"column_start":1,"column_end":14}},{"value":"/         debug!(yaks_shaved);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19515,"byte_end":19547,"line_start":531,"line_end":531,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19548,"byte_end":19557,"line_start":532,"line_end":532,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19558,"byte_end":19561,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/     yaks_shaved","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19562,"byte_end":19581,"line_start":534,"line_end":534,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19582,"byte_end":19587,"line_start":535,"line_end":535,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19588,"byte_end":19595,"line_start":536,"line_end":536,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19596,"byte_end":19599,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ ## In libraries","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19600,"byte_end":19619,"line_start":538,"line_end":538,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19620,"byte_end":19623,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ Libraries should link only to the `tracing` crate, and use the provided","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19624,"byte_end":19699,"line_start":540,"line_end":540,"column_start":1,"column_end":76}},{"value":"/ macros to record whatever information will be useful to downstream","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19700,"byte_end":19770,"line_start":541,"line_end":541,"column_start":1,"column_end":71}},{"value":"/ consumers.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19771,"byte_end":19785,"line_start":542,"line_end":542,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19786,"byte_end":19789,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ ## In executables","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19790,"byte_end":19811,"line_start":544,"line_end":544,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19812,"byte_end":19815,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ In order to record trace events, executables have to use a `Subscriber`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19816,"byte_end":19891,"line_start":546,"line_end":546,"column_start":1,"column_end":76}},{"value":"/ implementation compatible with `tracing`. A `Subscriber` implements a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19892,"byte_end":19965,"line_start":547,"line_end":547,"column_start":1,"column_end":74}},{"value":"/ way of collecting trace data, such as by logging it to standard output.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":19966,"byte_end":20041,"line_start":548,"line_end":548,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20042,"byte_end":20045,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ This library does not contain any `Subscriber` implementations; these are","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20046,"byte_end":20123,"line_start":550,"line_end":550,"column_start":1,"column_end":78}},{"value":"/ provided by [other crates](#related-crates).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20124,"byte_end":20172,"line_start":551,"line_end":551,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20173,"byte_end":20176,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ The simplest way to use a subscriber is to call the [`set_global_default`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20177,"byte_end":20255,"line_start":553,"line_end":553,"column_start":1,"column_end":79}},{"value":"/ function:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20256,"byte_end":20269,"line_start":554,"line_end":554,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20270,"byte_end":20273,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20274,"byte_end":20281,"line_start":556,"line_end":556,"column_start":1,"column_end":8}},{"value":"/ extern crate tracing;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20282,"byte_end":20307,"line_start":557,"line_end":557,"column_start":1,"column_end":26}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20308,"byte_end":20339,"line_start":558,"line_end":558,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20340,"byte_end":20402,"line_start":559,"line_end":559,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20403,"byte_end":20453,"line_start":560,"line_end":560,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20454,"byte_end":20522,"line_start":561,"line_end":561,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20523,"byte_end":20570,"line_start":562,"line_end":562,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20571,"byte_end":20617,"line_start":563,"line_end":563,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20618,"byte_end":20674,"line_start":564,"line_end":564,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20675,"byte_end":20732,"line_start":565,"line_end":565,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20733,"byte_end":20767,"line_start":566,"line_end":566,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20768,"byte_end":20801,"line_start":567,"line_end":567,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20802,"byte_end":20809,"line_start":568,"line_end":568,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20810,"byte_end":20836,"line_start":569,"line_end":569,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20837,"byte_end":20879,"line_start":570,"line_end":570,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20880,"byte_end":20887,"line_start":571,"line_end":571,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20888,"byte_end":20905,"line_start":572,"line_end":572,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20906,"byte_end":20909,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20910,"byte_end":20955,"line_start":574,"line_end":574,"column_start":1,"column_end":46}},{"value":"/ tracing::subscriber::set_global_default(my_subscriber)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":20956,"byte_end":21014,"line_start":575,"line_end":575,"column_start":1,"column_end":59}},{"value":"/     .expect(\"setting tracing default failed\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21015,"byte_end":21065,"line_start":576,"line_end":576,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21066,"byte_end":21073,"line_start":577,"line_end":577,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21074,"byte_end":21081,"line_start":578,"line_end":578,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21082,"byte_end":21085,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21086,"byte_end":21157,"line_start":580,"line_end":580,"column_start":1,"column_end":72}},{"value":"/     <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21158,"byte_end":21238,"line_start":581,"line_end":581,"column_start":1,"column_end":81}},{"value":"/     <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21239,"byte_end":21316,"line_start":582,"line_end":582,"column_start":1,"column_end":78}},{"value":"/     executables that depend on the library try to set the default later.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21317,"byte_end":21393,"line_start":583,"line_end":583,"column_start":1,"column_end":77}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21394,"byte_end":21404,"line_start":584,"line_end":584,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21405,"byte_end":21408,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ This subscriber will be used as the default in all threads for the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21409,"byte_end":21479,"line_start":586,"line_end":586,"column_start":1,"column_end":71}},{"value":"/ remainder of the duration of the program, similar to setting the logger","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21480,"byte_end":21555,"line_start":587,"line_end":587,"column_start":1,"column_end":76}},{"value":"/ in the `log` crate.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21556,"byte_end":21579,"line_start":588,"line_end":588,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21580,"byte_end":21583,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ In addition, the default subscriber can be set through using the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21584,"byte_end":21652,"line_start":590,"line_end":590,"column_start":1,"column_end":69}},{"value":"/ [`with_default`] function. This follows the `tokio` pattern of using","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21653,"byte_end":21725,"line_start":591,"line_end":591,"column_start":1,"column_end":73}},{"value":"/ closures to represent executing code in a context that is exited at the end","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21726,"byte_end":21805,"line_start":592,"line_end":592,"column_start":1,"column_end":80}},{"value":"/ of the closure. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21806,"byte_end":21838,"line_start":593,"line_end":593,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21839,"byte_end":21842,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21843,"byte_end":21854,"line_start":595,"line_end":595,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21855,"byte_end":21886,"line_start":596,"line_end":596,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21887,"byte_end":21949,"line_start":597,"line_end":597,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":21950,"byte_end":22000,"line_start":598,"line_end":598,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22001,"byte_end":22069,"line_start":599,"line_end":599,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22070,"byte_end":22117,"line_start":600,"line_end":600,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22118,"byte_end":22164,"line_start":601,"line_end":601,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22165,"byte_end":22221,"line_start":602,"line_end":602,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22222,"byte_end":22279,"line_start":603,"line_end":603,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22280,"byte_end":22314,"line_start":604,"line_end":604,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22315,"byte_end":22348,"line_start":605,"line_end":605,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22349,"byte_end":22356,"line_start":606,"line_end":606,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22357,"byte_end":22383,"line_start":607,"line_end":607,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22384,"byte_end":22426,"line_start":608,"line_end":608,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22427,"byte_end":22434,"line_start":609,"line_end":609,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22435,"byte_end":22452,"line_start":610,"line_end":610,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22453,"byte_end":22456,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22457,"byte_end":22502,"line_start":612,"line_end":612,"column_start":1,"column_end":46}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22503,"byte_end":22532,"line_start":613,"line_end":613,"column_start":1,"column_end":30}},{"value":"/ tracing::subscriber::with_default(my_subscriber, || {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22533,"byte_end":22590,"line_start":614,"line_end":614,"column_start":1,"column_end":58}},{"value":"/     // Any trace events generated in this closure or by functions it calls","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22591,"byte_end":22669,"line_start":615,"line_end":615,"column_start":1,"column_end":79}},{"value":"/     // will be collected by `my_subscriber`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22670,"byte_end":22718,"line_start":616,"line_end":616,"column_start":1,"column_end":49}},{"value":"/ })","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22719,"byte_end":22725,"line_start":617,"line_end":617,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22726,"byte_end":22733,"line_start":618,"line_end":618,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22734,"byte_end":22741,"line_start":619,"line_end":619,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22742,"byte_end":22745,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ This approach allows trace data to be collected by multiple subscribers","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22746,"byte_end":22821,"line_start":621,"line_end":621,"column_start":1,"column_end":76}},{"value":"/ within different contexts in the program. Note that the override only applies to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22822,"byte_end":22910,"line_start":622,"line_end":622,"column_start":1,"column_end":89}},{"value":"/ currently executing thread; other threads will not see the change from with_default.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":22911,"byte_end":22999,"line_start":623,"line_end":623,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23000,"byte_end":23003,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ Any trace events generated outside the context of a subscriber will not be collected.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23004,"byte_end":23093,"line_start":625,"line_end":625,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23094,"byte_end":23097,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ Once a subscriber has been set, instrumentation points may be added to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23098,"byte_end":23176,"line_start":627,"line_end":627,"column_start":1,"column_end":79}},{"value":"/ executable using the `tracing` crate's macros.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23177,"byte_end":23227,"line_start":628,"line_end":628,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23228,"byte_end":23231,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ ## `log` Compatibility","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23232,"byte_end":23258,"line_start":630,"line_end":630,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23259,"byte_end":23262,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ The [`log`] crate provides a simple, lightweight logging facade for Rust.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23263,"byte_end":23340,"line_start":632,"line_end":632,"column_start":1,"column_end":78}},{"value":"/ While `tracing` builds upon `log`'s foundation with richer structured","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23341,"byte_end":23414,"line_start":633,"line_end":633,"column_start":1,"column_end":74}},{"value":"/ diagnostic data, `log`'s simplicity and ubiquity make it the \"lowest common","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23415,"byte_end":23494,"line_start":634,"line_end":634,"column_start":1,"column_end":80}},{"value":"/ denominator\" for text-based logging in Rust — a vast majority of Rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23495,"byte_end":23570,"line_start":635,"line_end":635,"column_start":1,"column_end":74}},{"value":"/ libraries and applications either emit or consume `log` records. Therefore,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23571,"byte_end":23650,"line_start":636,"line_end":636,"column_start":1,"column_end":80}},{"value":"/ `tracing` provides multiple forms of interoperability with `log`: `tracing`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23651,"byte_end":23730,"line_start":637,"line_end":637,"column_start":1,"column_end":80}},{"value":"/ instrumentation can emit `log` records, and a compatibility layer enables","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23731,"byte_end":23808,"line_start":638,"line_end":638,"column_start":1,"column_end":78}},{"value":"/ `tracing` [`Subscriber`]s to consume `log` records as `tracing` [`Event`]s.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23809,"byte_end":23888,"line_start":639,"line_end":639,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23889,"byte_end":23892,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ ### Emitting `log` Records","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23893,"byte_end":23923,"line_start":641,"line_end":641,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23924,"byte_end":23927,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ This crate provides two feature flags, \"log\" and \"log-always\", which will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":23928,"byte_end":24005,"line_start":643,"line_end":643,"column_start":1,"column_end":78}},{"value":"/ cause [spans] and [events] to emit `log` records. When the \"log\" feature is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24006,"byte_end":24085,"line_start":644,"line_end":644,"column_start":1,"column_end":80}},{"value":"/ enabled, if no `tracing` `Subscriber` is active, invoking an event macro or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24086,"byte_end":24165,"line_start":645,"line_end":645,"column_start":1,"column_end":80}},{"value":"/ creating a span with fields will emit a `log` record. This is intended","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24166,"byte_end":24240,"line_start":646,"line_end":646,"column_start":1,"column_end":75}},{"value":"/ primarily for use in libraries which wish to emit diagnostics that can be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24241,"byte_end":24318,"line_start":647,"line_end":647,"column_start":1,"column_end":78}},{"value":"/ consumed by applications using `tracing` *or* `log`, without paying the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24319,"byte_end":24394,"line_start":648,"line_end":648,"column_start":1,"column_end":76}},{"value":"/ additional overhead of emitting both forms of diagnostics when `tracing` is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24395,"byte_end":24474,"line_start":649,"line_end":649,"column_start":1,"column_end":80}},{"value":"/ in use.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24475,"byte_end":24486,"line_start":650,"line_end":650,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24487,"byte_end":24490,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ Enabling the \"log-always\" feature will cause `log` records to be emitted","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24491,"byte_end":24567,"line_start":652,"line_end":652,"column_start":1,"column_end":77}},{"value":"/ even if a `tracing` `Subscriber` _is_ set. This is intended to be used in","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24568,"byte_end":24645,"line_start":653,"line_end":653,"column_start":1,"column_end":78}},{"value":"/ applications where a `log` `Logger` is being used to record a textual log,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24646,"byte_end":24724,"line_start":654,"line_end":654,"column_start":1,"column_end":79}},{"value":"/ and `tracing` is used only to record other forms of diagnostics (such as","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24725,"byte_end":24801,"line_start":655,"line_end":655,"column_start":1,"column_end":77}},{"value":"/ metrics, profiling, or distributed tracing data). Unlike the \"log\" feature,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24802,"byte_end":24881,"line_start":656,"line_end":656,"column_start":1,"column_end":80}},{"value":"/ libraries generally should **not** enable the \"log-always\" feature, as doing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24882,"byte_end":24962,"line_start":657,"line_end":657,"column_start":1,"column_end":81}},{"value":"/ so will prevent applications from being able to opt out of the `log` records.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":24963,"byte_end":25044,"line_start":658,"line_end":658,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25045,"byte_end":25048,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ See [here][flags] for more details on this crate's feature flags.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25049,"byte_end":25118,"line_start":660,"line_end":660,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25119,"byte_end":25122,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ The generated `log` records' messages will be a string representation of the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25123,"byte_end":25203,"line_start":662,"line_end":662,"column_start":1,"column_end":81}},{"value":"/ span or event's fields, and all additional information recorded by `log`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25204,"byte_end":25280,"line_start":663,"line_end":663,"column_start":1,"column_end":77}},{"value":"/ (target, verbosity level, module path, file, and line number) will also be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25281,"byte_end":25359,"line_start":664,"line_end":664,"column_start":1,"column_end":79}},{"value":"/ populated. Additionally, `log` records are also generated when spans are","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25360,"byte_end":25436,"line_start":665,"line_end":665,"column_start":1,"column_end":77}},{"value":"/ entered, exited, and closed. Since these additional span lifecycle logs have","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25437,"byte_end":25517,"line_start":666,"line_end":666,"column_start":1,"column_end":81}},{"value":"/ the potential to be very verbose, and don't include additional fields, they","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25518,"byte_end":25597,"line_start":667,"line_end":667,"column_start":1,"column_end":80}},{"value":"/ will always be emitted at the `Trace` level, rather than inheriting the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25598,"byte_end":25673,"line_start":668,"line_end":668,"column_start":1,"column_end":76}},{"value":"/ level of the span that generated them. Furthermore, they are are categorized","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25674,"byte_end":25754,"line_start":669,"line_end":669,"column_start":1,"column_end":81}},{"value":"/ under a separate `log` target, \"tracing::span\" (and its sub-target,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25755,"byte_end":25826,"line_start":670,"line_end":670,"column_start":1,"column_end":72}},{"value":"/ \"tracing::span::active\", for the logs on entering and exiting a span), which","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25827,"byte_end":25907,"line_start":671,"line_end":671,"column_start":1,"column_end":81}},{"value":"/ may be enabled or disabled separately from other `log` records emitted by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25908,"byte_end":25985,"line_start":672,"line_end":672,"column_start":1,"column_end":78}},{"value":"/ `tracing`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":25986,"byte_end":26000,"line_start":673,"line_end":673,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26001,"byte_end":26004,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ ### Consuming `log` Records","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26005,"byte_end":26036,"line_start":675,"line_end":675,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26037,"byte_end":26040,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ The [`tracing-log`] crate provides a compatibility layer which","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26041,"byte_end":26107,"line_start":677,"line_end":677,"column_start":1,"column_end":67}},{"value":"/ allows a `tracing` [`Subscriber`] to consume `log` records as though they","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26108,"byte_end":26185,"line_start":678,"line_end":678,"column_start":1,"column_end":78}},{"value":"/ were `tracing` [events]. This allows applications using `tracing` to record","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26186,"byte_end":26265,"line_start":679,"line_end":679,"column_start":1,"column_end":80}},{"value":"/ the logs emitted by dependencies using `log` as events within the context of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26266,"byte_end":26346,"line_start":680,"line_end":680,"column_start":1,"column_end":81}},{"value":"/ the application's trace tree. See [that crate's documentation][log-tracer]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26347,"byte_end":26425,"line_start":681,"line_end":681,"column_start":1,"column_end":79}},{"value":"/ for details.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26426,"byte_end":26442,"line_start":682,"line_end":682,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26443,"byte_end":26446,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ [log-tracer]: https://docs.rs/tracing-log/latest/tracing_log/#convert-log-records-to-tracing-events","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26447,"byte_end":26550,"line_start":684,"line_end":684,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26551,"byte_end":26554,"line_start":685,"line_end":685,"column_start":1,"column_end":4}},{"value":"/ ## Related Crates","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26555,"byte_end":26576,"line_start":686,"line_end":686,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26577,"byte_end":26580,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ In addition to `tracing` and `tracing-core`, the [`tokio-rs/tracing`] repository","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26581,"byte_end":26665,"line_start":688,"line_end":688,"column_start":1,"column_end":85}},{"value":"/ contains several additional crates designed to be used with the `tracing` ecosystem.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26666,"byte_end":26754,"line_start":689,"line_end":689,"column_start":1,"column_end":89}},{"value":"/ This includes a collection of `Subscriber` implementations, as well as utility","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26755,"byte_end":26837,"line_start":690,"line_end":690,"column_start":1,"column_end":83}},{"value":"/ and adapter crates to assist in writing `Subscriber`s and instrumenting","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26838,"byte_end":26913,"line_start":691,"line_end":691,"column_start":1,"column_end":76}},{"value":"/ applications.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26914,"byte_end":26931,"line_start":692,"line_end":692,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26932,"byte_end":26935,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ In particular, the following crates are likely to be of interest:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":26936,"byte_end":27005,"line_start":694,"line_end":694,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27006,"byte_end":27009,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-futures`] provides a compatibility layer with the `futures`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27010,"byte_end":27086,"line_start":696,"line_end":696,"column_start":1,"column_end":77}},{"value":"/    crate, allowing spans to be attached to `Future`s, `Stream`s, and `Executor`s.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27087,"byte_end":27172,"line_start":697,"line_end":697,"column_start":1,"column_end":86}},{"value":"/  - [`tracing-subscriber`] provides `Subscriber` implementations and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27173,"byte_end":27244,"line_start":698,"line_end":698,"column_start":1,"column_end":72}},{"value":"/    utilities for working with `Subscriber`s. This includes a [`FmtSubscriber`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27245,"byte_end":27327,"line_start":699,"line_end":699,"column_start":1,"column_end":83}},{"value":"/    `FmtSubscriber` for logging formatted trace data to stdout, with similar","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27328,"byte_end":27407,"line_start":700,"line_end":700,"column_start":1,"column_end":80}},{"value":"/    filtering and formatting to the [`env_logger`] crate.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27408,"byte_end":27468,"line_start":701,"line_end":701,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-log`] provides a compatibility layer with the [`log`] crate,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27469,"byte_end":27546,"line_start":702,"line_end":702,"column_start":1,"column_end":78}},{"value":"/    allowing log messages to be recorded as `tracing` `Event`s within the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27547,"byte_end":27623,"line_start":703,"line_end":703,"column_start":1,"column_end":77}},{"value":"/    trace tree. This is useful when a project using `tracing` have","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27624,"byte_end":27693,"line_start":704,"line_end":704,"column_start":1,"column_end":70}},{"value":"/    dependencies which use `log`. Note that if you're using","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27694,"byte_end":27756,"line_start":705,"line_end":705,"column_start":1,"column_end":63}},{"value":"/    `tracing-subscriber`'s `FmtSubscriber`, you don't need to depend on","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27757,"byte_end":27831,"line_start":706,"line_end":706,"column_start":1,"column_end":75}},{"value":"/    `tracing-log` directly.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27832,"byte_end":27862,"line_start":707,"line_end":707,"column_start":1,"column_end":31}},{"value":"/  - [`tracing-appender`] provides utilities for outputting tracing data,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27863,"byte_end":27938,"line_start":708,"line_end":708,"column_start":1,"column_end":76}},{"value":"/     including a file appender and non blocking writer.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27939,"byte_end":27997,"line_start":709,"line_end":709,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":27998,"byte_end":28001,"line_start":710,"line_end":710,"column_start":1,"column_end":4}},{"value":"/ Additionally, there are also several third-party crates which are not","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28002,"byte_end":28075,"line_start":711,"line_end":711,"column_start":1,"column_end":74}},{"value":"/ maintained by the `tokio` project. These include:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28076,"byte_end":28129,"line_start":712,"line_end":712,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28130,"byte_end":28133,"line_start":713,"line_end":713,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-timing`] implements inter-event timing metrics on top of `tracing`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28134,"byte_end":28218,"line_start":714,"line_end":714,"column_start":1,"column_end":85}},{"value":"/    It provides a subscriber that records the time elapsed between pairs of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28219,"byte_end":28297,"line_start":715,"line_end":715,"column_start":1,"column_end":79}},{"value":"/    `tracing` events and generates histograms.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28298,"byte_end":28347,"line_start":716,"line_end":716,"column_start":1,"column_end":50}},{"value":"/  - [`tracing-opentelemetry`] provides a subscriber for emitting traces to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28348,"byte_end":28425,"line_start":717,"line_end":717,"column_start":1,"column_end":78}},{"value":"/    [OpenTelemetry]-compatible distributed tracing systems.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28426,"byte_end":28488,"line_start":718,"line_end":718,"column_start":1,"column_end":63}},{"value":"/  - [`tracing-honeycomb`] Provides a layer that reports traces spanning multiple machines to [honeycomb.io]. Backed by [`tracing-distributed`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28489,"byte_end":28635,"line_start":719,"line_end":719,"column_start":1,"column_end":147}},{"value":"/  - [`tracing-distributed`] Provides a generic implementation of a layer that reports traces spanning multiple machines to some backend.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28636,"byte_end":28775,"line_start":720,"line_end":720,"column_start":1,"column_end":140}},{"value":"/  - [`tracing-actix-web`] provides `tracing` integration for the `actix-web` web framework.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28776,"byte_end":28870,"line_start":721,"line_end":721,"column_start":1,"column_end":95}},{"value":"/  - [`tracing-actix`] provides `tracing` integration for the `actix` actor","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28871,"byte_end":28948,"line_start":722,"line_end":722,"column_start":1,"column_end":78}},{"value":"/    framework.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28949,"byte_end":28966,"line_start":723,"line_end":723,"column_start":1,"column_end":18}},{"value":"/  - [`tracing-gelf`] implements a subscriber for exporting traces in Greylog","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":28967,"byte_end":29046,"line_start":724,"line_end":724,"column_start":1,"column_end":80}},{"value":"/    GELF format.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29047,"byte_end":29066,"line_start":725,"line_end":725,"column_start":1,"column_end":20}},{"value":"/  - [`tracing-coz`] provides integration with the [coz] causal profiler","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29067,"byte_end":29141,"line_start":726,"line_end":726,"column_start":1,"column_end":75}},{"value":"/    (Linux-only).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29142,"byte_end":29162,"line_start":727,"line_end":727,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-bunyan-formatter`] provides a layer implementation that reports events and spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29163,"byte_end":29260,"line_start":728,"line_end":728,"column_start":1,"column_end":98}},{"value":"/    in [bunyan] format, enriched with timing information.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29261,"byte_end":29321,"line_start":729,"line_end":729,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-wasm`] provides a `Subscriber`/`Layer` implementation that reports","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29322,"byte_end":29405,"line_start":730,"line_end":730,"column_start":1,"column_end":84}},{"value":"/    events and spans via browser `console.log` and [User Timing API (`window.performance`)].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29406,"byte_end":29501,"line_start":731,"line_end":731,"column_start":1,"column_end":96}},{"value":"/  - [`tide-tracing`] provides a [tide] middleware to trace all incoming requests and responses.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29502,"byte_end":29600,"line_start":732,"line_end":732,"column_start":1,"column_end":99}},{"value":"/  - [`test-log`] takes care of initializing `tracing` for tests, based on","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29601,"byte_end":29677,"line_start":733,"line_end":733,"column_start":1,"column_end":77}},{"value":"/    environment variables with an `env_logger` compatible syntax.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29678,"byte_end":29746,"line_start":734,"line_end":734,"column_start":1,"column_end":69}},{"value":"/  - [`tracing-unwrap`] provides convenience methods to report failed unwraps","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29747,"byte_end":29826,"line_start":735,"line_end":735,"column_start":1,"column_end":80}},{"value":"/    on `Result` or `Option` types to a `Subscriber`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29827,"byte_end":29882,"line_start":736,"line_end":736,"column_start":1,"column_end":56}},{"value":"/  - [`diesel-tracing`] provides integration with [`diesel`] database connections.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29883,"byte_end":29967,"line_start":737,"line_end":737,"column_start":1,"column_end":85}},{"value":"/  - [`tracing-tracy`] provides a way to collect [Tracy] profiles in instrumented","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":29968,"byte_end":30051,"line_start":738,"line_end":738,"column_start":1,"column_end":84}},{"value":"/    applications.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30052,"byte_end":30072,"line_start":739,"line_end":739,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-elastic-apm`] provides a layer for reporting traces to [Elastic APM].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30073,"byte_end":30159,"line_start":740,"line_end":740,"column_start":1,"column_end":87}},{"value":"/  - [`tracing-etw`] provides a layer for emitting Windows [ETW] events.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30160,"byte_end":30234,"line_start":741,"line_end":741,"column_start":1,"column_end":75}},{"value":"/  - [`tracing-fluent-assertions`] provides a fluent assertions-style testing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30235,"byte_end":30314,"line_start":742,"line_end":742,"column_start":1,"column_end":80}},{"value":"/    framework for validating the behavior of `tracing` spans.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30315,"byte_end":30379,"line_start":743,"line_end":743,"column_start":1,"column_end":65}},{"value":"/  - [`sentry-tracing`] provides a layer for reporting events and traces to [Sentry].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30380,"byte_end":30467,"line_start":744,"line_end":744,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30468,"byte_end":30471,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ If you're the maintainer of a `tracing` ecosystem crate not listed above,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30472,"byte_end":30549,"line_start":746,"line_end":746,"column_start":1,"column_end":78}},{"value":"/ please let us know! We'd love to add your project to the list!","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30550,"byte_end":30616,"line_start":747,"line_end":747,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30617,"byte_end":30620,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ [`tracing-opentelemetry`]: https://crates.io/crates/tracing-opentelemetry","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30621,"byte_end":30698,"line_start":749,"line_end":749,"column_start":1,"column_end":78}},{"value":"/ [OpenTelemetry]: https://opentelemetry.io/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30699,"byte_end":30745,"line_start":750,"line_end":750,"column_start":1,"column_end":47}},{"value":"/ [`tracing-honeycomb`]: https://crates.io/crates/tracing-honeycomb","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30746,"byte_end":30815,"line_start":751,"line_end":751,"column_start":1,"column_end":70}},{"value":"/ [`tracing-distributed`]: https://crates.io/crates/tracing-distributed","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30816,"byte_end":30889,"line_start":752,"line_end":752,"column_start":1,"column_end":74}},{"value":"/ [honeycomb.io]: https://www.honeycomb.io/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30890,"byte_end":30935,"line_start":753,"line_end":753,"column_start":1,"column_end":46}},{"value":"/ [`tracing-actix-web`]: https://crates.io/crates/tracing-actix-web","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":30936,"byte_end":31005,"line_start":754,"line_end":754,"column_start":1,"column_end":70}},{"value":"/ [`tracing-actix`]: https://crates.io/crates/tracing-actix","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31006,"byte_end":31067,"line_start":755,"line_end":755,"column_start":1,"column_end":62}},{"value":"/ [`tracing-gelf`]: https://crates.io/crates/tracing-gelf","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31068,"byte_end":31127,"line_start":756,"line_end":756,"column_start":1,"column_end":60}},{"value":"/ [`tracing-coz`]: https://crates.io/crates/tracing-coz","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31128,"byte_end":31185,"line_start":757,"line_end":757,"column_start":1,"column_end":58}},{"value":"/ [coz]: https://github.com/plasma-umass/coz","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31186,"byte_end":31232,"line_start":758,"line_end":758,"column_start":1,"column_end":47}},{"value":"/ [`tracing-bunyan-formatter`]: https://crates.io/crates/tracing-bunyan-formatter","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31233,"byte_end":31316,"line_start":759,"line_end":759,"column_start":1,"column_end":84}},{"value":"/ [bunyan]: https://github.com/trentm/node-bunyan","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31317,"byte_end":31368,"line_start":760,"line_end":760,"column_start":1,"column_end":52}},{"value":"/ [`tracing-wasm`]: https://docs.rs/tracing-wasm","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31369,"byte_end":31419,"line_start":761,"line_end":761,"column_start":1,"column_end":51}},{"value":"/ [User Timing API (`window.performance`)]: https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31420,"byte_end":31530,"line_start":762,"line_end":762,"column_start":1,"column_end":111}},{"value":"/ [`tide-tracing`]: https://crates.io/crates/tide-tracing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31531,"byte_end":31590,"line_start":763,"line_end":763,"column_start":1,"column_end":60}},{"value":"/ [tide]: https://crates.io/crates/tide","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31591,"byte_end":31632,"line_start":764,"line_end":764,"column_start":1,"column_end":42}},{"value":"/ [`test-log`]: https://crates.io/crates/test-log","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31633,"byte_end":31684,"line_start":765,"line_end":765,"column_start":1,"column_end":52}},{"value":"/ [`tracing-unwrap`]: https://docs.rs/tracing-unwrap","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31685,"byte_end":31739,"line_start":766,"line_end":766,"column_start":1,"column_end":55}},{"value":"/ [`diesel`]: https://crates.io/crates/diesel","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31740,"byte_end":31787,"line_start":767,"line_end":767,"column_start":1,"column_end":48}},{"value":"/ [`diesel-tracing`]: https://crates.io/crates/diesel-tracing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31788,"byte_end":31851,"line_start":768,"line_end":768,"column_start":1,"column_end":64}},{"value":"/ [`tracing-tracy`]: https://crates.io/crates/tracing-tracy","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31852,"byte_end":31913,"line_start":769,"line_end":769,"column_start":1,"column_end":62}},{"value":"/ [Tracy]: https://github.com/wolfpld/tracy","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31914,"byte_end":31959,"line_start":770,"line_end":770,"column_start":1,"column_end":46}},{"value":"/ [`tracing-elastic-apm`]: https://crates.io/crates/tracing-elastic-apm","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":31960,"byte_end":32033,"line_start":771,"line_end":771,"column_start":1,"column_end":74}},{"value":"/ [Elastic APM]: https://www.elastic.co/apm","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32034,"byte_end":32079,"line_start":772,"line_end":772,"column_start":1,"column_end":46}},{"value":"/ [`tracing-etw`]: https://github.com/microsoft/tracing-etw","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32080,"byte_end":32141,"line_start":773,"line_end":773,"column_start":1,"column_end":62}},{"value":"/ [ETW]: https://docs.microsoft.com/en-us/windows/win32/etw/about-event-tracing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32142,"byte_end":32223,"line_start":774,"line_end":774,"column_start":1,"column_end":82}},{"value":"/ [`tracing-fluent-assertions`]: https://crates.io/crates/tracing-fluent-assertions","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32224,"byte_end":32309,"line_start":775,"line_end":775,"column_start":1,"column_end":86}},{"value":"/ [`sentry-tracing`]: https://crates.io/crates/sentry-tracing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32310,"byte_end":32373,"line_start":776,"line_end":776,"column_start":1,"column_end":64}},{"value":"/ [Sentry]: https://sentry.io/welcome/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32374,"byte_end":32414,"line_start":777,"line_end":777,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32415,"byte_end":32418,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32419,"byte_end":32484,"line_start":779,"line_end":779,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: Some of these ecosystem crates are currently","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32485,"byte_end":32560,"line_start":780,"line_end":780,"column_start":1,"column_end":76}},{"value":"/     unreleased and/or in earlier stages of development. They may be less stable","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32561,"byte_end":32644,"line_start":781,"line_end":781,"column_start":1,"column_end":84}},{"value":"/     than <code>tracing</code> and <code>tracing-core</code>.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32645,"byte_end":32709,"line_start":782,"line_end":782,"column_start":1,"column_end":65}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32710,"byte_end":32720,"line_start":783,"line_end":783,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32721,"byte_end":32724,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32725,"byte_end":32751,"line_start":785,"line_end":785,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32752,"byte_end":32755,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ The following crate [feature flags] are available:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32756,"byte_end":32810,"line_start":787,"line_end":787,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32811,"byte_end":32814,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ * A set of features controlling the [static verbosity level].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32815,"byte_end":32880,"line_start":789,"line_end":789,"column_start":1,"column_end":66}},{"value":"/ * `log`: causes trace instrumentation points to emit [`log`] records as well","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32881,"byte_end":32961,"line_start":790,"line_end":790,"column_start":1,"column_end":81}},{"value":"/   as trace events, if a default `tracing` subscriber has not been set. This","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":32962,"byte_end":33041,"line_start":791,"line_end":791,"column_start":1,"column_end":80}},{"value":"/   is intended for use in libraries whose users may be using either `tracing`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33042,"byte_end":33122,"line_start":792,"line_end":792,"column_start":1,"column_end":81}},{"value":"/   or `log`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33123,"byte_end":33138,"line_start":793,"line_end":793,"column_start":1,"column_end":16}},{"value":"/ * `log-always`: Emit `log` records from all `tracing` spans and events, even","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33139,"byte_end":33219,"line_start":794,"line_end":794,"column_start":1,"column_end":81}},{"value":"/   if a `tracing` subscriber has been set. This should be set only by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33220,"byte_end":33292,"line_start":795,"line_end":795,"column_start":1,"column_end":73}},{"value":"/   applications which intend to collect traces and logs separately; if an","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33293,"byte_end":33369,"line_start":796,"line_end":796,"column_start":1,"column_end":77}},{"value":"/   adapter is used to convert `log` records into `tracing` events, this will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33370,"byte_end":33449,"line_start":797,"line_end":797,"column_start":1,"column_end":80}},{"value":"/   cause duplicate events to occur.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33450,"byte_end":33488,"line_start":798,"line_end":798,"column_start":1,"column_end":39}},{"value":"/ * `attributes`: Includes support for the `#[instrument]` attribute.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33489,"byte_end":33560,"line_start":799,"line_end":799,"column_start":1,"column_end":72}},{"value":"/   This is on by default, but does bring in the `syn` crate as a dependency,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33561,"byte_end":33640,"line_start":800,"line_end":800,"column_start":1,"column_end":80}},{"value":"/   which may add to the compile time of crates that do not already use it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33641,"byte_end":33718,"line_start":801,"line_end":801,"column_start":1,"column_end":78}},{"value":"/ * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33719,"byte_end":33789,"line_start":802,"line_end":802,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33790,"byte_end":33793,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33794,"byte_end":33872,"line_start":804,"line_end":804,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33873,"byte_end":33876,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33877,"byte_end":33890,"line_start":806,"line_end":806,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33891,"byte_end":33911,"line_start":807,"line_end":807,"column_start":1,"column_end":21}},{"value":"/   tracing = { version = \"0.1.30\", default-features = false }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33912,"byte_end":33976,"line_start":808,"line_end":808,"column_start":1,"column_end":65}},{"value":"/   ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33977,"byte_end":33986,"line_start":809,"line_end":809,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33987,"byte_end":33990,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":33991,"byte_end":34056,"line_start":811,"line_end":811,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: <code>tracing</code>'s <code>no_std</code> support","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34057,"byte_end":34138,"line_start":812,"line_end":812,"column_start":1,"column_end":82}},{"value":"/     requires <code>liballoc</code>.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34139,"byte_end":34178,"line_start":813,"line_end":813,"column_start":1,"column_end":40}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34179,"byte_end":34189,"line_start":814,"line_end":814,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34190,"byte_end":34193,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ ### Unstable Features","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34194,"byte_end":34219,"line_start":816,"line_end":816,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34220,"byte_end":34223,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 0.1.x","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34224,"byte_end":34311,"line_start":818,"line_end":818,"column_start":1,"column_end":88}},{"value":"/ releases. To enable these features, the `--cfg tracing_unstable` must be passed to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34312,"byte_end":34398,"line_start":819,"line_end":819,"column_start":1,"column_end":87}},{"value":"/ `rustc` when compiling.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34399,"byte_end":34426,"line_start":820,"line_end":820,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34427,"byte_end":34430,"line_start":821,"line_end":821,"column_start":1,"column_end":4}},{"value":"/ The following unstable feature flags are currently available:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34431,"byte_end":34496,"line_start":822,"line_end":822,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34497,"byte_end":34500,"line_start":823,"line_end":823,"column_start":1,"column_end":4}},{"value":"/ * `valuable`: Enables support for recording [field values] using the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34501,"byte_end":34573,"line_start":824,"line_end":824,"column_start":1,"column_end":73}},{"value":"/   [`valuable`] crate.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34574,"byte_end":34599,"line_start":825,"line_end":825,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34600,"byte_end":34603,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ #### Enabling Unstable Features","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34604,"byte_end":34639,"line_start":827,"line_end":827,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34640,"byte_end":34643,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ The easiest way to set the `tracing_unstable` cfg is to use the `RUSTFLAGS`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34644,"byte_end":34723,"line_start":829,"line_end":829,"column_start":1,"column_end":80}},{"value":"/ env variable when running `cargo` commands:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34724,"byte_end":34771,"line_start":830,"line_end":830,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34772,"byte_end":34775,"line_start":831,"line_end":831,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34776,"byte_end":34788,"line_start":832,"line_end":832,"column_start":1,"column_end":13}},{"value":"/ RUSTFLAGS=\"--cfg tracing_unstable\" cargo build","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34789,"byte_end":34839,"line_start":833,"line_end":833,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34840,"byte_end":34847,"line_start":834,"line_end":834,"column_start":1,"column_end":8}},{"value":"/ Alternatively, the following can be added to the `.cargo/config` file in a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34848,"byte_end":34926,"line_start":835,"line_end":835,"column_start":1,"column_end":79}},{"value":"/ project to automatically enable the cfg flag for that project:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34927,"byte_end":34993,"line_start":836,"line_end":836,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34994,"byte_end":34997,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":34998,"byte_end":35009,"line_start":838,"line_end":838,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35010,"byte_end":35021,"line_start":839,"line_end":839,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tracing_unstable\"]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35022,"byte_end":35067,"line_start":840,"line_end":840,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35068,"byte_end":35075,"line_start":841,"line_end":841,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35076,"byte_end":35079,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35080,"byte_end":35177,"line_start":843,"line_end":843,"column_start":1,"column_end":98}},{"value":"/ [field values]: crate::field","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35178,"byte_end":35210,"line_start":844,"line_end":844,"column_start":1,"column_end":33}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35211,"byte_end":35262,"line_start":845,"line_end":845,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35263,"byte_end":35266,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35267,"byte_end":35297,"line_start":847,"line_end":847,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35298,"byte_end":35301,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35302,"byte_end":35379,"line_start":849,"line_end":849,"column_start":1,"column_end":78}},{"value":"/ version is 1.42. The current Tracing version is not guaranteed to build on","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35380,"byte_end":35458,"line_start":850,"line_end":850,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35459,"byte_end":35520,"line_start":851,"line_end":851,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35521,"byte_end":35524,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35525,"byte_end":35604,"line_start":853,"line_end":853,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35605,"byte_end":35682,"line_start":854,"line_end":854,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35683,"byte_end":35759,"line_start":855,"line_end":855,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35760,"byte_end":35838,"line_start":856,"line_end":856,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35839,"byte_end":35914,"line_start":857,"line_end":857,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35915,"byte_end":35991,"line_start":858,"line_end":858,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":35992,"byte_end":36039,"line_start":859,"line_end":859,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36040,"byte_end":36043,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/0.4.6/log/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36044,"byte_end":36087,"line_start":861,"line_end":861,"column_start":1,"column_end":44}},{"value":"/ [span]: mod@span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36088,"byte_end":36108,"line_start":862,"line_end":862,"column_start":1,"column_end":21}},{"value":"/ [spans]: mod@span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36109,"byte_end":36130,"line_start":863,"line_end":863,"column_start":1,"column_end":22}},{"value":"/ [`Span`]: span::Span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36131,"byte_end":36155,"line_start":864,"line_end":864,"column_start":1,"column_end":25}},{"value":"/ [`in_scope`]: span::Span::in_scope","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36156,"byte_end":36194,"line_start":865,"line_end":865,"column_start":1,"column_end":39}},{"value":"/ [event]: Event","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36195,"byte_end":36213,"line_start":866,"line_end":866,"column_start":1,"column_end":19}},{"value":"/ [events]: Event","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36214,"byte_end":36233,"line_start":867,"line_end":867,"column_start":1,"column_end":20}},{"value":"/ [`Subscriber`]: subscriber::Subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36234,"byte_end":36276,"line_start":868,"line_end":868,"column_start":1,"column_end":43}},{"value":"/ [Subscriber::event]: subscriber::Subscriber::event","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36277,"byte_end":36331,"line_start":869,"line_end":869,"column_start":1,"column_end":55}},{"value":"/ [`enter`]: subscriber::Subscriber::enter","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36332,"byte_end":36376,"line_start":870,"line_end":870,"column_start":1,"column_end":45}},{"value":"/ [`exit`]: subscriber::Subscriber::exit","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36377,"byte_end":36419,"line_start":871,"line_end":871,"column_start":1,"column_end":43}},{"value":"/ [`enabled`]: subscriber::Subscriber::enabled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36420,"byte_end":36468,"line_start":872,"line_end":872,"column_start":1,"column_end":49}},{"value":"/ [metadata]: Metadata","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36469,"byte_end":36493,"line_start":873,"line_end":873,"column_start":1,"column_end":25}},{"value":"/ [`field::display`]: field::display","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36494,"byte_end":36532,"line_start":874,"line_end":874,"column_start":1,"column_end":39}},{"value":"/ [`field::debug`]: field::debug","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36533,"byte_end":36567,"line_start":875,"line_end":875,"column_start":1,"column_end":35}},{"value":"/ [`set_global_default`]: subscriber::set_global_default","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36568,"byte_end":36626,"line_start":876,"line_end":876,"column_start":1,"column_end":59}},{"value":"/ [`with_default`]: subscriber::with_default","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36627,"byte_end":36673,"line_start":877,"line_end":877,"column_start":1,"column_end":47}},{"value":"/ [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36674,"byte_end":36735,"line_start":878,"line_end":878,"column_start":1,"column_end":62}},{"value":"/ [`tracing-futures`]: https://crates.io/crates/tracing-futures","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36736,"byte_end":36801,"line_start":879,"line_end":879,"column_start":1,"column_end":66}},{"value":"/ [`tracing-subscriber`]: https://crates.io/crates/tracing-subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36802,"byte_end":36873,"line_start":880,"line_end":880,"column_start":1,"column_end":72}},{"value":"/ [`tracing-log`]: https://crates.io/crates/tracing-log","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36874,"byte_end":36931,"line_start":881,"line_end":881,"column_start":1,"column_end":58}},{"value":"/ [`tracing-timing`]: https://crates.io/crates/tracing-timing","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36932,"byte_end":36995,"line_start":882,"line_end":882,"column_start":1,"column_end":64}},{"value":"/ [`tracing-appender`]: https://crates.io/crates/tracing-appender","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":36996,"byte_end":37063,"line_start":883,"line_end":883,"column_start":1,"column_end":68}},{"value":"/ [`env_logger`]: https://crates.io/crates/env_logger","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":37064,"byte_end":37119,"line_start":884,"line_end":884,"column_start":1,"column_end":56}},{"value":"/ [`FmtSubscriber`]: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/struct.Subscriber.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":37120,"byte_end":37230,"line_start":885,"line_end":885,"column_start":1,"column_end":111}},{"value":"/ [static verbosity level]: level_filters/index.html#compile-time-filters","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":37231,"byte_end":37306,"line_start":886,"line_end":886,"column_start":1,"column_end":76}},{"value":"/ [instrument]: https://docs.rs/tracing-attributes/latest/tracing_attributes/attr.instrument.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":37307,"byte_end":37406,"line_start":887,"line_end":887,"column_start":1,"column_end":100}},{"value":"/ [flags]: #crate-feature-flags","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":37407,"byte_end":37440,"line_start":888,"line_end":888,"column_start":1,"column_end":34}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":37808,"byte_end":38270,"line_start":896,"line_end":917,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":69},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120197,"byte_end":120244,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120245,"byte_end":120248,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120249,"byte_end":120329,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120330,"byte_end":120408,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to the subscriber that collects it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120409,"byte_end":120448,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120449,"byte_end":120452,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Using the Trace Dispatcher","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120453,"byte_end":120485,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120486,"byte_end":120489,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120490,"byte_end":120568,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120569,"byte_end":120644,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ current subscriber.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120645,"byte_end":120668,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120669,"byte_end":120672,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Setting the Default Subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120673,"byte_end":120710,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120711,"byte_end":120714,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ By default, the current subscriber is an empty implementation that does","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120715,"byte_end":120790,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120791,"byte_end":120870,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ There are two methods for doing so: [`with_default`] and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120871,"byte_end":120931,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":120932,"byte_end":121010,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121011,"byte_end":121088,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ for the entire process.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121089,"byte_end":121116,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121117,"byte_end":121120,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121121,"byte_end":121197,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121198,"byte_end":121271,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121272,"byte_end":121284,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121285,"byte_end":121296,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121297,"byte_end":121328,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121329,"byte_end":121354,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121355,"byte_end":121391,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121392,"byte_end":121430,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121431,"byte_end":121439,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121440,"byte_end":121495,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121496,"byte_end":121564,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121565,"byte_end":121612,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121613,"byte_end":121650,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121651,"byte_end":121707,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121708,"byte_end":121765,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121766,"byte_end":121800,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121801,"byte_end":121834,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121835,"byte_end":121842,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121843,"byte_end":121906,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/ use dispatcher::Dispatch;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121907,"byte_end":121936,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121937,"byte_end":121940,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121941,"byte_end":121986,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":121987,"byte_end":122038,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122039,"byte_end":122046,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122047,"byte_end":122125,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ the duration of a block:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122126,"byte_end":122154,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122155,"byte_end":122166,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122167,"byte_end":122198,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122199,"byte_end":122224,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122225,"byte_end":122261,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122262,"byte_end":122300,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122301,"byte_end":122309,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122310,"byte_end":122365,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122366,"byte_end":122434,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122435,"byte_end":122482,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122483,"byte_end":122520,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122521,"byte_end":122577,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122578,"byte_end":122635,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122636,"byte_end":122670,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122671,"byte_end":122704,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122705,"byte_end":122712,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122713,"byte_end":122776,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122777,"byte_end":122824,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122825,"byte_end":122890,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122891,"byte_end":122919,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122920,"byte_end":122923,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122924,"byte_end":122953,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":122954,"byte_end":123001,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/     // my_subscriber is the default","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123002,"byte_end":123041,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123042,"byte_end":123049,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123050,"byte_end":123053,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // no default subscriber again","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123054,"byte_end":123088,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123089,"byte_end":123096,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ It's important to note that `with_default` will not propagate the current","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123097,"byte_end":123174,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123175,"byte_end":123255,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ block. To propagate the default subscriber to new threads, either use","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123256,"byte_end":123329,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123330,"byte_end":123398,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123399,"byte_end":123402,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123403,"byte_end":123480,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123481,"byte_end":123557,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ program. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123558,"byte_end":123583,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123584,"byte_end":123595,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123596,"byte_end":123627,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123628,"byte_end":123653,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123654,"byte_end":123690,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123691,"byte_end":123729,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123730,"byte_end":123738,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123739,"byte_end":123794,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123795,"byte_end":123863,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123864,"byte_end":123911,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123912,"byte_end":123949,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":123950,"byte_end":124006,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124007,"byte_end":124064,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124065,"byte_end":124099,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124100,"byte_end":124133,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124134,"byte_end":124141,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124142,"byte_end":124205,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124206,"byte_end":124253,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124254,"byte_end":124319,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124320,"byte_end":124348,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124349,"byte_end":124352,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ dispatcher::set_global_default(my_dispatch)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124353,"byte_end":124400,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     // `set_global_default` will return an error if the global default","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124401,"byte_end":124475,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/     // subscriber has already been set.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124476,"byte_end":124519,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/     .expect(\"global default was already set!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124520,"byte_end":124571,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124572,"byte_end":124575,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `my_subscriber` is now the default","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124576,"byte_end":124617,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124618,"byte_end":124625,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124626,"byte_end":124629,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124630,"byte_end":124695,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The thread-local scoped dispatcher (<code>with_default</code>)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124696,"byte_end":124785,"line_start":112,"line_end":112,"column_start":1,"column_end":90}},{"value":"/ requires the Rust standard library. <code>no_std</code> users should","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124786,"byte_end":124858,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ use <a href=\"fn.set_global_default.html\"><code>set_global_default</code></a>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124859,"byte_end":124939,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ instead.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124940,"byte_end":124952,"line_start":115,"line_end":115,"column_start":1,"column_end":13}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124953,"byte_end":124963,"line_start":116,"line_end":116,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124964,"byte_end":124967,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the Default Subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":124968,"byte_end":125007,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125008,"byte_end":125011,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ A thread's current default subscriber can be accessed using the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125012,"byte_end":125079,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/ [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125080,"byte_end":125158,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125159,"byte_end":125228,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/ instrumentation.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125229,"byte_end":125249,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125250,"byte_end":125253,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: trait.Subscriber.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125254,"byte_end":125295,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ [`with_default`]: fn.with_default.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125296,"byte_end":125338,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/ [`set_global_default`]: fn.set_global_default.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125339,"byte_end":125393,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/ [`get_default`]: fn.get_default.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125394,"byte_end":125434,"line_start":128,"line_end":128,"column_start":1,"column_end":41}},{"value":"/ [`Dispatch`]: struct.Dispatch.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/dispatcher.rs","byte_start":125435,"byte_end":125473,"line_start":129,"line_end":129,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112}],"decl_id":null,"docs":" `Span` and `Event` key-value data.","sig":null,"attributes":[{"value":"/ `Span` and `Event` key-value data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126257,"byte_end":126295,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126296,"byte_end":126299,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Spans and events may be annotated with key-value data, referred to as known","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126300,"byte_end":126379,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ as _fields_. These fields consist of a mapping from a key (corresponding to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126380,"byte_end":126459,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ a `&str` but represented internally as an array index) to a [`Value`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126460,"byte_end":126534,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126535,"byte_end":126538,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Value`s and `Subscriber`s","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126539,"byte_end":126571,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126572,"byte_end":126575,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s consume `Value`s as fields attached to [span]s or [`Event`]s.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126576,"byte_end":126655,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ The set of field keys on a given span or is defined on its [`Metadata`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126656,"byte_end":126732,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ When a span is created, it provides [`Attributes`] to the `Subscriber`'s","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126733,"byte_end":126809,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`new_span`] method, containing any fields whose values were provided when","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126810,"byte_end":126888,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ the span was created; and may call the `Subscriber`'s [`record`] method","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126889,"byte_end":126964,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ with additional [`Record`]s if values are added for more of its fields.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":126965,"byte_end":127040,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ Similarly, the [`Event`] type passed to the subscriber's [`event`] method","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127041,"byte_end":127118,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ will contain any fields attached to each event.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127119,"byte_end":127170,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127171,"byte_end":127174,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `tracing` represents values as either one of a set of Rust primitives","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127175,"byte_end":127248,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ (`i64`, `u64`, `f64`, `bool`, and `&str`) or using a `fmt::Display` or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127249,"byte_end":127323,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ `fmt::Debug` implementation. `Subscriber`s are provided these primitive","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127324,"byte_end":127399,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ value types as `dyn Value` trait objects.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127400,"byte_end":127445,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127446,"byte_end":127449,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These trait objects can be formatted using `fmt::Debug`, but may also be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127450,"byte_end":127526,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ recorded as typed data by calling the [`Value::record`] method on these","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127527,"byte_end":127602,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ trait objects with a _visitor_ implementing the [`Visit`] trait. This trait","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127603,"byte_end":127682,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ represents the behavior used to record values of various types. For example,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127683,"byte_end":127763,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ an implementation of `Visit` might record integers by incrementing counters","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127764,"byte_end":127843,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ for their field names rather than printing them.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127844,"byte_end":127896,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127897,"byte_end":127900,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127901,"byte_end":127904,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Using `valuable`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127905,"byte_end":127927,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127928,"byte_end":127931,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `tracing`'s [`Value`] trait is intentionally minimalist: it supports only a small","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":127932,"byte_end":128017,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ number of Rust primitives as typed values, and only permits recording","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128018,"byte_end":128091,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ user-defined types with their [`fmt::Debug`] or [`fmt::Display`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128092,"byte_end":128160,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ implementations. However, there are some cases where it may be useful to record","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128161,"byte_end":128244,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ nested values (such as arrays, `Vec`s, or `HashMap`s containing values), or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128245,"byte_end":128324,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ user-defined `struct` and `enum` types without having to format them as","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128325,"byte_end":128400,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ unstructured text.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128401,"byte_end":128423,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128424,"byte_end":128427,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ To address `Value`'s limitations, `tracing` offers experimental support for","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128428,"byte_end":128507,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ the [`valuable`] crate, which provides object-safe inspection of structured","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128508,"byte_end":128587,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ values. User-defined types can implement the [`valuable::Valuable`] trait,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128588,"byte_end":128666,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ and be recorded as a `tracing` field by calling their [`as_value`] method.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128667,"byte_end":128745,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ If the [`Subscriber`] also supports the `valuable` crate, it can","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128746,"byte_end":128814,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ then visit those types fields as structured values using `valuable`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128815,"byte_end":128887,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128888,"byte_end":128891,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128892,"byte_end":128957,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: <code>valuable</code> support is an","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":128958,"byte_end":129024,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/     <a href = \"../index.html#unstable-features\">unstable feature</a>. See","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129025,"byte_end":129102,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/     the documentation on unstable features for details on how to enable it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129103,"byte_end":129182,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129183,"byte_end":129193,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129194,"byte_end":129197,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129198,"byte_end":129214,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129215,"byte_end":129228,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ // Derive `Valuable` for our types:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129229,"byte_end":129268,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/ use valuable::Valuable;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129269,"byte_end":129296,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129297,"byte_end":129300,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129301,"byte_end":129338,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/ struct User {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129339,"byte_end":129356,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     name: String,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129357,"byte_end":129378,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     age: u32,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129379,"byte_end":129396,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     address: Address,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129397,"byte_end":129422,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129423,"byte_end":129428,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129429,"byte_end":129432,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129433,"byte_end":129470,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/ struct Address {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129471,"byte_end":129491,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/     country: String,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129492,"byte_end":129516,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     city: String,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129517,"byte_end":129538,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     street: String,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129539,"byte_end":129562,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129563,"byte_end":129568,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129569,"byte_end":129572,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let user = User {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129573,"byte_end":129594,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     name: \"Arwen Undomiel\".to_string(),","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129595,"byte_end":129638,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/     age: 3000,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129639,"byte_end":129657,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/     address: Address {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129658,"byte_end":129684,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/         country: \"Middle Earth\".to_string(),","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129685,"byte_end":129733,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/         city: \"Rivendell\".to_string(),","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129734,"byte_end":129776,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/         street: \"leafy lane\".to_string(),","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129777,"byte_end":129822,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     },","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129823,"byte_end":129833,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129834,"byte_end":129840,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129841,"byte_end":129844,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Recording `user` as a `valuable::Value` will allow the `tracing` subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129845,"byte_end":129927,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ // to traverse its fields as a nested, typed structure:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129928,"byte_end":129987,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ tracing::info!(current_user = user.as_value());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":129988,"byte_end":130039,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130040,"byte_end":130047,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130048,"byte_end":130051,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Alternatively, the [`valuable()`] function may be used to convert a type","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130052,"byte_end":130128,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ implementing [`Valuable`] into a `tracing` field value.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130129,"byte_end":130188,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130189,"byte_end":130192,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ When the `valuable` feature is enabled, the [`Visit`] trait will include an","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130193,"byte_end":130272,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ optional [`record_value`] method. `Visit` implementations that wish to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130273,"byte_end":130347,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ record `valuable` values can implement this method with custom behavior.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130348,"byte_end":130424,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ If a visitor does not implement `record_value`, the [`valuable::Value`] will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130425,"byte_end":130505,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ be forwarded to the visitor's [`record_debug`] method.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130506,"byte_end":130564,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130565,"byte_end":130568,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ [`fmt::Debug`]: std::fmt::Debug","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130569,"byte_end":130604,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"/ [`fmt::Display`]: std::fmt::Debug","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130605,"byte_end":130642,"line_start":98,"line_end":98,"column_start":1,"column_end":38}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130643,"byte_end":130694,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ [`valuable::Valuable`]: https://docs.rs/valuable/latest/valuable/trait.Valuable.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130695,"byte_end":130783,"line_start":100,"line_end":100,"column_start":1,"column_end":89}},{"value":"/ [`as_value`]: https://docs.rs/valuable/latest/valuable/trait.Valuable.html#tymethod.as_value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130784,"byte_end":130880,"line_start":101,"line_end":101,"column_start":1,"column_end":97}},{"value":"/ [`valuable::Value`]: https://docs.rs/valuable/latest/valuable/enum.Value.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130881,"byte_end":130962,"line_start":102,"line_end":102,"column_start":1,"column_end":82}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":130963,"byte_end":131000,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/ [`record_value`]: Visit::record_value","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131001,"byte_end":131042,"line_start":104,"line_end":104,"column_start":1,"column_end":42}},{"value":"/ [`record_debug`]: Visit::record_debug","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131043,"byte_end":131084,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"/ [span]: mod@crate::span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131085,"byte_end":131112,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/ [`Event`]: crate::event::Event","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131113,"byte_end":131147,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/ [`Metadata`]: crate::Metadata","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131148,"byte_end":131181,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/ [`Attributes`]: crate::span::Attributes","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131182,"byte_end":131225,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/ [`Record`]: crate::span::Record","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131226,"byte_end":131261,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`new_span`]: crate::Subscriber::new_span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131262,"byte_end":131307,"line_start":111,"line_end":111,"column_start":1,"column_end":46}},{"value":"/ [`record`]: crate::Subscriber::record","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131308,"byte_end":131349,"line_start":112,"line_end":112,"column_start":1,"column_end":42}},{"value":"/ [`event`]: crate::Subscriber::event","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131350,"byte_end":131389,"line_start":113,"line_end":113,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132060,"byte_end":132067,"line_start":129,"line_end":129,"column_start":11,"column_end":18},"name":"AsField","qualname":"::field::AsField","value":"AsField: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":101}],"decl_id":null,"docs":" Trait implemented to allow a type to be used as a field key.","sig":null,"attributes":[{"value":"/ Trait implemented to allow a type to be used as a field key.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131445,"byte_end":131509,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131510,"byte_end":131513,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131514,"byte_end":131579,"line_start":120,"line_end":120,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Although this is implemented for both the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131580,"byte_end":131648,"line_start":121,"line_end":121,"column_start":1,"column_end":69}},{"value":"/ <a href=\"./struct.Field.html\"><code>Field</code></a> type <em>and</em> any","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131649,"byte_end":131727,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ type that can be borrowed as an <code>&str</code>, only <code>Field</code>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131728,"byte_end":131806,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ allows <em>O</em>(1) access.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131807,"byte_end":131839,"line_start":124,"line_end":124,"column_start":1,"column_end":33}},{"value":"/ Indexing a field with a string results in an iterative search that performs","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131840,"byte_end":131919,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ string comparisons. Thus, if possible, once the key for a field is known, it","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":131920,"byte_end":132000,"line_start":126,"line_end":126,"column_start":1,"column_end":81}},{"value":"/ should be used whenever possible.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132001,"byte_end":132038,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132039,"byte_end":132049,"line_start":128,"line_end":128,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132300,"byte_end":132308,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"as_field","qualname":"::field::AsField::as_field","value":"pub fn as_field(&Self, &Metadata) -> Option<Field>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Attempts to convert `&self` into a `Field` with the specified `metadata`.","sig":null,"attributes":[{"value":"/ Attempts to convert `&self` into a `Field` with the specified `metadata`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132097,"byte_end":132174,"line_start":130,"line_end":130,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132179,"byte_end":132182,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ If `metadata` defines this field, then the field is returned. Otherwise,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132187,"byte_end":132263,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ this returns `None`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132268,"byte_end":132292,"line_start":133,"line_end":133,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":113},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"instrument","qualname":"::instrument","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":400},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":443},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":174}],"decl_id":null,"docs":" Attach a span to a `std::future::Future`.\n","sig":null,"attributes":[{"value":"/ Attach a span to a `std::future::Future`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39153,"byte_end":39198,"line_start":958,"line_end":958,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133566,"byte_end":133576,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"Instrument","qualname":"::instrument::Instrument","value":"Instrument: Sized","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" Attaches spans to a [`std::future::Future`].","sig":null,"attributes":[{"value":"/ Attaches spans to a [`std::future::Future`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133390,"byte_end":133438,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133439,"byte_end":133442,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Extension trait allowing futures to be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133443,"byte_end":133485,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/ instrumented with a `tracing` [span].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133486,"byte_end":133527,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133528,"byte_end":133531,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [span]: super::Span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133532,"byte_end":133555,"line_start":15,"line_end":15,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135805,"byte_end":135815,"line_start":82,"line_end":82,"column_start":8,"column_end":18},"name":"instrument","qualname":"::instrument::Instrument::instrument","value":"pub fn instrument(Self, Span) -> Instrumented<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Instruments this type with the provided [`Span`], returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the provided [`Span`], returning an","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133590,"byte_end":133656,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133661,"byte_end":133688,"line_start":18,"line_end":18,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133693,"byte_end":133696,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The attached [`Span`] will be [entered] every time the instrumented","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133701,"byte_end":133772,"line_start":20,"line_end":20,"column_start":5,"column_end":76}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133777,"byte_end":133802,"line_start":21,"line_end":21,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133807,"byte_end":133810,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133815,"byte_end":133829,"line_start":23,"line_end":23,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133834,"byte_end":133837,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Instrumenting a future:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133842,"byte_end":133869,"line_start":25,"line_end":25,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133874,"byte_end":133877,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133882,"byte_end":133893,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133898,"byte_end":133926,"line_start":28,"line_end":28,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133931,"byte_end":133934,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133939,"byte_end":133961,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ let my_future = async {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133966,"byte_end":133993,"line_start":31,"line_end":31,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133998,"byte_end":134012,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134017,"byte_end":134023,"line_start":33,"line_end":33,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134028,"byte_end":134031,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ my_future","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134036,"byte_end":134049,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/     .instrument(tracing::info_span!(\"my_future\"))","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134054,"byte_end":134107,"line_start":36,"line_end":36,"column_start":5,"column_end":58}},{"value":"/     .await","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134112,"byte_end":134126,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134131,"byte_end":134138,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134143,"byte_end":134150,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134155,"byte_end":134158,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ The [`Span::or_current`] combinator can be used in combination with","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134163,"byte_end":134234,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ `instrument` to ensure that the [current span] is attached to the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134239,"byte_end":134308,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ future if the span passed to `instrument` is [disabled]:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134313,"byte_end":134373,"line_start":43,"line_end":43,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134378,"byte_end":134381,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134386,"byte_end":134393,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134398,"byte_end":134426,"line_start":46,"line_end":46,"column_start":5,"column_end":33}},{"value":"/ # mod tokio {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134431,"byte_end":134448,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134453,"byte_end":134514,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134519,"byte_end":134526,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134531,"byte_end":134534,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let my_future = async {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134539,"byte_end":134566,"line_start":51,"line_end":51,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134571,"byte_end":134585,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134590,"byte_end":134596,"line_start":53,"line_end":53,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134601,"byte_end":134604,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let outer_span = tracing::info_span!(\"outer\").entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134609,"byte_end":134669,"line_start":55,"line_end":55,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134674,"byte_end":134677,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ // If the \"my_future\" span is enabled, then the spawned task will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134682,"byte_end":134751,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ // be within both \"my_future\" *and* \"outer\", since \"outer\" is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134756,"byte_end":134821,"line_start":58,"line_end":58,"column_start":5,"column_end":70}},{"value":"/ // \"my_future\"'s parent. However, if \"my_future\" is disabled,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134826,"byte_end":134891,"line_start":59,"line_end":59,"column_start":5,"column_end":70}},{"value":"/ // the spawned task will *not* be in any span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134896,"byte_end":134946,"line_start":60,"line_end":60,"column_start":5,"column_end":55}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134951,"byte_end":134968,"line_start":61,"line_end":61,"column_start":5,"column_end":22}},{"value":"/     my_future","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134973,"byte_end":134990,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         .instrument(tracing::debug_span!(\"my_future\"))","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":134995,"byte_end":135053,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135058,"byte_end":135064,"line_start":64,"line_end":64,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135069,"byte_end":135072,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ // Using `Span::or_current` ensures the spawned task is instrumented","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135077,"byte_end":135149,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ // with the current span, if the new span passed to `instrument` is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135154,"byte_end":135225,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ // not enabled. This means that if the \"my_future\"  span is disabled,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135230,"byte_end":135303,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ // the spawned task will still be instrumented with the \"outer\" span:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135308,"byte_end":135381,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ # let my_future = async {};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135386,"byte_end":135417,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135422,"byte_end":135439,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/    my_future","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135444,"byte_end":135460,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/         .instrument(tracing::debug_span!(\"my_future\").or_current())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135465,"byte_end":135536,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ );","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135541,"byte_end":135547,"line_start":74,"line_end":74,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135552,"byte_end":135559,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135564,"byte_end":135567,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [entered]: super::Span::enter()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135572,"byte_end":135607,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ [`Span::or_current`]: super::Span::or_current()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135612,"byte_end":135663,"line_start":78,"line_end":78,"column_start":5,"column_end":56}},{"value":"/ [current span]: super::Span::current()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135668,"byte_end":135710,"line_start":79,"line_end":79,"column_start":5,"column_end":47}},{"value":"/ [disabled]: super::Span::is_disabled()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135715,"byte_end":135757,"line_start":80,"line_end":80,"column_start":5,"column_end":47}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135762,"byte_end":135797,"line_start":81,"line_end":81,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136936,"byte_end":136951,"line_start":121,"line_end":121,"column_start":8,"column_end":23},"name":"in_current_span","qualname":"::instrument::Instrument::in_current_span","value":"pub fn in_current_span(Self) -> Instrumented<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Instruments this type with the [current] [`Span`], returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the [current] [`Span`], returning an","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135912,"byte_end":135979,"line_start":86,"line_end":86,"column_start":5,"column_end":72}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":135984,"byte_end":136011,"line_start":87,"line_end":87,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136016,"byte_end":136019,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The attached [`Span`] will be [entered] every time the instrumented","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136024,"byte_end":136095,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136100,"byte_end":136125,"line_start":90,"line_end":90,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136130,"byte_end":136133,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current span when spawning a new future.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136138,"byte_end":136216,"line_start":92,"line_end":92,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136221,"byte_end":136224,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136229,"byte_end":136243,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136248,"byte_end":136251,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136256,"byte_end":136267,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136272,"byte_end":136300,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136305,"byte_end":136308,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # mod tokio {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136313,"byte_end":136330,"line_start":99,"line_end":99,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136335,"byte_end":136396,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136401,"byte_end":136408,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136413,"byte_end":136435,"line_start":102,"line_end":102,"column_start":5,"column_end":27}},{"value":"/ let span = tracing::info_span!(\"my_span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136440,"byte_end":136486,"line_start":103,"line_end":103,"column_start":5,"column_end":51}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136491,"byte_end":136521,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136526,"byte_end":136529,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136534,"byte_end":136544,"line_start":106,"line_end":106,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136549,"byte_end":136552,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let future = async {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136557,"byte_end":136581,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/     tracing::debug!(\"this event will occur inside `my_span`\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136586,"byte_end":136652,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136657,"byte_end":136671,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136676,"byte_end":136682,"line_start":111,"line_end":111,"column_start":5,"column_end":11}},{"value":"/ tokio::spawn(future.in_current_span());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136687,"byte_end":136730,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136735,"byte_end":136742,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136747,"byte_end":136754,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136759,"byte_end":136762,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [current]: super::Span::current()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136767,"byte_end":136804,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/ [entered]: super::Span::enter()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136809,"byte_end":136844,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/ [`Span`]: crate::Span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136849,"byte_end":136874,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136879,"byte_end":136914,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":136919,"byte_end":136928,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137201,"byte_end":137215,"line_start":129,"line_end":129,"column_start":11,"column_end":25},"name":"WithSubscriber","qualname":"::instrument::WithSubscriber","value":"WithSubscriber: Sized","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":151}],"decl_id":null,"docs":" Extension trait allowing futures to be instrumented with\n a `tracing` [`Subscriber`](crate::Subscriber).\n","sig":null,"attributes":[{"value":"/ Extension trait allowing futures to be instrumented with","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137032,"byte_end":137092,"line_start":126,"line_end":126,"column_start":1,"column_end":61}},{"value":"/ a `tracing` [`Subscriber`](crate::Subscriber).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137093,"byte_end":137143,"line_start":127,"line_end":127,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138743,"byte_end":138758,"line_start":169,"line_end":169,"column_start":8,"column_end":23},"name":"with_subscriber","qualname":"::instrument::WithSubscriber::with_subscriber","value":"pub fn with_subscriber<S>(Self, S) -> WithDispatch<Self> where\nS: Into<Dispatch>","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Attaches the provided [`Subscriber`] to this type, returning a\n [`WithDispatch`] wrapper.","sig":null,"attributes":[{"value":"/ Attaches the provided [`Subscriber`] to this type, returning a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137229,"byte_end":137295,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/ [`WithDispatch`] wrapper.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137300,"byte_end":137329,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137334,"byte_end":137337,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The attached [`Subscriber`] will be set as the [default] when the returned","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137342,"byte_end":137420,"line_start":133,"line_end":133,"column_start":5,"column_end":83}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137425,"byte_end":137450,"line_start":134,"line_end":134,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137455,"byte_end":137458,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137463,"byte_end":137477,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137482,"byte_end":137485,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137490,"byte_end":137497,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ # use tracing::subscriber::NoSubscriber as MySubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137502,"byte_end":137562,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ # use tracing::subscriber::NoSubscriber as MyOtherSubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137567,"byte_end":137632,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137637,"byte_end":137660,"line_start":141,"line_end":141,"column_start":5,"column_end":28}},{"value":"/ use tracing::instrument::WithSubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137665,"byte_end":137709,"line_start":142,"line_end":142,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137714,"byte_end":137717,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ // Set the default `Subscriber`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137722,"byte_end":137757,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/ let _default = tracing::subscriber::set_default(MySubscriber::default());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137762,"byte_end":137839,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137844,"byte_end":137847,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ tracing::info!(\"this event will be recorded by the default `Subscriber`\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137852,"byte_end":137930,"line_start":147,"line_end":147,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137935,"byte_end":137938,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // Create a different `Subscriber` and attach it to a future.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137943,"byte_end":138008,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ let other_subscriber = MyOtherSubscriber::default();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138013,"byte_end":138069,"line_start":150,"line_end":150,"column_start":5,"column_end":61}},{"value":"/ let future = async {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138074,"byte_end":138098,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/     tracing::info!(\"this event will be recorded by the other `Subscriber`\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138103,"byte_end":138183,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138188,"byte_end":138202,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138207,"byte_end":138213,"line_start":154,"line_end":154,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138218,"byte_end":138221,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ future","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138226,"byte_end":138236,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/     // Attach the other `Subscriber` to the future before awaiting it","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138241,"byte_end":138314,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/     .with_subscriber(other_subscriber)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138319,"byte_end":138361,"line_start":158,"line_end":158,"column_start":5,"column_end":47}},{"value":"/     .await;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138366,"byte_end":138381,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138386,"byte_end":138389,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // Once the future has completed, we return to the default `Subscriber`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138394,"byte_end":138470,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ tracing::info!(\"this event will be recorded by the default `Subscriber`\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138475,"byte_end":138553,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138558,"byte_end":138565,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138570,"byte_end":138577,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138582,"byte_end":138585,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: super::Subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138590,"byte_end":138627,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/ [default]: crate::dispatcher#setting-the-default-subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138632,"byte_end":138695,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138700,"byte_end":138735,"line_start":168,"line_end":168,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140641,"byte_end":140664,"line_start":221,"line_end":221,"column_start":8,"column_end":31},"name":"with_current_subscriber","qualname":"::instrument::WithSubscriber::with_current_subscriber","value":"pub fn with_current_subscriber(Self) -> WithDispatch<Self>","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Attaches the current [default] [`Subscriber`] to this type, returning a\n [`WithDispatch`] wrapper.","sig":null,"attributes":[{"value":"/ Attaches the current [default] [`Subscriber`] to this type, returning a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":138960,"byte_end":139035,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ [`WithDispatch`] wrapper.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139040,"byte_end":139069,"line_start":180,"line_end":180,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139074,"byte_end":139077,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The attached `Subscriber` will be set as the [default] when the returned","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139082,"byte_end":139158,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139163,"byte_end":139188,"line_start":183,"line_end":183,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139193,"byte_end":139196,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current dispatcher context when","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139201,"byte_end":139270,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ spawning a new future that may run on a different thread.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139275,"byte_end":139336,"line_start":186,"line_end":186,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139341,"byte_end":139344,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139349,"byte_end":139363,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139368,"byte_end":139371,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139376,"byte_end":139383,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # mod tokio {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139388,"byte_end":139405,"line_start":191,"line_end":191,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139410,"byte_end":139471,"line_start":192,"line_end":192,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139476,"byte_end":139483,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ # use tracing::subscriber::NoSubscriber as MySubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139488,"byte_end":139548,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139553,"byte_end":139576,"line_start":195,"line_end":195,"column_start":5,"column_end":28}},{"value":"/ use tracing::instrument::WithSubscriber;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139581,"byte_end":139625,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139630,"byte_end":139633,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // Using `set_default` (rather than `set_global_default`) sets the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139638,"byte_end":139708,"line_start":198,"line_end":198,"column_start":5,"column_end":75}},{"value":"/ // default `Subscriber` for *this* thread only.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139713,"byte_end":139764,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ let _default = tracing::subscriber::set_default(MySubscriber::default());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139769,"byte_end":139846,"line_start":200,"line_end":200,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139851,"byte_end":139854,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let future = async {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139859,"byte_end":139883,"line_start":202,"line_end":202,"column_start":5,"column_end":29}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139888,"byte_end":139902,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139907,"byte_end":139913,"line_start":204,"line_end":204,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139918,"byte_end":139921,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ // If a multi-threaded async runtime is in use, this spawned task may","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":139926,"byte_end":139999,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ // run on a different thread, in a different default `Subscriber`'s context.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140004,"byte_end":140084,"line_start":207,"line_end":207,"column_start":5,"column_end":85}},{"value":"/ tokio::spawn(future);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140089,"byte_end":140114,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140119,"byte_end":140122,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ // However, calling `with_current_subscriber` on the future before","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140127,"byte_end":140197,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ // spawning it, ensures that the current thread's default `Subscriber` is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140202,"byte_end":140279,"line_start":211,"line_end":211,"column_start":5,"column_end":82}},{"value":"/ // propagated to the spawned task, regardless of where it executes:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140284,"byte_end":140355,"line_start":212,"line_end":212,"column_start":5,"column_end":76}},{"value":"/ # let future = async { };","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140360,"byte_end":140389,"line_start":213,"line_end":213,"column_start":5,"column_end":34}},{"value":"/ tokio::spawn(future.with_current_subscriber());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140394,"byte_end":140445,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140450,"byte_end":140457,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140462,"byte_end":140469,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ [`Subscriber`]: super::Subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140474,"byte_end":140511,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/ [default]: crate::dispatcher#setting-the-default-subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140516,"byte_end":140579,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140584,"byte_end":140619,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":140624,"byte_end":140633,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":141330,"byte_end":141342,"line_start":240,"line_end":240,"column_start":16,"column_end":28},"name":"WithDispatch","qualname":"::instrument::WithDispatch","value":"WithDispatch {  }","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"decl_id":null,"docs":" A [`Future`] that has been instrumented with a `tracing` [`Subscriber`].","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13264525,"byte_end":13264534,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":141832,"byte_end":141844,"line_start":257,"line_end":257,"column_start":16,"column_end":28},"name":"Instrumented","qualname":"::instrument::Instrumented","value":"Instrumented {  }","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"decl_id":null,"docs":" A [`Future`] that has been instrumented with a `tracing` [`Span`].","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13264525,"byte_end":13264534,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142344,"byte_end":142348,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"span","qualname":"<Instrumented<T>>::span","value":"pub fn span(&Self) -> &Span","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Borrows the `Span` that this type is instrumented by.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142275,"byte_end":142332,"line_start":279,"line_end":279,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142474,"byte_end":142482,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"span_mut","qualname":"<Instrumented<T>>::span_mut","value":"pub fn span_mut(&mut Self) -> &mut Span","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the `Span` that this type is instrumented by.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142397,"byte_end":142462,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142584,"byte_end":142589,"line_start":290,"line_end":290,"column_start":12,"column_end":17},"name":"inner","qualname":"<Instrumented<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142543,"byte_end":142572,"line_start":289,"line_end":289,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142685,"byte_end":142694,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Instrumented<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142636,"byte_end":142673,"line_start":294,"line_end":294,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142812,"byte_end":142825,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<Instrumented<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142753,"byte_end":142800,"line_start":299,"line_end":299,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142968,"byte_end":142981,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<Instrumented<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142901,"byte_end":142956,"line_start":304,"line_end":304,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143180,"byte_end":143190,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Instrumented<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Instrumented`, returning the wrapped type.","sig":null,"attributes":[{"value":"/ Consumes the `Instrumented`, returning the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143061,"byte_end":143121,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143126,"byte_end":143129,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Note that this drops the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143134,"byte_end":143168,"line_start":311,"line_end":311,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143961,"byte_end":143971,"line_start":340,"line_end":340,"column_start":12,"column_end":22},"name":"dispatcher","qualname":"<WithDispatch<T>>::dispatcher","value":"pub fn dispatcher(&Self) -> &Dispatch","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`Dispatch`] that is entered when this type is polled.\n","sig":null,"attributes":[{"value":"/ Borrows the [`Dispatch`] that is entered when this type is polled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143879,"byte_end":143949,"line_start":339,"line_end":339,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144071,"byte_end":144076,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"name":"inner","qualname":"<WithDispatch<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144030,"byte_end":144059,"line_start":344,"line_end":344,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144172,"byte_end":144181,"line_start":350,"line_end":350,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<WithDispatch<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144123,"byte_end":144160,"line_start":349,"line_end":349,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144299,"byte_end":144312,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<WithDispatch<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144240,"byte_end":144287,"line_start":354,"line_end":354,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144455,"byte_end":144468,"line_start":360,"line_end":360,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<WithDispatch<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144388,"byte_end":144443,"line_start":359,"line_end":359,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144667,"byte_end":144677,"line_start":367,"line_end":367,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WithDispatch<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Instrumented`, returning the wrapped type.","sig":null,"attributes":[{"value":"/ Consumes the `Instrumented`, returning the wrapped type.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144548,"byte_end":144608,"line_start":364,"line_end":364,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144613,"byte_end":144616,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Note that this drops the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":144621,"byte_end":144655,"line_start":366,"line_end":366,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":182},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"level_filters","qualname":"::level_filters","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":486}],"decl_id":null,"docs":" Trace verbosity level filtering.","sig":null,"attributes":[{"value":"/ Trace verbosity level filtering.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":144719,"byte_end":144755,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":144756,"byte_end":144759,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Compile time filters","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":144760,"byte_end":144786,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":144787,"byte_end":144790,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Trace verbosity levels can be statically disabled at compile time via Cargo","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":144791,"byte_end":144870,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ features, similar to the [`log` crate]. Trace instrumentation at disabled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":144871,"byte_end":144948,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ levels will be skipped and will not even be present in the resulting binary","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":144949,"byte_end":145028,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ unless the verbosity level is specified dynamically. This level is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145029,"byte_end":145099,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ configured separately for release and debug builds. The features are:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145100,"byte_end":145173,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145174,"byte_end":145177,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `max_level_off`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145178,"byte_end":145199,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ * `max_level_error`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145200,"byte_end":145223,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ * `max_level_warn`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145224,"byte_end":145246,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/ * `max_level_info`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145247,"byte_end":145269,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ * `max_level_debug`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145270,"byte_end":145293,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/ * `max_level_trace`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145294,"byte_end":145317,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/ * `release_max_level_off`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145318,"byte_end":145347,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ * `release_max_level_error`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145348,"byte_end":145379,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_warn`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145380,"byte_end":145410,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_info`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145411,"byte_end":145441,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_debug`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145442,"byte_end":145473,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_trace`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145474,"byte_end":145505,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145506,"byte_end":145509,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ These features control the value of the `STATIC_MAX_LEVEL` constant. The","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145510,"byte_end":145586,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ instrumentation macros macros check this value before recording an event or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145587,"byte_end":145666,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ constructing a span. By default, no levels are disabled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145667,"byte_end":145727,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145728,"byte_end":145731,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For example, a crate can disable trace level instrumentation in debug builds","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145732,"byte_end":145812,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ and trace, debug, and info level instrumentation in release builds with the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145813,"byte_end":145892,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ following configuration:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145893,"byte_end":145921,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145922,"byte_end":145925,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145926,"byte_end":145937,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145938,"byte_end":145956,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/ tracing = { version = \"0.1\", features = [\"max_level_debug\", \"release_max_level_warn\"] }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":145957,"byte_end":146048,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146049,"byte_end":146056,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ## Notes","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146057,"byte_end":146069,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146070,"byte_end":146073,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Please note that `tracing`'s static max level features do *not* control the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146074,"byte_end":146153,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ [`log`] records that may be emitted when [`tracing`'s \"log\" feature flag][f] is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146154,"byte_end":146237,"line_start":39,"line_end":39,"column_start":1,"column_end":84}},{"value":"/ enabled. This is to allow `tracing` to be disabled entirely at compile time","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146238,"byte_end":146317,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ while still emitting `log` records --- such as when a library using","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146318,"byte_end":146389,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ `tracing` is used by an application using `log` that doesn't want to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146390,"byte_end":146462,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ generate any `tracing`-related code, but does want to collect `log` records.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146463,"byte_end":146543,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146544,"byte_end":146547,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This means that if the \"log\" feature is in use, some code may be generated","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146548,"byte_end":146626,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ for `log` records emitted by disabled `tracing` events. If this is not","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146627,"byte_end":146701,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ desirable, `log` records may be disabled separately using [`log`'s static","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146702,"byte_end":146779,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ max level features][`log` crate].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146780,"byte_end":146817,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146818,"byte_end":146821,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146822,"byte_end":146855,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ [`log` crate]: https://docs.rs/log/latest/log/#compile-time-filters","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146856,"byte_end":146927,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ [f]: https://docs.rs/tracing/latest/tracing/#emitting-log-records","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":146928,"byte_end":146997,"line_start":52,"line_end":52,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147569,"byte_end":147585,"line_start":66,"line_end":66,"column_start":11,"column_end":27},"name":"STATIC_MAX_LEVEL","qualname":"::level_filters::STATIC_MAX_LEVEL","value":"LevelFilter","parent":null,"children":[],"decl_id":null,"docs":" The statically configured maximum trace level.","sig":null,"attributes":[{"value":"/ The statically configured maximum trace level.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147069,"byte_end":147119,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147120,"byte_end":147123,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation] for information on how to configure","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147124,"byte_end":147200,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ this.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147201,"byte_end":147210,"line_start":58,"line_end":58,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147211,"byte_end":147214,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This value is checked by the `event!` and `span!` macros. Code that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147215,"byte_end":147286,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ manually constructs events or spans via the `Event::record` function or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147287,"byte_end":147362,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ `Span` constructors should compare the level against this value to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147363,"byte_end":147433,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ determine if those spans or events are enabled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147434,"byte_end":147485,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147486,"byte_end":147489,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [module-level documentation]: ../index.html#compile-time-filters","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/level_filters.rs","byte_start":147490,"byte_end":147558,"line_start":65,"line_end":65,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":191},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":241},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":333},{"krate":0,"index":334}],"decl_id":null,"docs":" Spans represent periods of time in which a program was executing in a\n particular context.","sig":null,"attributes":[{"value":"/ Spans represent periods of time in which a program was executing in a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149126,"byte_end":149199,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ particular context.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149200,"byte_end":149223,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149224,"byte_end":149227,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A span consists of [fields], user-defined key-value pairs of arbitrary data","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149228,"byte_end":149307,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ that describe the context the span represents, and a set of fixed attributes","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149308,"byte_end":149388,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ that describe all `tracing` spans and events. Attributes describing spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149389,"byte_end":149466,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ include:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149467,"byte_end":149479,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149480,"byte_end":149483,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - An [`Id`] assigned by the subscriber that uniquely identifies it in relation","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149484,"byte_end":149566,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/   to other spans.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149567,"byte_end":149588,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/ - The span's [parent] in the trace tree.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149589,"byte_end":149633,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ - [Metadata] that describes static characteristics of all spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149634,"byte_end":149701,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/   originating from that callsite, such as its name, source code location,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149702,"byte_end":149779,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   [verbosity level], and the names of its fields.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149780,"byte_end":149833,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149834,"byte_end":149837,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Creating Spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149838,"byte_end":149858,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149859,"byte_end":149862,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Spans are created using the [`span!`] macro. This macro is invoked with the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149863,"byte_end":149942,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ following arguments, in order:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149943,"byte_end":149977,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149978,"byte_end":149981,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - The [`target`] and/or [`parent`][parent] attributes, if the user wishes to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":149982,"byte_end":150062,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/   override their default values.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150063,"byte_end":150099,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ - The span's [verbosity level]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150100,"byte_end":150134,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ - A string literal providing the span's name.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150135,"byte_end":150184,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ - Finally, between zero and 32 arbitrary key/value fields.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150185,"byte_end":150247,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150248,"byte_end":150251,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`target`]: ../struct.Metadata.html#method.target","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150252,"byte_end":150305,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150306,"byte_end":150309,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150310,"byte_end":150326,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150327,"byte_end":150338,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150339,"byte_end":150370,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150371,"byte_end":150374,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ /// Construct a new span at the `INFO` level named \"my_span\", with a single","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150375,"byte_end":150454,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ /// field named answer , with the value `42`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150455,"byte_end":150504,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ let my_span = span!(Level::INFO, \"my_span\", answer = 42);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150505,"byte_end":150566,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150567,"byte_end":150574,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150575,"byte_end":150578,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The documentation for the [`span!`] macro provides additional examples of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150579,"byte_end":150656,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ the various options that exist when creating spans.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150657,"byte_end":150712,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150713,"byte_end":150716,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The [`trace_span!`], [`debug_span!`], [`info_span!`], [`warn_span!`], and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150717,"byte_end":150794,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ [`error_span!`] exist as shorthand for constructing spans at various","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150795,"byte_end":150867,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ verbosity levels.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150868,"byte_end":150889,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150890,"byte_end":150893,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Recording Span Creation","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150894,"byte_end":150924,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150925,"byte_end":150928,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The [`Attributes`] type contains data associated with a span, and is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":150929,"byte_end":151001,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/ provided to the [`Subscriber`] when a new span is created. It contains","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151002,"byte_end":151076,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ the span's metadata, the ID of [the span's parent][parent] if one was","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151077,"byte_end":151150,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ explicitly set, and any fields whose values were recorded when the span was","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151151,"byte_end":151230,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ constructed. The subscriber, which is responsible for recording `tracing`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151231,"byte_end":151308,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ data, can then store or record these values.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151309,"byte_end":151357,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151358,"byte_end":151361,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # The Span Lifecycle","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151362,"byte_end":151386,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151387,"byte_end":151390,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Entering a Span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151391,"byte_end":151413,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151414,"byte_end":151417,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ A thread of execution is said to _enter_ a span when it begins executing,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151418,"byte_end":151495,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ and _exit_ the span when it switches to another context. Spans may be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151496,"byte_end":151569,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ entered through the [`enter`], [`entered`], and [`in_scope`] methods.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151570,"byte_end":151643,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151644,"byte_end":151647,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The [`enter`] method enters a span, returning a [guard] that exits the span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151648,"byte_end":151727,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ when dropped","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151728,"byte_end":151744,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151745,"byte_end":151752,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151753,"byte_end":151786,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151787,"byte_end":151811,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151812,"byte_end":151869,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151870,"byte_end":151873,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // `my_span` exists but has not been entered.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151874,"byte_end":151923,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151924,"byte_end":151927,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // Enter `my_span`...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151928,"byte_end":151953,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let _enter = my_span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151954,"byte_end":151987,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151988,"byte_end":151991,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // Perform some work inside of the context of `my_span`...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":151992,"byte_end":152054,"line_start":74,"line_end":74,"column_start":1,"column_end":63}},{"value":"/ // Dropping the `_enter` guard will exit the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152055,"byte_end":152109,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152110,"byte_end":152116,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152117,"byte_end":152120,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152121,"byte_end":152247,"line_start":78,"line_end":78,"column_start":1,"column_end":127}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152248,"byte_end":152332,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/     <code>Span::enter</code> may produce incorrect traces if the returned drop","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152333,"byte_end":152415,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/     guard is held across an await point. See","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152416,"byte_end":152464,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/     <a href=\"struct.Span.html#in-asynchronous-code\">the method documentation</a>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152465,"byte_end":152549,"line_start":82,"line_end":82,"column_start":1,"column_end":85}},{"value":"/     for details.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152550,"byte_end":152570,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/ </pre></div>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152571,"byte_end":152587,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152588,"byte_end":152591,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The [`entered`] method is analogous to [`enter`], but moves the span into","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152592,"byte_end":152669,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ the returned guard, rather than borrowing it. This allows creating and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152670,"byte_end":152744,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ entering a span in a single expression:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152745,"byte_end":152788,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152789,"byte_end":152792,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152793,"byte_end":152800,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152801,"byte_end":152834,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/ // Create a span and enter it, returning a guard:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152835,"byte_end":152888,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/ let span = span!(Level::INFO, \"my_span\").entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152889,"byte_end":152944,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152945,"byte_end":152948,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // We are now inside the span! Like `enter()`, the guard returned by","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":152949,"byte_end":153021,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/ // `entered()` will exit the span when it is dropped...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153022,"byte_end":153081,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153082,"byte_end":153085,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // ...but, it can also be exited explicitly, returning the `Span`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153086,"byte_end":153155,"line_start":98,"line_end":98,"column_start":1,"column_end":70}},{"value":"/ // struct:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153156,"byte_end":153170,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/ let span = span.exit();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153171,"byte_end":153198,"line_start":100,"line_end":100,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153199,"byte_end":153206,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153207,"byte_end":153210,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Finally, [`in_scope`] takes a closure or function pointer and executes it","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153211,"byte_end":153288,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ inside the span:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153289,"byte_end":153309,"line_start":104,"line_end":104,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153310,"byte_end":153313,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153314,"byte_end":153321,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153322,"byte_end":153355,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153356,"byte_end":153380,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var = &my_var);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153381,"byte_end":153448,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153449,"byte_end":153452,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153453,"byte_end":153478,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/     // perform some work in the context of `my_span`...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153479,"byte_end":153538,"line_start":112,"line_end":112,"column_start":1,"column_end":60}},{"value":"/ });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153539,"byte_end":153546,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153547,"byte_end":153550,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ // Perform some work outside of the context of `my_span`...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153551,"byte_end":153614,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153615,"byte_end":153618,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153619,"byte_end":153644,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/     // Perform some more work in the context of `my_span`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153645,"byte_end":153707,"line_start":118,"line_end":118,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153708,"byte_end":153715,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153716,"byte_end":153723,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153724,"byte_end":153727,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153728,"byte_end":153793,"line_start":122,"line_end":122,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: Since entering a span takes <code>&self</code>, and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153794,"byte_end":153876,"line_start":123,"line_end":123,"column_start":1,"column_end":83}},{"value":"/     <code>Span</code>s are <code>Clone</code>, <code>Send</code>, and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153877,"byte_end":153950,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/     <code>Sync</code>, it is entirely valid for multiple threads to enter the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":153951,"byte_end":154032,"line_start":125,"line_end":125,"column_start":1,"column_end":82}},{"value":"/     same span concurrently.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154033,"byte_end":154064,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154065,"byte_end":154075,"line_start":127,"line_end":127,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154076,"byte_end":154079,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ## Span Relationships","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154080,"byte_end":154105,"line_start":129,"line_end":129,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154106,"byte_end":154109,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Spans form a tree structure — unless it is a root span, all spans have a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154110,"byte_end":154188,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ _parent_, and may have one or more _children_. When a new span is created,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154189,"byte_end":154267,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ the current span becomes the new span's parent. The total execution time of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154268,"byte_end":154347,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ a span consists of the time spent in that span and in the entire subtree","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154348,"byte_end":154424,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"/ represented by its children. Thus, a parent span always lasts for at least","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154425,"byte_end":154503,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ as long as the longest-executing span in its subtree.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154504,"byte_end":154561,"line_start":136,"line_end":136,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154562,"byte_end":154565,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154566,"byte_end":154573,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154574,"byte_end":154607,"line_start":139,"line_end":139,"column_start":1,"column_end":34}},{"value":"/ // this span is considered the \"root\" of a new trace tree:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154608,"byte_end":154670,"line_start":140,"line_end":140,"column_start":1,"column_end":63}},{"value":"/ span!(Level::INFO, \"root\").in_scope(|| {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154671,"byte_end":154715,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/     // since we are now inside \"root\", this span is considered a child","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154716,"byte_end":154790,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/     // of \"root\":","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154791,"byte_end":154812,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/     span!(Level::DEBUG, \"outer_child\").in_scope(|| {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154813,"byte_end":154869,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/         // this span is a child of \"outer_child\", which is in turn a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154870,"byte_end":154942,"line_start":145,"line_end":145,"column_start":1,"column_end":73}},{"value":"/         // child of \"root\":","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154943,"byte_end":154974,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/         span!(Level::TRACE, \"inner_child\").in_scope(|| {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":154975,"byte_end":155035,"line_start":147,"line_end":147,"column_start":1,"column_end":61}},{"value":"/             // and so on...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155036,"byte_end":155067,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/         });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155068,"byte_end":155083,"line_start":149,"line_end":149,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155084,"byte_end":155095,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/     // another span created here would also be a child of \"root\".","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155096,"byte_end":155165,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155166,"byte_end":155173,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155174,"byte_end":155180,"line_start":153,"line_end":153,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155181,"byte_end":155184,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ In addition, the parent of a span may be explicitly specified in","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155185,"byte_end":155253,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/ the `span!` macro. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155254,"byte_end":155289,"line_start":156,"line_end":156,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155290,"byte_end":155293,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155294,"byte_end":155305,"line_start":158,"line_end":158,"column_start":1,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155306,"byte_end":155339,"line_start":159,"line_end":159,"column_start":1,"column_end":34}},{"value":"/ // Create, but do not enter, a span called \"foo\".","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155340,"byte_end":155393,"line_start":160,"line_end":160,"column_start":1,"column_end":54}},{"value":"/ let foo = span!(Level::INFO, \"foo\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155394,"byte_end":155434,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155435,"byte_end":155438,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // Create and enter a span called \"bar\".","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155439,"byte_end":155483,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ let bar = span!(Level::INFO, \"bar\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155484,"byte_end":155524,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"/ let _enter = bar.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155525,"byte_end":155554,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155555,"byte_end":155558,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ // Although we have currently entered \"bar\", \"baz\"'s parent span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155559,"byte_end":155627,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ // will be \"foo\".","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155628,"byte_end":155649,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/ let baz = span!(parent: &foo, Level::INFO, \"baz\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155650,"byte_end":155704,"line_start":169,"line_end":169,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155705,"byte_end":155712,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155713,"byte_end":155716,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ A child span should typically be considered _part_ of its parent. For","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155717,"byte_end":155790,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ example, if a subscriber is recording the length of time spent in various","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155791,"byte_end":155868,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ spans, it should generally include the time spent in a span's children as","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155869,"byte_end":155946,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ part of that span's duration.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155947,"byte_end":155980,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155981,"byte_end":155984,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ In addition to having zero or one parent, a span may also _follow from_ any","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":155985,"byte_end":156064,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/ number of other spans. This indicates a causal relationship between the span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156065,"byte_end":156145,"line_start":178,"line_end":178,"column_start":1,"column_end":81}},{"value":"/ and the spans that it follows from, but a follower is *not* typically","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156146,"byte_end":156219,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/ considered part of the duration of the span it follows. Unlike the parent, a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156220,"byte_end":156300,"line_start":180,"line_end":180,"column_start":1,"column_end":81}},{"value":"/ span may record that it follows from another span after it is created, using","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156301,"byte_end":156381,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ the [`follows_from`] method.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156382,"byte_end":156414,"line_start":182,"line_end":182,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156415,"byte_end":156418,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a listener task in a server. As the listener accepts","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156419,"byte_end":156499,"line_start":184,"line_end":184,"column_start":1,"column_end":81}},{"value":"/ incoming connections, it spawns new tasks that handle those connections. We","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156500,"byte_end":156579,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ might want to have a span representing the listener, and instrument each","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156580,"byte_end":156656,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ spawned handler task with its own span. We would want our instrumentation to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156657,"byte_end":156737,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ record that the handler tasks were spawned as a result of the listener task.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156738,"byte_end":156818,"line_start":188,"line_end":188,"column_start":1,"column_end":81}},{"value":"/ However, we might not consider the handler tasks to be _part_ of the time","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156819,"byte_end":156896,"line_start":189,"line_end":189,"column_start":1,"column_end":78}},{"value":"/ spent in the listener task, so we would not consider those spans children of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156897,"byte_end":156977,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ the listener span. Instead, we would record that the handler tasks follow","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":156978,"byte_end":157055,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ from the listener, recording the causal relationship but treating the spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157056,"byte_end":157135,"line_start":192,"line_end":192,"column_start":1,"column_end":80}},{"value":"/ as separate durations.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157136,"byte_end":157162,"line_start":193,"line_end":193,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157163,"byte_end":157166,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ## Closing Spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157167,"byte_end":157187,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157188,"byte_end":157191,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Execution may enter and exit a span multiple times before that span is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157192,"byte_end":157266,"line_start":197,"line_end":197,"column_start":1,"column_end":75}},{"value":"/ _closed_. Consider, for example, a future which has an associated","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157267,"byte_end":157336,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/ span and enters that span every time it is polled:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157337,"byte_end":157391,"line_start":199,"line_end":199,"column_start":1,"column_end":55}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157392,"byte_end":157403,"line_start":200,"line_end":200,"column_start":1,"column_end":12}},{"value":"/ # use futures::{Future, Poll, Async};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157404,"byte_end":157445,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157446,"byte_end":157467,"line_start":202,"line_end":202,"column_start":1,"column_end":22}},{"value":"/    // data","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157468,"byte_end":157482,"line_start":203,"line_end":203,"column_start":1,"column_end":15}},{"value":"/    span: tracing::Span,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157483,"byte_end":157510,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157511,"byte_end":157516,"line_start":205,"line_end":205,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157517,"byte_end":157520,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157521,"byte_end":157551,"line_start":207,"line_end":207,"column_start":1,"column_end":31}},{"value":"/     type Item = ();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157552,"byte_end":157575,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/     type Error = ();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157576,"byte_end":157600,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157601,"byte_end":157604,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/     fn poll(&mut self) -> Poll<Self::Item, Self::Error> {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157605,"byte_end":157666,"line_start":211,"line_end":211,"column_start":1,"column_end":62}},{"value":"/         let _enter = self.span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157667,"byte_end":157710,"line_start":212,"line_end":212,"column_start":1,"column_end":44}},{"value":"/         // Do actual future work...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157711,"byte_end":157750,"line_start":213,"line_end":213,"column_start":1,"column_end":40}},{"value":"/ # Ok(Async::Ready(()))","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157751,"byte_end":157777,"line_start":214,"line_end":214,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157778,"byte_end":157787,"line_start":215,"line_end":215,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157788,"byte_end":157793,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157794,"byte_end":157801,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157802,"byte_end":157805,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ If this future was spawned on an executor, it might yield one or more times","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157806,"byte_end":157885,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ before `poll` returns `Ok(Async::Ready)`. If the future were to yield, then","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157886,"byte_end":157965,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ the executor would move on to poll the next future, which may _also_ enter","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":157966,"byte_end":158044,"line_start":221,"line_end":221,"column_start":1,"column_end":79}},{"value":"/ an associated span or series of spans. Therefore, it is valid for a span to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158045,"byte_end":158124,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ be entered repeatedly before it completes. Only the time when that span or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158125,"byte_end":158203,"line_start":223,"line_end":223,"column_start":1,"column_end":79}},{"value":"/ one of its children was the current span is considered to be time spent in","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158204,"byte_end":158282,"line_start":224,"line_end":224,"column_start":1,"column_end":79}},{"value":"/ that span. A span which is not executing and has not yet been closed is said","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158283,"byte_end":158363,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"/ to be _idle_.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158364,"byte_end":158381,"line_start":226,"line_end":226,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158382,"byte_end":158385,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Because spans may be entered and exited multiple times before they close,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158386,"byte_end":158463,"line_start":228,"line_end":228,"column_start":1,"column_end":78}},{"value":"/ [`Subscriber`]s have separate trait methods which are called to notify them","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158464,"byte_end":158543,"line_start":229,"line_end":229,"column_start":1,"column_end":80}},{"value":"/ of span exits and when span handles are dropped. When execution exits a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158544,"byte_end":158619,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ span, [`exit`] will always be called with that span's ID to notify the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158620,"byte_end":158694,"line_start":231,"line_end":231,"column_start":1,"column_end":75}},{"value":"/ subscriber that the span has been exited. When span handles are dropped, the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158695,"byte_end":158775,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ [`drop_span`] method is called with that span's ID. The subscriber may use","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158776,"byte_end":158854,"line_start":233,"line_end":233,"column_start":1,"column_end":79}},{"value":"/ this to determine whether or not the span will be entered again.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158855,"byte_end":158923,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158924,"byte_end":158927,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ If there is only a single handle with the capacity to exit a span, dropping","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":158928,"byte_end":159007,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/ that handle \"closes\" the span, since the capacity to enter it no longer","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159008,"byte_end":159083,"line_start":237,"line_end":237,"column_start":1,"column_end":76}},{"value":"/ exists. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159084,"byte_end":159108,"line_start":238,"line_end":238,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159109,"byte_end":159116,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159117,"byte_end":159150,"line_start":240,"line_end":240,"column_start":1,"column_end":34}},{"value":"/ {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159151,"byte_end":159156,"line_start":241,"line_end":241,"column_start":1,"column_end":6}},{"value":"/     span!(Level::TRACE, \"my_span\").in_scope(|| {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159157,"byte_end":159209,"line_start":242,"line_end":242,"column_start":1,"column_end":53}},{"value":"/         // perform some work in the context of `my_span`...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159210,"byte_end":159273,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/     }); // --> Subscriber::exit(my_span)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159274,"byte_end":159318,"line_start":244,"line_end":244,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159319,"byte_end":159322,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/     // The handle to `my_span` only lives inside of this block; when it is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159323,"byte_end":159401,"line_start":246,"line_end":246,"column_start":1,"column_end":79}},{"value":"/     // dropped, the subscriber will be informed via `drop_span`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159402,"byte_end":159470,"line_start":247,"line_end":247,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159471,"byte_end":159474,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ } // --> Subscriber::drop_span(my_span)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159475,"byte_end":159518,"line_start":249,"line_end":249,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159519,"byte_end":159526,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159527,"byte_end":159530,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ However, if multiple handles exist, the span can still be re-entered even if","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159531,"byte_end":159611,"line_start":252,"line_end":252,"column_start":1,"column_end":81}},{"value":"/ one or more is dropped. For determining when _all_ handles to a span have","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159612,"byte_end":159689,"line_start":253,"line_end":253,"column_start":1,"column_end":78}},{"value":"/ been dropped, `Subscriber`s have a [`clone_span`] method, which is called","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159690,"byte_end":159767,"line_start":254,"line_end":254,"column_start":1,"column_end":78}},{"value":"/ every time a span handle is cloned. Combined with `drop_span`, this may be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159768,"byte_end":159846,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ used to track the number of handles to a given span — if `drop_span` has","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159847,"byte_end":159925,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ been called one more time than the number of calls to `clone_span` for a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":159926,"byte_end":160002,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ given ID, then no more handles to the span with that ID exist. The","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160003,"byte_end":160073,"line_start":258,"line_end":258,"column_start":1,"column_end":71}},{"value":"/ subscriber may then treat it as closed.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160074,"byte_end":160117,"line_start":259,"line_end":259,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160118,"byte_end":160121,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ # When to use spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160122,"byte_end":160145,"line_start":261,"line_end":261,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160146,"byte_end":160149,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ As a rule of thumb, spans should be used to represent discrete units of work","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160150,"byte_end":160230,"line_start":263,"line_end":263,"column_start":1,"column_end":81}},{"value":"/ (e.g., a given request's lifetime in a server) or periods of time spent in a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160231,"byte_end":160311,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/ given context (e.g., time spent interacting with an instance of an external","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160312,"byte_end":160391,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ system, such as a database).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160392,"byte_end":160424,"line_start":266,"line_end":266,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160425,"byte_end":160428,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ Which scopes in a program correspond to new spans depend somewhat on user","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160429,"byte_end":160506,"line_start":268,"line_end":268,"column_start":1,"column_end":78}},{"value":"/ intent. For example, consider the case of a loop in a program. Should we","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160507,"byte_end":160583,"line_start":269,"line_end":269,"column_start":1,"column_end":77}},{"value":"/ construct one span and perform the entire loop inside of that span, like:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160584,"byte_end":160661,"line_start":270,"line_end":270,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160662,"byte_end":160665,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160666,"byte_end":160677,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160678,"byte_end":160711,"line_start":273,"line_end":273,"column_start":1,"column_end":34}},{"value":"/ # let n = 1;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160712,"byte_end":160728,"line_start":274,"line_end":274,"column_start":1,"column_end":17}},{"value":"/ let span = span!(Level::TRACE, \"my_loop\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160729,"byte_end":160775,"line_start":275,"line_end":275,"column_start":1,"column_end":47}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160776,"byte_end":160806,"line_start":276,"line_end":276,"column_start":1,"column_end":31}},{"value":"/ for i in 0..n {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160807,"byte_end":160826,"line_start":277,"line_end":277,"column_start":1,"column_end":20}},{"value":"/     # let _ = i;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160827,"byte_end":160847,"line_start":278,"line_end":278,"column_start":1,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160848,"byte_end":160862,"line_start":279,"line_end":279,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160863,"byte_end":160868,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160869,"byte_end":160876,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ Or, should we create a new span for each iteration of the loop, as in:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160877,"byte_end":160951,"line_start":282,"line_end":282,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160952,"byte_end":160963,"line_start":283,"line_end":283,"column_start":1,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160964,"byte_end":160997,"line_start":284,"line_end":284,"column_start":1,"column_end":34}},{"value":"/ # let n = 1u64;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":160998,"byte_end":161017,"line_start":285,"line_end":285,"column_start":1,"column_end":20}},{"value":"/ for i in 0..n {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161018,"byte_end":161037,"line_start":286,"line_end":286,"column_start":1,"column_end":20}},{"value":"/     let span = span!(Level::TRACE, \"my_loop\", iteration = i);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161038,"byte_end":161103,"line_start":287,"line_end":287,"column_start":1,"column_end":66}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161104,"byte_end":161138,"line_start":288,"line_end":288,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161139,"byte_end":161153,"line_start":289,"line_end":289,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161154,"byte_end":161159,"line_start":290,"line_end":290,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161160,"byte_end":161167,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161168,"byte_end":161171,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Depending on the circumstances, we might want to do either, or both. For","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161172,"byte_end":161248,"line_start":293,"line_end":293,"column_start":1,"column_end":77}},{"value":"/ example, if we want to know how long was spent in the loop overall, we would","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161249,"byte_end":161329,"line_start":294,"line_end":294,"column_start":1,"column_end":81}},{"value":"/ create a single span around the entire loop; whereas if we wanted to know how","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161330,"byte_end":161411,"line_start":295,"line_end":295,"column_start":1,"column_end":82}},{"value":"/ much time was spent in each individual iteration, we would enter a new span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161412,"byte_end":161491,"line_start":296,"line_end":296,"column_start":1,"column_end":80}},{"value":"/ on every iteration.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161492,"byte_end":161515,"line_start":297,"line_end":297,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161516,"byte_end":161519,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ [fields]: ../field/index.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161520,"byte_end":161553,"line_start":299,"line_end":299,"column_start":1,"column_end":34}},{"value":"/ [Metadata]: ../struct.Metadata.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161554,"byte_end":161593,"line_start":300,"line_end":300,"column_start":1,"column_end":40}},{"value":"/ [`Id`]: struct.Id.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161594,"byte_end":161620,"line_start":301,"line_end":301,"column_start":1,"column_end":27}},{"value":"/ [verbosity level]: ../struct.Level.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161621,"byte_end":161664,"line_start":302,"line_end":302,"column_start":1,"column_end":44}},{"value":"/ [`span!`]: ../macro.span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161665,"byte_end":161698,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/ [`trace_span!`]: ../macro.trace_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161699,"byte_end":161744,"line_start":304,"line_end":304,"column_start":1,"column_end":46}},{"value":"/ [`debug_span!`]: ../macro.debug_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161745,"byte_end":161790,"line_start":305,"line_end":305,"column_start":1,"column_end":46}},{"value":"/ [`info_span!`]: ../macro.info_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161791,"byte_end":161834,"line_start":306,"line_end":306,"column_start":1,"column_end":44}},{"value":"/ [`warn_span!`]: ../macro.warn_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161835,"byte_end":161878,"line_start":307,"line_end":307,"column_start":1,"column_end":44}},{"value":"/ [`error_span!`]: ../macro.error_span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161879,"byte_end":161924,"line_start":308,"line_end":308,"column_start":1,"column_end":46}},{"value":"/ [`clone_span`]: ../subscriber/trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161925,"byte_end":161998,"line_start":309,"line_end":309,"column_start":1,"column_end":74}},{"value":"/ [`drop_span`]: ../subscriber/trait.Subscriber.html#method.drop_span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":161999,"byte_end":162070,"line_start":310,"line_end":310,"column_start":1,"column_end":72}},{"value":"/ [`exit`]: ../subscriber/trait.Subscriber.html#tymethod.exit","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162071,"byte_end":162134,"line_start":311,"line_end":311,"column_start":1,"column_end":64}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162135,"byte_end":162190,"line_start":312,"line_end":312,"column_start":1,"column_end":56}},{"value":"/ [`Attributes`]: struct.Attributes.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162191,"byte_end":162233,"line_start":313,"line_end":313,"column_start":1,"column_end":43}},{"value":"/ [`enter`]: struct.Span.html#method.enter","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162234,"byte_end":162278,"line_start":314,"line_end":314,"column_start":1,"column_end":45}},{"value":"/ [`entered`]: struct.Span.html#method.entered","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162279,"byte_end":162327,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/ [`in_scope`]: struct.Span.html#method.in_scope","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162328,"byte_end":162378,"line_start":316,"line_end":316,"column_start":1,"column_end":51}},{"value":"/ [`follows_from`]: struct.Span.html#method.follows_from","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162379,"byte_end":162437,"line_start":317,"line_end":317,"column_start":1,"column_end":59}},{"value":"/ [guard]: struct.Entered.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162438,"byte_end":162470,"line_start":318,"line_end":318,"column_start":1,"column_end":33}},{"value":"/ [parent]: #span-relationships","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162471,"byte_end":162504,"line_start":319,"line_end":319,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":239},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162811,"byte_end":162815,"line_start":335,"line_end":335,"column_start":11,"column_end":15},"name":"AsId","qualname":"::span::AsId","value":"AsId: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":240}],"decl_id":null,"docs":" Trait implemented by types which have a span `Id`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by types which have a span `Id`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162746,"byte_end":162800,"line_start":334,"line_end":334,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162971,"byte_end":162976,"line_start":338,"line_end":338,"column_start":8,"column_end":13},"name":"as_id","qualname":"::span::AsId::as_id","value":"pub fn as_id(&Self) -> Option<&Id>","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Returns the `Id` of the span that `self` corresponds to, or `None` if\n this corresponds to a disabled span.\n","sig":null,"attributes":[{"value":"/ Returns the `Id` of the span that `self` corresponds to, or `None` if","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162845,"byte_end":162918,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/ this corresponds to a disabled span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162923,"byte_end":162963,"line_start":337,"line_end":337,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":163361,"byte_end":163365,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"decl_id":null,"docs":" A handle representing a span, with the capability to enter the span if it\n exists.","sig":null,"attributes":[{"value":"/ A handle representing a span, with the capability to enter the span if it","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":163003,"byte_end":163080,"line_start":341,"line_end":341,"column_start":1,"column_end":78}},{"value":"/ exists.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":163081,"byte_end":163092,"line_start":342,"line_end":342,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":163093,"byte_end":163096,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ If the span was rejected by the current `Subscriber`'s filter, entering the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":163097,"byte_end":163176,"line_start":344,"line_end":344,"column_start":1,"column_end":80}},{"value":"/ span will silently do nothing. Thus, the handle can be used in the same","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":163177,"byte_end":163252,"line_start":345,"line_end":345,"column_start":1,"column_end":76}},{"value":"/ manner regardless of whether or not the trace is currently being collected.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":163253,"byte_end":163332,"line_start":346,"line_end":346,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":497},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164776,"byte_end":164783,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"Entered","qualname":"::span::Entered","value":"Entered {  }","parent":null,"children":[{"krate":0,"index":499}],"decl_id":null,"docs":" A guard representing a span which has been entered and is currently\n executing.","sig":null,"attributes":[{"value":"/ A guard representing a span which has been entered and is currently","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164419,"byte_end":164490,"line_start":377,"line_end":377,"column_start":1,"column_end":72}},{"value":"/ executing.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164491,"byte_end":164505,"line_start":378,"line_end":378,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164506,"byte_end":164509,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ When the guard is dropped, the span will be exited.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164510,"byte_end":164565,"line_start":380,"line_end":380,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164566,"byte_end":164569,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Span::enter`] function.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164570,"byte_end":164623,"line_start":382,"line_end":382,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164624,"byte_end":164627,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ [`Span::enter`]: ../struct.Span.html#method.enter","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164628,"byte_end":164681,"line_start":384,"line_end":384,"column_start":1,"column_end":54}},{"value":"must_use = \"once a span has been entered, it should be exited\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164699,"byte_end":164764,"line_start":386,"line_end":386,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165197,"byte_end":165208,"line_start":401,"line_end":401,"column_start":12,"column_end":23},"name":"EnteredSpan","qualname":"::span::EnteredSpan","value":"EnteredSpan {  }","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"decl_id":null,"docs":" An owned version of [`Entered`], a guard representing a span which has been\n entered and is currently executing.","sig":null,"attributes":[{"value":"/ An owned version of [`Entered`], a guard representing a span which has been","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164813,"byte_end":164892,"line_start":391,"line_end":391,"column_start":1,"column_end":80}},{"value":"/ entered and is currently executing.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164893,"byte_end":164932,"line_start":392,"line_end":392,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164933,"byte_end":164936,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ When the guard is dropped, the span will be exited.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164937,"byte_end":164992,"line_start":394,"line_end":394,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164993,"byte_end":164996,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Span::entered`] function.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":164997,"byte_end":165052,"line_start":396,"line_end":396,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165053,"byte_end":165056,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ [`Span::entered`]: super::Span::entered()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165057,"byte_end":165102,"line_start":398,"line_end":398,"column_start":1,"column_end":46}},{"value":"must_use = \"once a span has been entered, it should be exited\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165120,"byte_end":165185,"line_start":400,"line_end":400,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166345,"byte_end":166348,"line_start":436,"line_end":436,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"pub fn new(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` with the given [metadata] and set of\n [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` with the given [metadata] and set of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165749,"byte_end":165813,"line_start":423,"line_end":423,"column_start":5,"column_end":69}},{"value":"/ [field values].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165818,"byte_end":165837,"line_start":424,"line_end":424,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165842,"byte_end":165845,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The new span will be constructed by the currently-active [`Subscriber`],","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165850,"byte_end":165926,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ with the current span as its parent (if one exists).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165931,"byte_end":165987,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165992,"byte_end":165995,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166000,"byte_end":166073,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166078,"byte_end":166113,"line_start":430,"line_end":430,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166118,"byte_end":166121,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166126,"byte_end":166153,"line_start":432,"line_end":432,"column_start":5,"column_end":32}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166158,"byte_end":166213,"line_start":433,"line_end":433,"column_start":5,"column_end":60}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166218,"byte_end":166267,"line_start":434,"line_end":434,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166272,"byte_end":166333,"line_start":435,"line_end":435,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166557,"byte_end":166565,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"new_with","qualname":"<Span>::new_with","value":"pub fn new_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166517,"byte_end":166526,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167228,"byte_end":167236,"line_start":460,"line_end":460,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Span>::new_root","value":"pub fn new_root(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as the root of its own trace tree, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as the root of its own trace tree, with the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166807,"byte_end":166878,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166883,"byte_end":166930,"line_start":452,"line_end":452,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166935,"byte_end":166938,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":166943,"byte_end":167016,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167021,"byte_end":167056,"line_start":455,"line_end":455,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167061,"byte_end":167064,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167069,"byte_end":167096,"line_start":457,"line_end":457,"column_start":5,"column_end":32}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167101,"byte_end":167150,"line_start":458,"line_end":458,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167155,"byte_end":167216,"line_start":459,"line_end":459,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167450,"byte_end":167463,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"new_root_with","qualname":"<Span>::new_root_with","value":"pub fn new_root_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167410,"byte_end":167419,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":168131,"byte_end":168139,"line_start":484,"line_end":484,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Span>::child_of","value":"pub fn child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                         &'static Metadata,\n                                                         &field::ValueSet)\n-> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as child of the given parent span, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as child of the given parent span, with the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167710,"byte_end":167781,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167786,"byte_end":167833,"line_start":476,"line_end":476,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167838,"byte_end":167841,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167846,"byte_end":167919,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167924,"byte_end":167959,"line_start":479,"line_end":479,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167964,"byte_end":167967,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":167972,"byte_end":167999,"line_start":481,"line_end":481,"column_start":5,"column_end":32}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":168004,"byte_end":168053,"line_start":482,"line_end":482,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":168058,"byte_end":168119,"line_start":483,"line_end":483,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":168511,"byte_end":168524,"line_start":497,"line_end":497,"column_start":12,"column_end":25},"name":"child_of_with","qualname":"<Span>::child_of_with","value":"pub fn child_of_with<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                              &'static Metadata,\n                                                              &field::ValueSet,\n                                                              &Dispatch)\n-> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":168471,"byte_end":168480,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169360,"byte_end":169372,"line_start":519,"line_end":519,"column_start":12,"column_end":24},"name":"new_disabled","qualname":"<Span>::new_disabled","value":"pub fn new_disabled(&'static Metadata) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new disabled span with the given `Metadata`.","sig":null,"attributes":[{"value":"/ Constructs a new disabled span with the given `Metadata`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":168935,"byte_end":168996,"line_start":510,"line_end":510,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169001,"byte_end":169004,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ This should be used when a span is constructed from a known callsite,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169009,"byte_end":169082,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ but the subscriber indicates that it is disabled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169087,"byte_end":169140,"line_start":513,"line_end":513,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169145,"byte_end":169148,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will not notify the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169153,"byte_end":169229,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ `Subscriber` but _may_ record log messages if the `log` feature flag is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169234,"byte_end":169309,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/ enabled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169314,"byte_end":169326,"line_start":517,"line_end":517,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169331,"byte_end":169348,"line_start":518,"line_end":518,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169806,"byte_end":169810,"line_start":533,"line_end":533,"column_start":18,"column_end":22},"name":"none","qualname":"<Span>::none","value":"pub const fn none() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span that is *completely disabled*.","sig":null,"attributes":[{"value":"/ Constructs a new span that is *completely disabled*.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169508,"byte_end":169564,"line_start":526,"line_end":526,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169569,"byte_end":169572,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This can be used rather than `Option<Span>` to represent cases where a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169577,"byte_end":169651,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/ span is not present.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169656,"byte_end":169680,"line_start":529,"line_end":529,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169685,"byte_end":169688,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will do nothing.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169693,"byte_end":169766,"line_start":531,"line_end":531,"column_start":5,"column_end":78}},{"value":"inline(always)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169771,"byte_end":169788,"line_start":532,"line_end":532,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":170341,"byte_end":170348,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"current","qualname":"<Span>::current","value":"pub fn current() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the span [considered by the `Subscriber`] to be the\n current span.","sig":null,"attributes":[{"value":"/ Returns a handle to the span [considered by the `Subscriber`] to be the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169908,"byte_end":169983,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ current span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":169988,"byte_end":170005,"line_start":541,"line_end":541,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":170010,"byte_end":170013,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ If the subscriber indicates that it does not track the current span, or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":170018,"byte_end":170093,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ that the thread from which this function is called is not currently","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":170098,"byte_end":170169,"line_start":544,"line_end":544,"column_start":5,"column_end":76}},{"value":"/ inside a span, the returned span will be disabled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":170174,"byte_end":170228,"line_start":545,"line_end":545,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":170233,"byte_end":170236,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ [considered by the `Subscriber`]: ../subscriber/trait.Subscriber.html#method.current","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":170241,"byte_end":170329,"line_start":547,"line_end":547,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178264,"byte_end":178269,"line_start":775,"line_end":775,"column_start":12,"column_end":17},"name":"enter","qualname":"<Span>::enter","value":"pub fn enter(&Self) -> Entered","parent":null,"children":[],"decl_id":null,"docs":" Enters this span, returning a guard that will exit the span when dropped.","sig":null,"attributes":[{"value":"/ Enters this span, returning a guard that will exit the span when dropped.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171451,"byte_end":171528,"line_start":588,"line_end":588,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171533,"byte_end":171536,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled by the current subscriber, then this function will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171541,"byte_end":171619,"line_start":590,"line_end":590,"column_start":5,"column_end":83}},{"value":"/ call [`Subscriber::enter`] with the span's [`Id`], and dropping the guard","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171624,"byte_end":171701,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ will call [`Subscriber::exit`]. If the span is disabled, this does","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171706,"byte_end":171776,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ nothing.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171781,"byte_end":171793,"line_start":593,"line_end":593,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171798,"byte_end":171801,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # In Asynchronous Code","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171806,"byte_end":171832,"line_start":595,"line_end":595,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171837,"byte_end":171840,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ **Warning**: in asynchronous code that uses [async/await syntax][syntax],","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171845,"byte_end":171922,"line_start":597,"line_end":597,"column_start":5,"column_end":82}},{"value":"/ `Span::enter` should be used very carefully or avoided entirely. Holding","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":171927,"byte_end":172003,"line_start":598,"line_end":598,"column_start":5,"column_end":81}},{"value":"/ the drop guard returned by `Span::enter` across `.await` points will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172008,"byte_end":172080,"line_start":599,"line_end":599,"column_start":5,"column_end":77}},{"value":"/ result in incorrect traces. For example,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172085,"byte_end":172129,"line_start":600,"line_end":600,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172134,"byte_end":172137,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172142,"byte_end":172149,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172154,"byte_end":172183,"line_start":603,"line_end":603,"column_start":5,"column_end":34}},{"value":"/ # async fn some_other_async_function() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172188,"byte_end":172233,"line_start":604,"line_end":604,"column_start":5,"column_end":50}},{"value":"/ async fn my_async_function() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172238,"byte_end":172272,"line_start":605,"line_end":605,"column_start":5,"column_end":39}},{"value":"/     let span = info_span!(\"my_async_function\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172277,"byte_end":172328,"line_start":606,"line_end":606,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172333,"byte_end":172336,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/     // THIS WILL RESULT IN INCORRECT TRACES","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172341,"byte_end":172388,"line_start":608,"line_end":608,"column_start":5,"column_end":52}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172393,"byte_end":172427,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/     some_other_async_function().await;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172432,"byte_end":172474,"line_start":610,"line_end":610,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172479,"byte_end":172482,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172487,"byte_end":172501,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172506,"byte_end":172511,"line_start":613,"line_end":613,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172516,"byte_end":172523,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172528,"byte_end":172531,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The drop guard returned by `Span::enter` exits the span when it is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172536,"byte_end":172606,"line_start":616,"line_end":616,"column_start":5,"column_end":75}},{"value":"/ dropped. When an async function or async block yields at an `.await`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172611,"byte_end":172683,"line_start":617,"line_end":617,"column_start":5,"column_end":77}},{"value":"/ point, the current scope is _exited_, but values in that scope are","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172688,"byte_end":172758,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/ **not** dropped (because the async block will eventually resume","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172763,"byte_end":172830,"line_start":619,"line_end":619,"column_start":5,"column_end":72}},{"value":"/ execution from that await point). This means that _another_ task will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172835,"byte_end":172908,"line_start":620,"line_end":620,"column_start":5,"column_end":78}},{"value":"/ begin executing while _remaining_ in the entered span. This results in","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172913,"byte_end":172987,"line_start":621,"line_end":621,"column_start":5,"column_end":79}},{"value":"/ an incorrect trace.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":172992,"byte_end":173015,"line_start":622,"line_end":622,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173020,"byte_end":173023,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Instead of using `Span::enter` in asynchronous code, prefer the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173028,"byte_end":173095,"line_start":624,"line_end":624,"column_start":5,"column_end":72}},{"value":"/ following:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173100,"byte_end":173114,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173119,"byte_end":173122,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ * To enter a span for a synchronous section of code within an async","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173127,"byte_end":173198,"line_start":627,"line_end":627,"column_start":5,"column_end":76}},{"value":"/   block or function, prefer [`Span::in_scope`]. Since `in_scope` takes a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173203,"byte_end":173279,"line_start":628,"line_end":628,"column_start":5,"column_end":81}},{"value":"/   synchronous closure and exits the span when the closure returns, the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173284,"byte_end":173358,"line_start":629,"line_end":629,"column_start":5,"column_end":79}},{"value":"/   span will always be exited before the next await point. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173363,"byte_end":173437,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/   ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173442,"byte_end":173451,"line_start":631,"line_end":631,"column_start":5,"column_end":14}},{"value":"/   # use tracing::info_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173456,"byte_end":173487,"line_start":632,"line_end":632,"column_start":5,"column_end":36}},{"value":"/   # async fn some_other_async_function(_: ()) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173492,"byte_end":173544,"line_start":633,"line_end":633,"column_start":5,"column_end":57}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173549,"byte_end":173585,"line_start":634,"line_end":634,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173590,"byte_end":173643,"line_start":635,"line_end":635,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173648,"byte_end":173651,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/       let some_value = span.in_scope(|| {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173656,"byte_end":173701,"line_start":637,"line_end":637,"column_start":5,"column_end":50}},{"value":"/           // run some synchronous code inside the span...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173706,"byte_end":173767,"line_start":638,"line_end":638,"column_start":5,"column_end":66}},{"value":"/       });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173772,"byte_end":173785,"line_start":639,"line_end":639,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173790,"byte_end":173793,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/       // This is okay! The span has already been exited before we reach","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173798,"byte_end":173873,"line_start":641,"line_end":641,"column_start":5,"column_end":80}},{"value":"/       // the await point.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173878,"byte_end":173907,"line_start":642,"line_end":642,"column_start":5,"column_end":34}},{"value":"/       some_other_async_function(some_value).await;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173912,"byte_end":173966,"line_start":643,"line_end":643,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173971,"byte_end":173974,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":173979,"byte_end":173995,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174000,"byte_end":174007,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174012,"byte_end":174021,"line_start":647,"line_end":647,"column_start":5,"column_end":14}},{"value":"/ * For instrumenting asynchronous code, `tracing` provides the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174026,"byte_end":174091,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/   [`Future::instrument` combinator][instrument] for","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174096,"byte_end":174151,"line_start":649,"line_end":649,"column_start":5,"column_end":60}},{"value":"/   attaching a span to a future (async function or block). This will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174156,"byte_end":174227,"line_start":650,"line_end":650,"column_start":5,"column_end":76}},{"value":"/   enter the span _every_ time the future is polled, and exit it whenever","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174232,"byte_end":174308,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/   the future yields.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174313,"byte_end":174337,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174342,"byte_end":174345,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/   `Instrument` can be used with an async block inside an async function:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174350,"byte_end":174426,"line_start":654,"line_end":654,"column_start":5,"column_end":81}},{"value":"/   ```ignore","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174431,"byte_end":174446,"line_start":655,"line_end":655,"column_start":5,"column_end":20}},{"value":"/   # use tracing::info_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174451,"byte_end":174482,"line_start":656,"line_end":656,"column_start":5,"column_end":36}},{"value":"/   use tracing::Instrument;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174487,"byte_end":174517,"line_start":657,"line_end":657,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174522,"byte_end":174525,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174530,"byte_end":174577,"line_start":659,"line_end":659,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174582,"byte_end":174618,"line_start":660,"line_end":660,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174623,"byte_end":174676,"line_start":661,"line_end":661,"column_start":5,"column_end":58}},{"value":"/       async move {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174681,"byte_end":174703,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/          // This is correct! If we yield here, the span will be exited,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174708,"byte_end":174783,"line_start":663,"line_end":663,"column_start":5,"column_end":80}},{"value":"/          // and re-entered when we resume.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174788,"byte_end":174834,"line_start":664,"line_end":664,"column_start":5,"column_end":51}},{"value":"/          some_other_async_function().await;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174839,"byte_end":174886,"line_start":665,"line_end":665,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174891,"byte_end":174894,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/          //more asynchronous code inside the span...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174899,"byte_end":174955,"line_start":667,"line_end":667,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174960,"byte_end":174963,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/       }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174968,"byte_end":174979,"line_start":669,"line_end":669,"column_start":5,"column_end":16}},{"value":"/         // instrument the async block with the span...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":174984,"byte_end":175042,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/         .instrument(span)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175047,"byte_end":175076,"line_start":671,"line_end":671,"column_start":5,"column_end":34}},{"value":"/         // ...and await it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175081,"byte_end":175112,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/         .await","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175117,"byte_end":175135,"line_start":673,"line_end":673,"column_start":5,"column_end":23}},{"value":"/   }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175140,"byte_end":175147,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175152,"byte_end":175161,"line_start":675,"line_end":675,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175166,"byte_end":175169,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/   It can also be used to instrument calls to async functions at the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175174,"byte_end":175245,"line_start":677,"line_end":677,"column_start":5,"column_end":76}},{"value":"/   callsite:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175250,"byte_end":175265,"line_start":678,"line_end":678,"column_start":5,"column_end":20}},{"value":"/   ```ignore","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175270,"byte_end":175285,"line_start":679,"line_end":679,"column_start":5,"column_end":20}},{"value":"/   # use tracing::debug_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175290,"byte_end":175322,"line_start":680,"line_end":680,"column_start":5,"column_end":37}},{"value":"/   use tracing::Instrument;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175327,"byte_end":175357,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175362,"byte_end":175365,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175370,"byte_end":175417,"line_start":683,"line_end":683,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175422,"byte_end":175458,"line_start":684,"line_end":684,"column_start":5,"column_end":41}},{"value":"/       let some_value = some_other_async_function()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175463,"byte_end":175517,"line_start":685,"line_end":685,"column_start":5,"column_end":59}},{"value":"/          .instrument(debug_span!(\"some_other_async_function\"))","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175522,"byte_end":175588,"line_start":686,"line_end":686,"column_start":5,"column_end":71}},{"value":"/          .await;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175593,"byte_end":175613,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175618,"byte_end":175621,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175626,"byte_end":175642,"line_start":689,"line_end":689,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175647,"byte_end":175654,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175659,"byte_end":175668,"line_start":691,"line_end":691,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175673,"byte_end":175676,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ * The [`#[instrument]` attribute macro][attr] can automatically generate","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175681,"byte_end":175757,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/   correct code when used on an async function:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175762,"byte_end":175812,"line_start":694,"line_end":694,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175817,"byte_end":175820,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/   ```ignore","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175825,"byte_end":175840,"line_start":696,"line_end":696,"column_start":5,"column_end":20}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175845,"byte_end":175892,"line_start":697,"line_end":697,"column_start":5,"column_end":52}},{"value":"/   #[tracing::instrument(level = \"info\")]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175897,"byte_end":175941,"line_start":698,"line_end":698,"column_start":5,"column_end":49}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175946,"byte_end":175982,"line_start":699,"line_end":699,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175987,"byte_end":175990,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/       // This is correct! If we yield here, the span will be exited,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":175995,"byte_end":176067,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/       // and re-entered when we resume.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176072,"byte_end":176115,"line_start":702,"line_end":702,"column_start":5,"column_end":48}},{"value":"/       some_other_async_function().await;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176120,"byte_end":176164,"line_start":703,"line_end":703,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176169,"byte_end":176172,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176177,"byte_end":176193,"line_start":705,"line_end":705,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176198,"byte_end":176201,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/   }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176206,"byte_end":176213,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176218,"byte_end":176227,"line_start":708,"line_end":708,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176232,"byte_end":176235,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ [syntax]: https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176240,"byte_end":176338,"line_start":710,"line_end":710,"column_start":5,"column_end":103}},{"value":"/ [`Span::in_scope`]: #method.in_scope","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176343,"byte_end":176383,"line_start":711,"line_end":711,"column_start":5,"column_end":45}},{"value":"/ [instrument]: https://docs.rs/tracing/latest/tracing/trait.Instrument.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176388,"byte_end":176466,"line_start":712,"line_end":712,"column_start":5,"column_end":83}},{"value":"/ [attr]: ../../attr.instrument.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176471,"byte_end":176509,"line_start":713,"line_end":713,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176514,"byte_end":176517,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176522,"byte_end":176536,"line_start":715,"line_end":715,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176541,"byte_end":176544,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176549,"byte_end":176556,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176561,"byte_end":176594,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176599,"byte_end":176644,"line_start":719,"line_end":719,"column_start":5,"column_end":50}},{"value":"/ let guard = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176649,"byte_end":176678,"line_start":720,"line_end":720,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176683,"byte_end":176686,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ // code here is within the span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176691,"byte_end":176726,"line_start":722,"line_end":722,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176731,"byte_end":176734,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ drop(guard);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176739,"byte_end":176755,"line_start":724,"line_end":724,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176760,"byte_end":176763,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ // code here is no longer within the span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176768,"byte_end":176813,"line_start":726,"line_end":726,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176818,"byte_end":176821,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176826,"byte_end":176833,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176838,"byte_end":176841,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Guards need not be explicitly dropped:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176846,"byte_end":176888,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176893,"byte_end":176896,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176901,"byte_end":176908,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # use tracing::trace_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176913,"byte_end":176943,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ fn my_function() -> String {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176948,"byte_end":176980,"line_start":734,"line_end":734,"column_start":5,"column_end":37}},{"value":"/     // enter a span for the duration of this function.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":176985,"byte_end":177043,"line_start":735,"line_end":735,"column_start":5,"column_end":63}},{"value":"/     let span = trace_span!(\"my_function\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177048,"byte_end":177094,"line_start":736,"line_end":736,"column_start":5,"column_end":51}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177099,"byte_end":177133,"line_start":737,"line_end":737,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177138,"byte_end":177141,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call is still inside the span...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177146,"byte_end":177224,"line_start":739,"line_end":739,"column_start":5,"column_end":83}},{"value":"/     my_other_function();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177229,"byte_end":177257,"line_start":740,"line_end":740,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177262,"byte_end":177265,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177270,"byte_end":177343,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177348,"byte_end":177388,"line_start":743,"line_end":743,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177393,"byte_end":177398,"line_start":744,"line_end":744,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177403,"byte_end":177406,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177411,"byte_end":177439,"line_start":746,"line_end":746,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177444,"byte_end":177458,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177463,"byte_end":177468,"line_start":748,"line_end":748,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177473,"byte_end":177480,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177485,"byte_end":177488,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ Sub-scopes may be created to limit the duration for which the span is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177493,"byte_end":177566,"line_start":751,"line_end":751,"column_start":5,"column_end":78}},{"value":"/ entered:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177571,"byte_end":177583,"line_start":752,"line_end":752,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177588,"byte_end":177591,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177596,"byte_end":177603,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{info, info_span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177608,"byte_end":177645,"line_start":755,"line_end":755,"column_start":5,"column_end":42}},{"value":"/ let span = info_span!(\"my_great_span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177650,"byte_end":177693,"line_start":756,"line_end":756,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177698,"byte_end":177701,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177706,"byte_end":177711,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177716,"byte_end":177750,"line_start":759,"line_end":759,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177755,"byte_end":177758,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/     // this event occurs inside the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177763,"byte_end":177808,"line_start":761,"line_end":761,"column_start":5,"column_end":50}},{"value":"/     info!(\"i'm in the span!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177813,"byte_end":177847,"line_start":762,"line_end":762,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177852,"byte_end":177855,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/     // exiting the scope drops the guard, exiting the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177860,"byte_end":177923,"line_start":764,"line_end":764,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177928,"byte_end":177933,"line_start":765,"line_end":765,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177938,"byte_end":177941,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ // this event is not inside the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177946,"byte_end":177987,"line_start":767,"line_end":767,"column_start":5,"column_end":46}},{"value":"/ info!(\"i'm outside the span!\")","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":177992,"byte_end":178026,"line_start":768,"line_end":768,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178031,"byte_end":178038,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178043,"byte_end":178046,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber::enter`]: ../subscriber/trait.Subscriber.html#method.enter","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178051,"byte_end":178126,"line_start":771,"line_end":771,"column_start":5,"column_end":80}},{"value":"/ [`Subscriber::exit`]: ../subscriber/trait.Subscriber.html#method.exit","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178131,"byte_end":178204,"line_start":772,"line_end":772,"column_start":5,"column_end":78}},{"value":"/ [`Id`]: ../struct.Id.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178209,"byte_end":178238,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178243,"byte_end":178252,"line_start":774,"line_end":774,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182594,"byte_end":182601,"line_start":885,"line_end":885,"column_start":12,"column_end":19},"name":"entered","qualname":"<Span>::entered","value":"pub fn entered(Self) -> EnteredSpan","parent":null,"children":[],"decl_id":null,"docs":" Enters this span, consuming it and returning a [guard][`EnteredSpan`]\n that will exit the span when dropped.","sig":null,"attributes":[{"value":"/ Enters this span, consuming it and returning a [guard][`EnteredSpan`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178361,"byte_end":178434,"line_start":780,"line_end":780,"column_start":5,"column_end":78}},{"value":"/ that will exit the span when dropped.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178439,"byte_end":178480,"line_start":781,"line_end":781,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178485,"byte_end":178488,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178493,"byte_end":178564,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178569,"byte_end":178653,"line_start":784,"line_end":784,"column_start":5,"column_end":89}},{"value":"/     <code>Span::entered</code> may produce incorrect traces if the returned drop","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178658,"byte_end":178742,"line_start":785,"line_end":785,"column_start":5,"column_end":89}},{"value":"/     guard is held across an await point. See <a href=\"#in-asynchronous-code\">the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178747,"byte_end":178831,"line_start":786,"line_end":786,"column_start":5,"column_end":89}},{"value":"/     <code>Span::enter</code> documentation</a> for details.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178836,"byte_end":178899,"line_start":787,"line_end":787,"column_start":5,"column_end":68}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178904,"byte_end":178914,"line_start":788,"line_end":788,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178919,"byte_end":178922,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178927,"byte_end":178930,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled by the current subscriber, then this function will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":178935,"byte_end":179013,"line_start":791,"line_end":791,"column_start":5,"column_end":83}},{"value":"/ call [`Subscriber::enter`] with the span's [`Id`], and dropping the guard","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179018,"byte_end":179095,"line_start":792,"line_end":792,"column_start":5,"column_end":82}},{"value":"/ will call [`Subscriber::exit`]. If the span is disabled, this does","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179100,"byte_end":179170,"line_start":793,"line_end":793,"column_start":5,"column_end":75}},{"value":"/ nothing.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179175,"byte_end":179187,"line_start":794,"line_end":794,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179192,"byte_end":179195,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`Span::enter`] method, except that it moves the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179200,"byte_end":179275,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/ span by value into the returned guard, rather than borrowing it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179280,"byte_end":179348,"line_start":797,"line_end":797,"column_start":5,"column_end":73}},{"value":"/ Therefore, this method can be used to create and enter a span in a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179353,"byte_end":179423,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/ single expression, without requiring a `let`-binding. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179428,"byte_end":179498,"line_start":799,"line_end":799,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179503,"byte_end":179506,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179511,"byte_end":179518,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179523,"byte_end":179552,"line_start":802,"line_end":802,"column_start":5,"column_end":34}},{"value":"/ let _span = info_span!(\"something_interesting\").entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179557,"byte_end":179619,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179624,"byte_end":179631,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ rather than:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179636,"byte_end":179652,"line_start":805,"line_end":805,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179657,"byte_end":179664,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179669,"byte_end":179698,"line_start":807,"line_end":807,"column_start":5,"column_end":34}},{"value":"/ let span = info_span!(\"something_interesting\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179703,"byte_end":179754,"line_start":808,"line_end":808,"column_start":5,"column_end":56}},{"value":"/ let _e = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179759,"byte_end":179785,"line_start":809,"line_end":809,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179790,"byte_end":179797,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179802,"byte_end":179805,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Furthermore, `entered` may be used when the span must be stored in some","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179810,"byte_end":179885,"line_start":812,"line_end":812,"column_start":5,"column_end":80}},{"value":"/ other struct or be passed to a function while remaining entered.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179890,"byte_end":179958,"line_start":813,"line_end":813,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179963,"byte_end":179966,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":179971,"byte_end":180036,"line_start":815,"line_end":815,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: The returned <a href=\"../struct.EnteredSpan.html\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180041,"byte_end":180122,"line_start":816,"line_end":816,"column_start":5,"column_end":86}},{"value":"/     <code>EnteredSpan</a></code> guard does not implement <code>Send</code>.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180127,"byte_end":180207,"line_start":817,"line_end":817,"column_start":5,"column_end":85}},{"value":"/     Dropping the guard will exit <em>this</em> span, and if the guard is sent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180212,"byte_end":180293,"line_start":818,"line_end":818,"column_start":5,"column_end":86}},{"value":"/     to another thread and dropped there, that thread may never have entered","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180298,"byte_end":180377,"line_start":819,"line_end":819,"column_start":5,"column_end":84}},{"value":"/     this span. Thus, <code>EnteredSpan</code>s should not be sent between threads.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180382,"byte_end":180468,"line_start":820,"line_end":820,"column_start":5,"column_end":91}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180473,"byte_end":180483,"line_start":821,"line_end":821,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180488,"byte_end":180491,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ [syntax]: https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180496,"byte_end":180594,"line_start":823,"line_end":823,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180599,"byte_end":180602,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180607,"byte_end":180621,"line_start":825,"line_end":825,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180626,"byte_end":180629,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ The returned guard can be [explicitly exited][EnteredSpan::exit],","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180634,"byte_end":180703,"line_start":827,"line_end":827,"column_start":5,"column_end":74}},{"value":"/ returning the un-entered span:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180708,"byte_end":180742,"line_start":828,"line_end":828,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180747,"byte_end":180750,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180755,"byte_end":180762,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180767,"byte_end":180800,"line_start":831,"line_end":831,"column_start":5,"column_end":38}},{"value":"/ let span = span!(Level::INFO, \"doing_something\").entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180805,"byte_end":180868,"line_start":832,"line_end":832,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180873,"byte_end":180876,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ // code here is within the span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180881,"byte_end":180916,"line_start":834,"line_end":834,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180921,"byte_end":180924,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ // explicitly exit the span, returning it","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180929,"byte_end":180974,"line_start":836,"line_end":836,"column_start":5,"column_end":50}},{"value":"/ let span = span.exit();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":180979,"byte_end":181006,"line_start":837,"line_end":837,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181011,"byte_end":181014,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ // code here is no longer within the span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181019,"byte_end":181064,"line_start":839,"line_end":839,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181069,"byte_end":181072,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ // enter the span again","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181077,"byte_end":181104,"line_start":841,"line_end":841,"column_start":5,"column_end":32}},{"value":"/ let span = span.entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181109,"byte_end":181139,"line_start":842,"line_end":842,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181144,"byte_end":181147,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ // now we are inside the span once again","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181152,"byte_end":181196,"line_start":844,"line_end":844,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181201,"byte_end":181208,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181213,"byte_end":181216,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Guards need not be explicitly dropped:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181221,"byte_end":181263,"line_start":847,"line_end":847,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181268,"byte_end":181271,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181276,"byte_end":181283,"line_start":849,"line_end":849,"column_start":5,"column_end":12}},{"value":"/ # use tracing::trace_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181288,"byte_end":181318,"line_start":850,"line_end":850,"column_start":5,"column_end":35}},{"value":"/ fn my_function() -> String {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181323,"byte_end":181355,"line_start":851,"line_end":851,"column_start":5,"column_end":37}},{"value":"/     // enter a span for the duration of this function.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181360,"byte_end":181418,"line_start":852,"line_end":852,"column_start":5,"column_end":63}},{"value":"/     let span = trace_span!(\"my_function\").entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181423,"byte_end":181479,"line_start":853,"line_end":853,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181484,"byte_end":181487,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call is still inside the span...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181492,"byte_end":181570,"line_start":855,"line_end":855,"column_start":5,"column_end":83}},{"value":"/     my_other_function();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181575,"byte_end":181603,"line_start":856,"line_end":856,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181608,"byte_end":181611,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181616,"byte_end":181689,"line_start":858,"line_end":858,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181694,"byte_end":181734,"line_start":859,"line_end":859,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181739,"byte_end":181744,"line_start":860,"line_end":860,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181749,"byte_end":181752,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181757,"byte_end":181785,"line_start":862,"line_end":862,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181790,"byte_end":181804,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181809,"byte_end":181814,"line_start":864,"line_end":864,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181819,"byte_end":181826,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181831,"byte_end":181834,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Since the [`EnteredSpan`] guard can dereference to the [`Span`] itself,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181839,"byte_end":181914,"line_start":867,"line_end":867,"column_start":5,"column_end":80}},{"value":"/ the span may still be accessed while entered. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181919,"byte_end":181981,"line_start":868,"line_end":868,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181986,"byte_end":181989,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":181994,"byte_end":182005,"line_start":870,"line_end":870,"column_start":5,"column_end":16}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182010,"byte_end":182039,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/ use tracing::field;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182044,"byte_end":182067,"line_start":872,"line_end":872,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182072,"byte_end":182075,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ // create the span with an empty field, and enter it.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182080,"byte_end":182137,"line_start":874,"line_end":874,"column_start":5,"column_end":62}},{"value":"/ let span = info_span!(\"my_span\", some_field = field::Empty).entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182142,"byte_end":182216,"line_start":875,"line_end":875,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182221,"byte_end":182224,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ // we can still record a value for the field while the span is entered.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182229,"byte_end":182304,"line_start":877,"line_end":877,"column_start":5,"column_end":80}},{"value":"/ span.record(\"some_field\", &\"hello world!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182309,"byte_end":182356,"line_start":878,"line_end":878,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182361,"byte_end":182368,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182373,"byte_end":182376,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber::enter`]: ../subscriber/trait.Subscriber.html#method.enter","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182381,"byte_end":182456,"line_start":881,"line_end":881,"column_start":5,"column_end":80}},{"value":"/ [`Subscriber::exit`]: ../subscriber/trait.Subscriber.html#method.exit","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182461,"byte_end":182534,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/ [`Id`]: ../struct.Id.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182539,"byte_end":182568,"line_start":883,"line_end":883,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182573,"byte_end":182582,"line_start":884,"line_end":884,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":187043,"byte_end":187053,"line_start":1016,"line_end":1016,"column_start":12,"column_end":22},"name":"or_current","qualname":"<Span>::or_current","value":"pub fn or_current(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this span, if it was [enabled] by the current [`Subscriber`], or\n the [current span] (whose lexical distance may be further than expected),\n  if this span [is disabled].","sig":null,"attributes":[{"value":"/ Returns this span, if it was [enabled] by the current [`Subscriber`], or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182756,"byte_end":182832,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ the [current span] (whose lexical distance may be further than expected),","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182837,"byte_end":182914,"line_start":894,"line_end":894,"column_start":5,"column_end":82}},{"value":"/  if this span [is disabled].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182919,"byte_end":182951,"line_start":895,"line_end":895,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182956,"byte_end":182959,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ This method can be useful when propagating spans to spawned threads or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":182964,"byte_end":183038,"line_start":897,"line_end":897,"column_start":5,"column_end":79}},{"value":"/ [async tasks]. Consider the following:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183043,"byte_end":183085,"line_start":898,"line_end":898,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183090,"byte_end":183093,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183098,"byte_end":183105,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183110,"byte_end":183173,"line_start":901,"line_end":901,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183178,"byte_end":183181,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183186,"byte_end":183196,"line_start":903,"line_end":903,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183201,"byte_end":183204,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ let child_span = tracing::debug_span!(\"child\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183209,"byte_end":183260,"line_start":905,"line_end":905,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183265,"byte_end":183268,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183273,"byte_end":183305,"line_start":907,"line_end":907,"column_start":5,"column_end":37}},{"value":"/     let _entered = child_span.entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183310,"byte_end":183354,"line_start":908,"line_end":908,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183359,"byte_end":183362,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/     tracing::info!(\"spawned a thread!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183367,"byte_end":183411,"line_start":910,"line_end":910,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183416,"byte_end":183419,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183424,"byte_end":183438,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183443,"byte_end":183450,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183455,"byte_end":183462,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183467,"byte_end":183470,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ If the current [`Subscriber`] enables the [`DEBUG`] level, then both","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183475,"byte_end":183547,"line_start":916,"line_end":916,"column_start":5,"column_end":77}},{"value":"/ the \"parent\" and \"child\" spans will be enabled. Thus, when the \"spawaned","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183552,"byte_end":183628,"line_start":917,"line_end":917,"column_start":5,"column_end":81}},{"value":"/ a thread!\" event occurs, it will be inside of the \"child\" span. Because","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183633,"byte_end":183708,"line_start":918,"line_end":918,"column_start":5,"column_end":80}},{"value":"/ \"parent\" is the parent of \"child\", the event will _also_ be inside of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183713,"byte_end":183786,"line_start":919,"line_end":919,"column_start":5,"column_end":78}},{"value":"/ \"parent\".","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183791,"byte_end":183804,"line_start":920,"line_end":920,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183809,"byte_end":183812,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ However, if the [`Subscriber`] only enables the [`INFO`] level, the \"child\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183817,"byte_end":183896,"line_start":922,"line_end":922,"column_start":5,"column_end":84}},{"value":"/ span will be disabled. When the thread is spawned, the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183901,"byte_end":183959,"line_start":923,"line_end":923,"column_start":5,"column_end":63}},{"value":"/ `child_span.entered()` call will do nothing, since \"child\" is not","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":183964,"byte_end":184033,"line_start":924,"line_end":924,"column_start":5,"column_end":74}},{"value":"/ enabled. In this case, the \"spawned a thread!\" event occurs outside of","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184038,"byte_end":184112,"line_start":925,"line_end":925,"column_start":5,"column_end":79}},{"value":"/ *any* span, since the \"child\" span was responsible for propagating its","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184117,"byte_end":184191,"line_start":926,"line_end":926,"column_start":5,"column_end":79}},{"value":"/ parent to the spawned thread.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184196,"byte_end":184229,"line_start":927,"line_end":927,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184234,"byte_end":184237,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ If this is not the desired behavior, `Span::or_current` can be used to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184242,"byte_end":184316,"line_start":929,"line_end":929,"column_start":5,"column_end":79}},{"value":"/ ensure that the \"parent\" span is propagated in both cases, either as a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184321,"byte_end":184395,"line_start":930,"line_end":930,"column_start":5,"column_end":79}},{"value":"/ parent of \"child\" _or_ directly. For example:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184400,"byte_end":184449,"line_start":931,"line_end":931,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184454,"byte_end":184457,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184462,"byte_end":184469,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184474,"byte_end":184537,"line_start":934,"line_end":934,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184542,"byte_end":184545,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184550,"byte_end":184560,"line_start":936,"line_end":936,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184565,"byte_end":184568,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ // If DEBUG is enabled, then \"child\" will be enabled, and `or_current`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184573,"byte_end":184647,"line_start":938,"line_end":938,"column_start":5,"column_end":79}},{"value":"/ // returns \"child\". Otherwise, if DEBUG is not enabled, \"child\" will be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184652,"byte_end":184727,"line_start":939,"line_end":939,"column_start":5,"column_end":80}},{"value":"/ // disabled, and `or_current` returns \"parent\".","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184732,"byte_end":184783,"line_start":940,"line_end":940,"column_start":5,"column_end":56}},{"value":"/ let child_span = tracing::debug_span!(\"child\").or_current();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184788,"byte_end":184852,"line_start":941,"line_end":941,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184857,"byte_end":184860,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184865,"byte_end":184897,"line_start":943,"line_end":943,"column_start":5,"column_end":37}},{"value":"/     let _entered = child_span.entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184902,"byte_end":184946,"line_start":944,"line_end":944,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184951,"byte_end":184954,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     tracing::info!(\"spawned a thread!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":184959,"byte_end":185003,"line_start":946,"line_end":946,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185008,"byte_end":185011,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185016,"byte_end":185030,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185035,"byte_end":185042,"line_start":949,"line_end":949,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185047,"byte_end":185054,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185059,"byte_end":185062,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ When spawning [asynchronous tasks][async tasks], `Span::or_current` can","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185067,"byte_end":185142,"line_start":952,"line_end":952,"column_start":5,"column_end":80}},{"value":"/ be used similarly, in combination with [`instrument`]:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185147,"byte_end":185205,"line_start":953,"line_end":953,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185210,"byte_end":185213,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185218,"byte_end":185225,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185230,"byte_end":185258,"line_start":956,"line_end":956,"column_start":5,"column_end":33}},{"value":"/ # // lol","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185263,"byte_end":185275,"line_start":957,"line_end":957,"column_start":5,"column_end":17}},{"value":"/ # mod tokio {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185280,"byte_end":185297,"line_start":958,"line_end":958,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185302,"byte_end":185363,"line_start":959,"line_end":959,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185368,"byte_end":185375,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185380,"byte_end":185383,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185388,"byte_end":185451,"line_start":962,"line_end":962,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185456,"byte_end":185459,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185464,"byte_end":185474,"line_start":964,"line_end":964,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185479,"byte_end":185482,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ let child_span = tracing::debug_span!(\"child\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185487,"byte_end":185538,"line_start":966,"line_end":966,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185543,"byte_end":185546,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185551,"byte_end":185568,"line_start":968,"line_end":968,"column_start":5,"column_end":22}},{"value":"/     async {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185573,"byte_end":185588,"line_start":969,"line_end":969,"column_start":5,"column_end":20}},{"value":"/         tracing::info!(\"spawned a task!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185593,"byte_end":185639,"line_start":970,"line_end":970,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185644,"byte_end":185647,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/         // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185652,"byte_end":185670,"line_start":972,"line_end":972,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185675,"byte_end":185678,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/     }.instrument(child_span.or_current())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185683,"byte_end":185728,"line_start":974,"line_end":974,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185733,"byte_end":185739,"line_start":975,"line_end":975,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185744,"byte_end":185751,"line_start":976,"line_end":976,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185756,"byte_end":185759,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ In general, `or_current` should be preferred over nesting an","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185764,"byte_end":185828,"line_start":978,"line_end":978,"column_start":5,"column_end":69}},{"value":"/ [`instrument`]  call inside of an [`in_current_span`] call, as using","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185833,"byte_end":185905,"line_start":979,"line_end":979,"column_start":5,"column_end":77}},{"value":"/ `or_current` will be more efficient.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185910,"byte_end":185950,"line_start":980,"line_end":980,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185955,"byte_end":185958,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185963,"byte_end":185970,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":185975,"byte_end":186003,"line_start":983,"line_end":983,"column_start":5,"column_end":33}},{"value":"/ # // lol","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186008,"byte_end":186020,"line_start":984,"line_end":984,"column_start":5,"column_end":17}},{"value":"/ # mod tokio {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186025,"byte_end":186042,"line_start":985,"line_end":985,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186047,"byte_end":186108,"line_start":986,"line_end":986,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186113,"byte_end":186120,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"/ async fn my_async_fn() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186125,"byte_end":186153,"line_start":988,"line_end":988,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186158,"byte_end":186172,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186177,"byte_end":186182,"line_start":990,"line_end":990,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186187,"byte_end":186190,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186195,"byte_end":186258,"line_start":992,"line_end":992,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186263,"byte_end":186266,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ // Do this:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186271,"byte_end":186286,"line_start":994,"line_end":994,"column_start":5,"column_end":20}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186291,"byte_end":186308,"line_start":995,"line_end":995,"column_start":5,"column_end":22}},{"value":"/     my_async_fn().instrument(tracing::debug_span!(\"child\").or_current())","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186313,"byte_end":186389,"line_start":996,"line_end":996,"column_start":5,"column_end":81}},{"value":"/ );","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186394,"byte_end":186400,"line_start":997,"line_end":997,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186405,"byte_end":186408,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ // ...rather than this:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186413,"byte_end":186440,"line_start":999,"line_end":999,"column_start":5,"column_end":32}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186445,"byte_end":186462,"line_start":1000,"line_end":1000,"column_start":5,"column_end":22}},{"value":"/     my_async_fn()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186467,"byte_end":186488,"line_start":1001,"line_end":1001,"column_start":5,"column_end":26}},{"value":"/         .instrument(tracing::debug_span!(\"child\"))","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186493,"byte_end":186547,"line_start":1002,"line_end":1002,"column_start":5,"column_end":59}},{"value":"/         .in_current_span()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186552,"byte_end":186582,"line_start":1003,"line_end":1003,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186587,"byte_end":186593,"line_start":1004,"line_end":1004,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186598,"byte_end":186605,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186610,"byte_end":186613,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ [enabled]: crate::Subscriber::enabled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186618,"byte_end":186659,"line_start":1007,"line_end":1007,"column_start":5,"column_end":46}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186664,"byte_end":186701,"line_start":1008,"line_end":1008,"column_start":5,"column_end":42}},{"value":"/ [current span]: Span::current","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186706,"byte_end":186739,"line_start":1009,"line_end":1009,"column_start":5,"column_end":38}},{"value":"/ [is disabled]: Span::is_disabled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186744,"byte_end":186780,"line_start":1010,"line_end":1010,"column_start":5,"column_end":41}},{"value":"/ [`INFO`]: crate::Level::INFO","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186785,"byte_end":186817,"line_start":1011,"line_end":1011,"column_start":5,"column_end":37}},{"value":"/ [`DEBUG`]: crate::Level::DEBUG","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186822,"byte_end":186856,"line_start":1012,"line_end":1012,"column_start":5,"column_end":39}},{"value":"/ [async tasks]: std::task","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186861,"byte_end":186889,"line_start":1013,"line_end":1013,"column_start":5,"column_end":33}},{"value":"/ [`instrument`]: crate::instrument::Instrument::instrument","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186894,"byte_end":186955,"line_start":1014,"line_end":1014,"column_start":5,"column_end":66}},{"value":"/ [`in_current_span`]: crate::instrument::Instrument::in_current_span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":186960,"byte_end":187031,"line_start":1015,"line_end":1015,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189317,"byte_end":189325,"line_start":1089,"line_end":1089,"column_start":12,"column_end":20},"name":"in_scope","qualname":"<Span>::in_scope","value":"pub fn in_scope<F: FnOnce() -> T, T>(&Self, F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes the given function in the context of this span.","sig":null,"attributes":[{"value":"/ Executes the given function in the context of this span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188130,"byte_end":188190,"line_start":1053,"line_end":1053,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188195,"byte_end":188198,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled, then this function enters the span, invokes `f`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188203,"byte_end":188279,"line_start":1055,"line_end":1055,"column_start":5,"column_end":81}},{"value":"/ and then exits the span. If the span is disabled, `f` will still be","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188284,"byte_end":188355,"line_start":1056,"line_end":1056,"column_start":5,"column_end":76}},{"value":"/ invoked, but in the context of the currently-executing span (if there is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188360,"byte_end":188436,"line_start":1057,"line_end":1057,"column_start":5,"column_end":81}},{"value":"/ one).","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188441,"byte_end":188450,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188455,"byte_end":188458,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ Returns the result of evaluating `f`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188463,"byte_end":188504,"line_start":1060,"line_end":1060,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188509,"byte_end":188512,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188517,"byte_end":188531,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188536,"byte_end":188539,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188544,"byte_end":188551,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{trace, span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188556,"byte_end":188596,"line_start":1065,"line_end":1065,"column_start":5,"column_end":45}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188601,"byte_end":188650,"line_start":1066,"line_end":1066,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188655,"byte_end":188658,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188663,"byte_end":188688,"line_start":1068,"line_end":1068,"column_start":5,"column_end":30}},{"value":"/     // this event occurs within the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188693,"byte_end":188738,"line_start":1069,"line_end":1069,"column_start":5,"column_end":50}},{"value":"/     trace!(\"i'm in the span!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188743,"byte_end":188778,"line_start":1070,"line_end":1070,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188783,"byte_end":188790,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188795,"byte_end":188798,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ // this event occurs outside the span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188803,"byte_end":188845,"line_start":1073,"line_end":1073,"column_start":5,"column_end":47}},{"value":"/ trace!(\"i'm not in the span!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188850,"byte_end":188885,"line_start":1074,"line_end":1074,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188890,"byte_end":188897,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188902,"byte_end":188905,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ Calling a function and returning the result:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188910,"byte_end":188958,"line_start":1077,"line_end":1077,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188963,"byte_end":188970,"line_start":1078,"line_end":1078,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{info_span, Level};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":188975,"byte_end":189013,"line_start":1079,"line_end":1079,"column_start":5,"column_end":43}},{"value":"/ fn hello_world() -> String {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189018,"byte_end":189050,"line_start":1080,"line_end":1080,"column_start":5,"column_end":37}},{"value":"/     \"Hello world!\".to_owned()","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189055,"byte_end":189088,"line_start":1081,"line_end":1081,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189093,"byte_end":189098,"line_start":1082,"line_end":1082,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189103,"byte_end":189106,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ let span = info_span!(\"hello_world\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189111,"byte_end":189152,"line_start":1084,"line_end":1084,"column_start":5,"column_end":46}},{"value":"/ // the span will be entered for the duration of the call to","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189157,"byte_end":189220,"line_start":1085,"line_end":1085,"column_start":5,"column_end":68}},{"value":"/ // `hello_world`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189225,"byte_end":189246,"line_start":1086,"line_end":1086,"column_start":5,"column_end":26}},{"value":"/ let a_string = span.in_scope(hello_world);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189251,"byte_end":189297,"line_start":1087,"line_end":1087,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189302,"byte_end":189305,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189548,"byte_end":189553,"line_start":1096,"line_end":1096,"column_start":12,"column_end":17},"name":"field","qualname":"<Span>::field","value":"pub fn field<Q: ?Sized>(&Self, &Q) -> Option<field::Field> where\nQ: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Field`](../field/struct.Field.html) for the field with the\n given `name`, if one exists,\n","sig":null,"attributes":[{"value":"/ Returns a [`Field`](../field/struct.Field.html) for the field with the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189425,"byte_end":189499,"line_start":1094,"line_end":1094,"column_start":5,"column_end":79}},{"value":"/ given `name`, if one exists,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189504,"byte_end":189536,"line_start":1095,"line_end":1095,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189867,"byte_end":189876,"line_start":1106,"line_end":1106,"column_start":12,"column_end":21},"name":"has_field","qualname":"<Span>::has_field","value":"pub fn has_field<Q: ?Sized>(&Self, &Q) -> bool where Q: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Span` has a field for the given\n [`Field`](../field/struct.Field.html) or field name.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Span` has a field for the given","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189723,"byte_end":189780,"line_start":1103,"line_end":1103,"column_start":5,"column_end":62}},{"value":"/ [`Field`](../field/struct.Field.html) or field name.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189785,"byte_end":189841,"line_start":1104,"line_end":1104,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":189846,"byte_end":189855,"line_start":1105,"line_end":1105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":193094,"byte_end":193100,"line_start":1183,"line_end":1183,"column_start":12,"column_end":18},"name":"record","qualname":"<Span>::record","value":"pub fn record<Q: ?Sized, V>(&Self, &Q, &V) -> &Self where Q: field::AsField,\nV: field::Value","parent":null,"children":[],"decl_id":null,"docs":" Records that the field described by `field` has the value `value`.","sig":null,"attributes":[{"value":"/ Records that the field described by `field` has the value `value`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190004,"byte_end":190074,"line_start":1113,"line_end":1113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190079,"byte_end":190082,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ This may be used with [`field::Empty`] to declare fields whose values","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190087,"byte_end":190160,"line_start":1115,"line_end":1115,"column_start":5,"column_end":78}},{"value":"/ are not known when the span is created, and record them later:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190165,"byte_end":190231,"line_start":1116,"line_end":1116,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190236,"byte_end":190243,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190248,"byte_end":190285,"line_start":1118,"line_end":1118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190290,"byte_end":190293,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190298,"byte_end":190381,"line_start":1120,"line_end":1120,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190386,"byte_end":190420,"line_start":1121,"line_end":1121,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190425,"byte_end":190513,"line_start":1122,"line_end":1122,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190518,"byte_end":190521,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190526,"byte_end":190536,"line_start":1124,"line_end":1124,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190541,"byte_end":190544,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190549,"byte_end":190596,"line_start":1126,"line_end":1126,"column_start":5,"column_end":52}},{"value":"/ // (note that the field name is passed as a string slice)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190601,"byte_end":190662,"line_start":1127,"line_end":1127,"column_start":5,"column_end":66}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190667,"byte_end":190713,"line_start":1128,"line_end":1128,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190718,"byte_end":190725,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"/ However, it may also be used to record a _new_ value for a field whose","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190730,"byte_end":190804,"line_start":1130,"line_end":1130,"column_start":5,"column_end":79}},{"value":"/ value was already recorded:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190809,"byte_end":190840,"line_start":1131,"line_end":1131,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190845,"byte_end":190852,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}},{"value":"/ use tracing::info_span;","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190857,"byte_end":190884,"line_start":1133,"line_end":1133,"column_start":5,"column_end":32}},{"value":"/ # fn do_something() -> Result<(), ()> { Err(()) }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190889,"byte_end":190942,"line_start":1134,"line_end":1134,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190947,"byte_end":190950,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ // Initially, let's assume that our attempt to do something is going okay...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":190955,"byte_end":191035,"line_start":1136,"line_end":1136,"column_start":5,"column_end":85}},{"value":"/ let span = info_span!(\"doing_something\", is_okay = true);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191040,"byte_end":191101,"line_start":1137,"line_end":1137,"column_start":5,"column_end":66}},{"value":"/ let _e = span.enter();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191106,"byte_end":191132,"line_start":1138,"line_end":1138,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191137,"byte_end":191140,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ match do_something() {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191145,"byte_end":191171,"line_start":1140,"line_end":1140,"column_start":5,"column_end":31}},{"value":"/     Ok(something) => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191176,"byte_end":191202,"line_start":1141,"line_end":1141,"column_start":5,"column_end":31}},{"value":"/         // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191207,"byte_end":191225,"line_start":1142,"line_end":1142,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191230,"byte_end":191239,"line_start":1143,"line_end":1143,"column_start":5,"column_end":14}},{"value":"/     Err(_) => {","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191244,"byte_end":191263,"line_start":1144,"line_end":1144,"column_start":5,"column_end":24}},{"value":"/         // Things are no longer okay!","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191268,"byte_end":191309,"line_start":1145,"line_end":1145,"column_start":5,"column_end":46}},{"value":"/         span.record(\"is_okay\", &false);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191314,"byte_end":191357,"line_start":1146,"line_end":1146,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191362,"byte_end":191371,"line_start":1147,"line_end":1147,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191376,"byte_end":191381,"line_start":1148,"line_end":1148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191386,"byte_end":191393,"line_start":1149,"line_end":1149,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191398,"byte_end":191401,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191406,"byte_end":191471,"line_start":1151,"line_end":1151,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: The fields associated with a span are part","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191476,"byte_end":191549,"line_start":1152,"line_end":1152,"column_start":5,"column_end":78}},{"value":"/     of its <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191554,"byte_end":191629,"line_start":1153,"line_end":1153,"column_start":5,"column_end":80}},{"value":"/     The <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191634,"byte_end":191705,"line_start":1154,"line_end":1154,"column_start":5,"column_end":76}},{"value":"/     describing a particular span is constructed statically when the span","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191710,"byte_end":191786,"line_start":1155,"line_end":1155,"column_start":5,"column_end":81}},{"value":"/     is created and cannot be extended later to add new fields. Therefore,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191791,"byte_end":191868,"line_start":1156,"line_end":1156,"column_start":5,"column_end":82}},{"value":"/     you cannot record a value for a field that was not specified when the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191873,"byte_end":191950,"line_start":1157,"line_end":1157,"column_start":5,"column_end":82}},{"value":"/     span was created:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191955,"byte_end":191980,"line_start":1158,"line_end":1158,"column_start":5,"column_end":30}},{"value":"/ </pre>","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":191985,"byte_end":191995,"line_start":1159,"line_end":1159,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192000,"byte_end":192003,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192008,"byte_end":192015,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192020,"byte_end":192057,"line_start":1162,"line_end":1162,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192062,"byte_end":192065,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192070,"byte_end":192153,"line_start":1164,"line_end":1164,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192158,"byte_end":192192,"line_start":1165,"line_end":1165,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192197,"byte_end":192285,"line_start":1166,"line_end":1166,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192290,"byte_end":192293,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192298,"byte_end":192308,"line_start":1168,"line_end":1168,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192313,"byte_end":192316,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ // Now, you try to record a value for a new field, `new_field`, which was not","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192321,"byte_end":192402,"line_start":1170,"line_end":1170,"column_start":5,"column_end":86}},{"value":"/ // declared as `Empty` or populated when you created `span`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192407,"byte_end":192471,"line_start":1171,"line_end":1171,"column_start":5,"column_end":69}},{"value":"/ // You won't get any error, but the assignment will have no effect!","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192476,"byte_end":192547,"line_start":1172,"line_end":1172,"column_start":5,"column_end":76}},{"value":"/ span.record(\"new_field\", &\"interesting_value_you_really_need\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192552,"byte_end":192619,"line_start":1173,"line_end":1173,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192624,"byte_end":192627,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ // Instead, all fields that may be recorded after span creation should be declared up front,","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192632,"byte_end":192728,"line_start":1175,"line_end":1175,"column_start":5,"column_end":101}},{"value":"/ // using field::Empty when a value is not known, as we did for `parting`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192733,"byte_end":192810,"line_start":1176,"line_end":1176,"column_start":5,"column_end":82}},{"value":"/ // This `record` call will indeed replace field::Empty with \"you will be remembered\".","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192815,"byte_end":192904,"line_start":1177,"line_end":1177,"column_start":5,"column_end":94}},{"value":"/ span.record(\"parting\", &\"you will be remembered\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192909,"byte_end":192963,"line_start":1178,"line_end":1178,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192968,"byte_end":192975,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192980,"byte_end":192983,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ [`field::Empty`]: ../field/struct.Empty.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":192988,"byte_end":193036,"line_start":1181,"line_end":1181,"column_start":5,"column_end":53}},{"value":"/ [`Metadata`]: ../struct.Metadata.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":193041,"byte_end":193082,"line_start":1182,"line_end":1182,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":193627,"byte_end":193637,"line_start":1202,"line_end":1202,"column_start":12,"column_end":22},"name":"record_all","qualname":"<Span>::record_all","value":"pub fn record_all(&Self, &field::ValueSet) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in the provided `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Records all the fields in the provided `ValueSet`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":193561,"byte_end":193615,"line_start":1201,"line_end":1201,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194451,"byte_end":194462,"line_start":1229,"line_end":1229,"column_start":12,"column_end":23},"name":"is_disabled","qualname":"<Span>::is_disabled","value":"pub fn is_disabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was disabled by the subscriber and does not\n exist.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was disabled by the subscriber and does not","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194252,"byte_end":194327,"line_start":1222,"line_end":1222,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194332,"byte_end":194342,"line_start":1223,"line_end":1223,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194347,"byte_end":194350,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ See also [`is_none`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194355,"byte_end":194380,"line_start":1225,"line_end":1225,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194385,"byte_end":194388,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ [`is_none`]: #method.is_none","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194393,"byte_end":194425,"line_start":1227,"line_end":1227,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194430,"byte_end":194439,"line_start":1228,"line_end":1228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195020,"byte_end":195027,"line_start":1244,"line_end":1244,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Span>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was constructed by [`Span::none`] and is\n empty.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was constructed by [`Span::none`] and is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194520,"byte_end":194592,"line_start":1233,"line_end":1233,"column_start":5,"column_end":77}},{"value":"/ empty.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194597,"byte_end":194607,"line_start":1234,"line_end":1234,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194612,"byte_end":194615,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ If `is_none` returns `true` for a given span, then [`is_disabled`] will","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194620,"byte_end":194695,"line_start":1236,"line_end":1236,"column_start":5,"column_end":80}},{"value":"/ also return `true`. However, when a span is disabled by the subscriber","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194700,"byte_end":194774,"line_start":1237,"line_end":1237,"column_start":5,"column_end":79}},{"value":"/ rather than constructed by `Span::none`, this method will return","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194779,"byte_end":194847,"line_start":1238,"line_end":1238,"column_start":5,"column_end":73}},{"value":"/ `false`, while `is_disabled` will return `true`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194852,"byte_end":194904,"line_start":1239,"line_end":1239,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194909,"byte_end":194912,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ [`Span::none`]: #method.none","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194917,"byte_end":194949,"line_start":1241,"line_end":1241,"column_start":5,"column_end":37}},{"value":"/ [`is_disabled`]: #method.is_disabled","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194954,"byte_end":194994,"line_start":1242,"line_end":1242,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":194999,"byte_end":195008,"line_start":1243,"line_end":1243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":197053,"byte_end":197065,"line_start":1295,"line_end":1295,"column_start":12,"column_end":24},"name":"follows_from","qualname":"<Span>::follows_from","value":"pub fn follows_from<impl Into<Option<Id>>: Into<Option<Id>>>(&Self,\n                                                             impl Into<Option<Id>>)\n-> &Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the span with the given ID has an indirect causal\n relationship with this span.","sig":null,"attributes":[{"value":"/ Indicates that the span with the given ID has an indirect causal","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195106,"byte_end":195174,"line_start":1248,"line_end":1248,"column_start":5,"column_end":73}},{"value":"/ relationship with this span.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195179,"byte_end":195211,"line_start":1249,"line_end":1249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195216,"byte_end":195219,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195224,"byte_end":195300,"line_start":1251,"line_end":1251,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195305,"byte_end":195379,"line_start":1252,"line_end":1252,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195384,"byte_end":195455,"line_start":1253,"line_end":1253,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195460,"byte_end":195534,"line_start":1254,"line_end":1254,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195539,"byte_end":195605,"line_start":1255,"line_end":1255,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195610,"byte_end":195684,"line_start":1256,"line_end":1256,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195689,"byte_end":195761,"line_start":1257,"line_end":1257,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195766,"byte_end":195835,"line_start":1258,"line_end":1258,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195840,"byte_end":195843,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ If this span is disabled, or the resulting follows-from relationship","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195848,"byte_end":195920,"line_start":1260,"line_end":1260,"column_start":5,"column_end":77}},{"value":"/ would be invalid, this function will do nothing.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195925,"byte_end":195977,"line_start":1261,"line_end":1261,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195982,"byte_end":195985,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":195990,"byte_end":196004,"line_start":1263,"line_end":1263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196009,"byte_end":196012,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span`:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196017,"byte_end":196073,"line_start":1265,"line_end":1265,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196078,"byte_end":196085,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196090,"byte_end":196133,"line_start":1267,"line_end":1267,"column_start":5,"column_end":48}},{"value":"/ let span1 = span!(Level::INFO, \"span_1\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196138,"byte_end":196183,"line_start":1268,"line_end":1268,"column_start":5,"column_end":50}},{"value":"/ let span2 = span!(Level::DEBUG, \"span_2\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196188,"byte_end":196234,"line_start":1269,"line_end":1269,"column_start":5,"column_end":51}},{"value":"/ span2.follows_from(span1);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196239,"byte_end":196269,"line_start":1270,"line_end":1270,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196274,"byte_end":196281,"line_start":1271,"line_end":1271,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196286,"byte_end":196289,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with the current span:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196294,"byte_end":196358,"line_start":1273,"line_end":1273,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196363,"byte_end":196370,"line_start":1274,"line_end":1274,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196375,"byte_end":196418,"line_start":1275,"line_end":1275,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196423,"byte_end":196467,"line_start":1276,"line_end":1276,"column_start":5,"column_end":49}},{"value":"/ span.follows_from(Span::current());","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196472,"byte_end":196511,"line_start":1277,"line_end":1277,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196516,"byte_end":196523,"line_start":1278,"line_end":1278,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196528,"byte_end":196531,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span` reference:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196536,"byte_end":196602,"line_start":1280,"line_end":1280,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196607,"byte_end":196614,"line_start":1281,"line_end":1281,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196619,"byte_end":196662,"line_start":1282,"line_end":1282,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196667,"byte_end":196711,"line_start":1283,"line_end":1283,"column_start":5,"column_end":49}},{"value":"/ let curr = Span::current();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196716,"byte_end":196747,"line_start":1284,"line_end":1284,"column_start":5,"column_end":36}},{"value":"/ span.follows_from(&curr);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196752,"byte_end":196781,"line_start":1285,"line_end":1285,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196786,"byte_end":196793,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196798,"byte_end":196801,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with an `Id`:","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196806,"byte_end":196861,"line_start":1288,"line_end":1288,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196866,"byte_end":196873,"line_start":1289,"line_end":1289,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196878,"byte_end":196921,"line_start":1290,"line_end":1290,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196926,"byte_end":196970,"line_start":1291,"line_end":1291,"column_start":5,"column_end":49}},{"value":"/ let id = span.id();","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":196975,"byte_end":196998,"line_start":1292,"line_end":1292,"column_start":5,"column_end":28}},{"value":"/ span.follows_from(id);","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":197003,"byte_end":197029,"line_start":1293,"line_end":1293,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":197034,"byte_end":197041,"line_start":1294,"line_end":1294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":197355,"byte_end":197357,"line_start":1305,"line_end":1305,"column_start":12,"column_end":14},"name":"id","qualname":"<Span>::id","value":"pub fn id(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Id`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Id`, if it is enabled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":197296,"byte_end":197343,"line_start":1304,"line_end":1304,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":197500,"byte_end":197508,"line_start":1310,"line_end":1310,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Span>::metadata","value":"pub fn metadata(&Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Metadata`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Metadata`, if it is enabled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":197435,"byte_end":197488,"line_start":1309,"line_end":1309,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199349,"byte_end":199364,"line_start":1353,"line_end":1353,"column_start":12,"column_end":27},"name":"with_subscriber","qualname":"<Span>::with_subscriber","value":"pub fn with_subscriber<T,\n                       impl FnOnce((&Id, &Dispatch)) -> T: FnOnce((&Id,\n                                                                   &Dispatch))\n                       -> T>(&Self, impl FnOnce((&Id, &Dispatch)) -> T)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes a function with a reference to this span's ID and subscriber.","sig":null,"attributes":[{"value":"/ Invokes a function with a reference to this span's ID and subscriber.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199053,"byte_end":199126,"line_start":1348,"line_end":1348,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199131,"byte_end":199134,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ if this span is enabled, the provided function is called, and the result is returned.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199139,"byte_end":199228,"line_start":1350,"line_end":1350,"column_start":5,"column_end":94}},{"value":"/ If the span is disabled, the function is not called, and this method returns `None`","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199233,"byte_end":199320,"line_start":1351,"line_end":1351,"column_start":5,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199325,"byte_end":199337,"line_start":1352,"line_end":1352,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204046,"byte_end":204048,"line_start":1526,"line_end":1526,"column_start":12,"column_end":14},"name":"id","qualname":"<EnteredSpan>::id","value":"pub fn id(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Id`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Id`, if it is enabled.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":203987,"byte_end":204034,"line_start":1525,"line_end":1525,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204207,"byte_end":204211,"line_start":1532,"line_end":1532,"column_start":12,"column_end":16},"name":"exit","qualname":"<EnteredSpan>::exit","value":"pub fn exit(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Exits this span, returning the underlying [`Span`].\n","sig":null,"attributes":[{"value":"/ Exits this span, returning the underlying [`Span`].","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204126,"byte_end":204181,"line_start":1530,"line_end":1530,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204186,"byte_end":204195,"line_start":1531,"line_end":1531,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":337},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350}],"decl_id":null,"docs":" Collects and records trace data.\n","sig":null,"attributes":[{"value":"/ Collects and records trace data.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":208739,"byte_end":208775,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":342},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209475,"byte_end":209487,"line_start":20,"line_end":20,"column_start":8,"column_end":20},"name":"with_default","qualname":"::subscriber::with_default","value":"pub fn with_default<T, S, impl FnOnce() -> T: FnOnce() ->\n                    T>(S, impl FnOnce() -> T) -> T where S: Subscriber +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this subscriber as the default for the duration of a closure.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":208934,"byte_end":209004,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209005,"byte_end":209008,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209009,"byte_end":209075,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209076,"byte_end":209150,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209151,"byte_end":209223,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209224,"byte_end":209254,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209255,"byte_end":209258,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: ../span/struct.Span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209259,"byte_end":209297,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209298,"byte_end":209353,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: :../event/struct.Event.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209354,"byte_end":209396,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209397,"byte_end":209420,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":346},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210280,"byte_end":210298,"line_start":39,"line_end":39,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::subscriber::set_global_default","value":"pub fn set_global_default<S>(S) -> Result<(), SetGlobalDefaultError> where\nS: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this subscriber as the global default for the duration of the entire program.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209665,"byte_end":209751,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/ Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209752,"byte_end":209861,"line_start":28,"line_end":28,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209862,"byte_end":209865,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209866,"byte_end":209948,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ Returns whether the initialization was successful.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":209949,"byte_end":210003,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210004,"byte_end":210007,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note: Libraries should *NOT* call `set_global_default()`! That will cause conflicts when","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210008,"byte_end":210100,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ executables try to set them later.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210101,"byte_end":210139,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210140,"byte_end":210143,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210144,"byte_end":210174,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210175,"byte_end":210230,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210231,"byte_end":210272,"line_start":38,"line_end":38,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":348},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":211187,"byte_end":211198,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"set_default","qualname":"::subscriber::set_default","value":"pub fn set_default<S>(S) -> DefaultGuard where S: Subscriber + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the subscriber as the default for the duration of the lifetime of the\n returned [`DefaultGuard`]","sig":null,"attributes":[{"value":"/ Sets the subscriber as the default for the duration of the lifetime of the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210484,"byte_end":210562,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ returned [`DefaultGuard`]","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210563,"byte_end":210592,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210593,"byte_end":210596,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210597,"byte_end":210663,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210664,"byte_end":210738,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210739,"byte_end":210811,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210812,"byte_end":210842,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210843,"byte_end":210846,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: ../span/struct.Span.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210847,"byte_end":210885,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210886,"byte_end":210941,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: :../event/struct.Event.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210942,"byte_end":210984,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ [`DefaultGuard`]: ../dispatcher/struct.DefaultGuard.html","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":210985,"byte_end":211045,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":211046,"byte_end":211069,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the subscriber.\"","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/subscriber.rs","byte_start":211117,"byte_end":211179,"line_start":60,"line_end":60,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":353},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39323,"byte_end":39338,"line_start":966,"line_end":966,"column_start":9,"column_end":24},"name":"__macro_support","qualname":"::__macro_support","value":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":393},{"krate":0,"index":396}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40055,"byte_end":40068,"line_start":984,"line_end":984,"column_start":16,"column_end":29},"name":"MacroCallsite","qualname":"::__macro_support::MacroCallsite","value":"MacroCallsite {  }","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"decl_id":null,"docs":" Callsite implementation used by macro-generated code.","sig":null,"attributes":[{"value":"/ Callsite implementation used by macro-generated code.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39580,"byte_end":39637,"line_start":976,"line_end":976,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39642,"byte_end":39645,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39650,"byte_end":39698,"line_start":978,"line_end":978,"column_start":5,"column_end":53}},{"value":"/ This type, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39703,"byte_end":39776,"line_start":979,"line_end":979,"column_start":5,"column_end":78}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39781,"byte_end":39856,"line_start":980,"line_end":980,"column_start":5,"column_end":80}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39861,"byte_end":39937,"line_start":981,"line_end":981,"column_start":5,"column_end":81}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39942,"byte_end":40014,"line_start":982,"line_end":982,"column_start":5,"column_end":77}},{"value":"/ without warning.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40019,"byte_end":40039,"line_start":983,"line_end":983,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40730,"byte_end":40733,"line_start":999,"line_end":999,"column_start":22,"column_end":25},"name":"new","qualname":"<MacroCallsite>::new","value":"pub const fn new(&'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `MacroCallsite` with the specified `Metadata`.","sig":null,"attributes":[{"value":"/ Returns a new `MacroCallsite` with the specified `Metadata`.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40212,"byte_end":40276,"line_start":991,"line_end":991,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40285,"byte_end":40288,"line_start":992,"line_end":992,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40297,"byte_end":40345,"line_start":993,"line_end":993,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40354,"byte_end":40429,"line_start":994,"line_end":994,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40438,"byte_end":40513,"line_start":995,"line_end":995,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40522,"byte_end":40598,"line_start":996,"line_end":996,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40607,"byte_end":40679,"line_start":997,"line_end":997,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40688,"byte_end":40708,"line_start":998,"line_end":998,"column_start":9,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41668,"byte_end":41676,"line_start":1020,"line_end":1020,"column_start":16,"column_end":24},"name":"register","qualname":"<MacroCallsite>::register","value":"pub fn register(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers this callsite with the global callsite registry.","sig":null,"attributes":[{"value":"/ Registers this callsite with the global callsite registry.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40952,"byte_end":41014,"line_start":1007,"line_end":1007,"column_start":9,"column_end":71}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41023,"byte_end":41026,"line_start":1008,"line_end":1008,"column_start":9,"column_end":12}},{"value":"/ If the callsite is already registered, this does nothing.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41035,"byte_end":41096,"line_start":1009,"line_end":1009,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41105,"byte_end":41108,"line_start":1010,"line_end":1010,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41117,"byte_end":41165,"line_start":1011,"line_end":1011,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41174,"byte_end":41249,"line_start":1012,"line_end":1012,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41258,"byte_end":41333,"line_start":1013,"line_end":1013,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41342,"byte_end":41418,"line_start":1014,"line_end":1014,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41427,"byte_end":41499,"line_start":1015,"line_end":1015,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41508,"byte_end":41528,"line_start":1016,"line_end":1016,"column_start":9,"column_end":29}},{"value":"inline(never)","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41537,"byte_end":41553,"line_start":1017,"line_end":1017,"column_start":9,"column_end":25}},{"value":"cold","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":41645,"byte_end":41652,"line_start":1019,"line_end":1019,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42607,"byte_end":42615,"line_start":1040,"line_end":1040,"column_start":16,"column_end":24},"name":"interest","qualname":"<MacroCallsite>::interest","value":"pub fn interest(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Returns the callsite's cached Interest, or registers it for the\n first time if it has not yet been registered.","sig":null,"attributes":[{"value":"/ Returns the callsite's cached Interest, or registers it for the","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42016,"byte_end":42083,"line_start":1030,"line_end":1030,"column_start":9,"column_end":76}},{"value":"/ first time if it has not yet been registered.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42092,"byte_end":42141,"line_start":1031,"line_end":1031,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42150,"byte_end":42153,"line_start":1032,"line_end":1032,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42162,"byte_end":42210,"line_start":1033,"line_end":1033,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42219,"byte_end":42294,"line_start":1034,"line_end":1034,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42303,"byte_end":42378,"line_start":1035,"line_end":1035,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42387,"byte_end":42463,"line_start":1036,"line_end":1036,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42472,"byte_end":42544,"line_start":1037,"line_end":1037,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42553,"byte_end":42573,"line_start":1038,"line_end":1038,"column_start":9,"column_end":29}},{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42582,"byte_end":42591,"line_start":1039,"line_end":1039,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":42906,"byte_end":42916,"line_start":1049,"line_end":1049,"column_start":16,"column_end":26},"name":"is_enabled","qualname":"<MacroCallsite>::is_enabled","value":"pub fn is_enabled(&Self, Interest) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":43319,"byte_end":43332,"line_start":1062,"line_end":1062,"column_start":16,"column_end":29},"name":"disabled_span","qualname":"<MacroCallsite>::disabled_span","value":"pub fn disabled_span(&Self) -> crate::Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":43257,"byte_end":43266,"line_start":1060,"line_end":1060,"column_start":9,"column_end":18}},{"value":"cfg(not(feature = \"log\"))","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":43275,"byte_end":43303,"line_start":1061,"line_end":1061,"column_start":9,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":399},"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":46375,"byte_end":46381,"line_start":1157,"line_end":1157,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132408,"byte_end":132413,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":133069,"byte_end":133074,"line_start":168,"line_end":168,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":141969,"byte_end":141981,"line_start":266,"line_end":266,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142239,"byte_end":142240,"line_start":276,"line_end":276,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142253,"byte_end":142265,"line_start":278,"line_end":278,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143360,"byte_end":143372,"line_start":321,"line_end":321,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143772,"byte_end":143773,"line_start":334,"line_end":334,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143857,"byte_end":143869,"line_start":338,"line_end":338,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165738,"byte_end":165742,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199563,"byte_end":199567,"line_start":1360,"line_end":1360,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199846,"byte_end":199850,"line_start":1371,"line_end":1371,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199963,"byte_end":199967,"line_start":1377,"line_end":1377,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":200906,"byte_end":200912,"line_start":1410,"line_end":1410,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201049,"byte_end":201055,"line_start":1416,"line_end":1416,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201172,"byte_end":201178,"line_start":1422,"line_end":1422,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201306,"byte_end":201312,"line_start":1428,"line_end":1428,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201463,"byte_end":201469,"line_start":1434,"line_end":1434,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201587,"byte_end":201591,"line_start":1440,"line_end":1440,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":202129,"byte_end":202134,"line_start":1464,"line_end":1464,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":203551,"byte_end":203556,"line_start":1501,"line_end":1501,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":203651,"byte_end":203656,"line_start":1507,"line_end":1507,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":203759,"byte_end":203764,"line_start":1513,"line_end":1513,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":203969,"byte_end":203980,"line_start":1524,"line_end":1524,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204421,"byte_end":204432,"line_start":1540,"line_end":1540,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204551,"byte_end":204558,"line_start":1549,"line_end":1549,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204655,"byte_end":204666,"line_start":1556,"line_end":1556,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":205833,"byte_end":205847,"line_start":1588,"line_end":1588,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40188,"byte_end":40201,"line_start":990,"line_end":990,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":43428,"byte_end":43441,"line_start":1067,"line_end":1067,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":43881,"byte_end":43894,"line_start":1083,"line_end":1083,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39126,"byte_end":39136,"line_start":956,"line_end":956,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":69}},{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39146,"byte_end":39151,"line_start":957,"line_end":957,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39207,"byte_end":39217,"line_start":959,"line_end":959,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":113}},{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39227,"byte_end":39240,"line_start":960,"line_end":960,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":182}},{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39250,"byte_end":39254,"line_start":961,"line_end":961,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":191}},{"kind":"Mod","span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":39287,"byte_end":39297,"line_start":963,"line_end":963,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":337}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132084,"byte_end":132090,"line_start":129,"line_end":129,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":399},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":132408,"byte_end":132413,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":20,"index":836},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/field.rs","byte_start":133069,"byte_end":133074,"line_start":168,"line_end":168,"column_start":32,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":20,"index":836},"to":{"krate":0,"index":399}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":133578,"byte_end":133583,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":137217,"byte_end":137222,"line_start":129,"line_end":129,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":141969,"byte_end":141981,"line_start":266,"line_end":266,"column_start":28,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":443},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142239,"byte_end":142240,"line_start":276,"line_end":276,"column_start":31,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":158},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":142253,"byte_end":142265,"line_start":278,"line_end":278,"column_start":9,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143360,"byte_end":143372,"line_start":321,"line_end":321,"column_start":28,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":12708}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143772,"byte_end":143773,"line_start":334,"line_end":334,"column_start":35,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":173},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/instrument.rs","byte_start":143857,"byte_end":143869,"line_start":338,"line_end":338,"column_start":9,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":162832,"byte_end":162838,"line_start":335,"line_end":335,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":399},"to":{"krate":0,"index":239}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":165738,"byte_end":165742,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199563,"byte_end":199567,"line_start":1360,"line_end":1360,"column_start":25,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199846,"byte_end":199850,"line_start":1371,"line_end":1371,"column_start":15,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":9600}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":199963,"byte_end":199967,"line_start":1377,"line_end":1377,"column_start":21,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":200906,"byte_end":200912,"line_start":1410,"line_end":1410,"column_start":29,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":43437},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201049,"byte_end":201055,"line_start":1416,"line_end":1416,"column_start":29,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":43437},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201172,"byte_end":201178,"line_start":1422,"line_end":1422,"column_start":21,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":43437},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201306,"byte_end":201312,"line_start":1428,"line_end":1428,"column_start":36,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":43437},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201463,"byte_end":201469,"line_start":1434,"line_end":1434,"column_start":36,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":43437},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":201587,"byte_end":201591,"line_start":1440,"line_end":1440,"column_start":15,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":202129,"byte_end":202134,"line_start":1464,"line_end":1464,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":203551,"byte_end":203556,"line_start":1501,"line_end":1501,"column_start":25,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":203651,"byte_end":203656,"line_start":1507,"line_end":1507,"column_start":15,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":9600}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":203759,"byte_end":203764,"line_start":1513,"line_end":1513,"column_start":16,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":203969,"byte_end":203980,"line_start":1524,"line_end":1524,"column_start":6,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204421,"byte_end":204432,"line_start":1540,"line_end":1540,"column_start":16,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204551,"byte_end":204558,"line_start":1549,"line_end":1549,"column_start":19,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":497},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":204655,"byte_end":204666,"line_start":1556,"line_end":1556,"column_start":15,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/span.rs","byte_start":205833,"byte_end":205847,"line_start":1588,"line_end":1588,"column_start":22,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":40188,"byte_end":40201,"line_start":990,"line_end":990,"column_start":10,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":43428,"byte_end":43441,"line_start":1067,"line_end":1067,"column_start":23,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":381},"to":{"krate":20,"index":56}},{"span":{"file_name":"/home/loopmonkey/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.30/src/lib.rs","byte_start":43881,"byte_end":43894,"line_start":1083,"line_end":1083,"column_start":25,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":9394}}]}